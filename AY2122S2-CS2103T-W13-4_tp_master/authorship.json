[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W13-4/tp/actions)","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"* onlyFAs is for **high achieving financial advisors** looking to maintain and develop good relationships with current and potential clients. It allows them to maintain an all-encompassing client manager app that can easily arrange for meetups with clients. Currently, target users might have to rely on apps like Google Calendar, and do not have a dedicated platform catered to helping them manage their clientele.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"  * as a place to store all your client details","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"  * as a scheduler for your client meetings","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"* The project extends an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"* For the detailed documentation of this project, see the **[onlyFAs Product Website](https://ay2122s2-cs2103t-w13-4.github.io/tp/)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"sheimoria":7,"-":6}},{"path":"bin/main/view/ClientDisplayPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"\u003cScrollPane  xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"        \u003cAnchorPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"            \u003cVBox fx:id\u003d\"clientDisplayCard\" prefHeight\u003d\"180\" prefWidth\u003d\"360\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"                \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"                    \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"70\" fitWidth\u003d\"70\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"                        \u003cImage url\u003d\"@/images/profile.png\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"heading\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"                            \u003cInsets top\u003d\"10.0\" bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"lastContacted\" styleClass\u003d\"clientSubtitle\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"PHONE\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"ADDRESS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"EMAIL\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"BIRTHDAY\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"NOTE\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"                    \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"POLICIES\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"                        \u003cInsets bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"                \u003cStackPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"                           minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"                    \u003cListView fx:id\u003d\"policyListView\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"                              maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"                              VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zechajw":66}},{"path":"bin/main/view/ClientListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    \u003cHBox minHeight\u003d\"60\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"      \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"50\" fitWidth\u003d\"50\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        \u003cImage url\u003d\"@/images/profile.png\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"      \u003cVBox GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"          \u003cInsets left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"          \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"          \u003cLabel fx:id\u003d\"lastContacted\" styleClass\u003d\"cell_grey_label\" text\u003d\"\\$lastContacted\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"        \u003cFlowPane fx:id\u003d\"policies\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            \u003cInsets top\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":49}},{"path":"bin/main/view/ClientListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":1,"-":6}},{"path":"bin/main/view/CommandBox.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":9}},{"path":"bin/main/view/DarkTheme.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"@font-face {","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"    font-family: Lato;","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"    src: url(\u0027Lato-Regular.ttf\u0027);","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"@font-face {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    font-family: Lato Bold;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"    src: url(\u0027Lato-Bold.ttf\u0027);","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"@font-face {","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    font-family: Lato Black;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    src: url(\u0027Lato-Black.ttf\u0027);","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"@font-face {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    font-family: Lato Light;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    src: url(\u0027Lato-Light.ttf\u0027);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":".background {","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":".label {","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":".label-bright {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":".label-header {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":".text-field {","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":".tab-pane {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":".table-view {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    -fx-base: #FAF9FA;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"    -fx-control-inner-background: #FAF9FA;","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #FAF9FA;","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"            transparent","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"            transparent","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"            transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":".split-pane {","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":".list-view {","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":".list-cell {","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 10 0 10 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 0 0 3 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-03-08"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #FAF9FA;","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-08"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":".list-cell:filled:hover {","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"zechajw"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent #86868b transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"zechajw"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent #3872dd transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent #3872dd transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"zechajw"},"content":".list-cell .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":".cell_big_label {","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Bold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"zechajw"},"content":".cell_grey_label {","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"zechajw"},"content":".cell_small_label {","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"zechajw"},"content":".status-bar {","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #3872dd;","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"zechajw"},"content":".result-display {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-23"},{"lineNumber":173,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"zechajw"},"content":".result-display .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"zechajw"},"content":".status-bar .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"zechajw"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"zechajw"},"content":".menu-bar {","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent #EBEAEE transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"zechajw"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":198,"author":{"gitId":"zechajw"},"content":".menu .left-container {","lastModifiedDate":"2022-03-08"},{"lineNumber":199,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-03-08"},{"lineNumber":200,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":201,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":202,"author":{"gitId":"zechajw"},"content":"/*","lastModifiedDate":"2022-03-08"},{"lineNumber":203,"author":{"gitId":"zechajw"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-08"},{"lineNumber":204,"author":{"gitId":"zechajw"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-08"},{"lineNumber":205,"author":{"gitId":"zechajw"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-08"},{"lineNumber":206,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":207,"author":{"gitId":"zechajw"},"content":".button {","lastModifiedDate":"2022-03-08"},{"lineNumber":208,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-08"},{"lineNumber":209,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-08"},{"lineNumber":210,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":211,"author":{"gitId":"zechajw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":212,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-08"},{"lineNumber":213,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":215,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-08"},{"lineNumber":216,"author":{"gitId":"zechajw"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":217,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":218,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":219,"author":{"gitId":"zechajw"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-08"},{"lineNumber":220,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":221,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-08"},{"lineNumber":222,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":223,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":224,"author":{"gitId":"zechajw"},"content":".button:focused {","lastModifiedDate":"2022-03-08"},{"lineNumber":225,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-08"},{"lineNumber":226,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":227,"author":{"gitId":"zechajw"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-08"},{"lineNumber":228,"author":{"gitId":"zechajw"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":229,"author":{"gitId":"zechajw"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":230,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":231,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"zechajw"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"zechajw"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-08"},{"lineNumber":234,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-08"},{"lineNumber":235,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":236,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":237,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"zechajw"},"content":".button:default {","lastModifiedDate":"2022-03-08"},{"lineNumber":239,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-08"},{"lineNumber":240,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":242,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":243,"author":{"gitId":"zechajw"},"content":".button:default:hover {","lastModifiedDate":"2022-03-08"},{"lineNumber":244,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-08"},{"lineNumber":245,"author":{"gitId":"zechajw"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":247,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":248,"author":{"gitId":"zechajw"},"content":".scroll-pane {","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"zechajw"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"zechajw"},"content":".scroll-bar {","lastModifiedDate":"2022-03-08"},{"lineNumber":253,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":255,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":256,"author":{"gitId":"zechajw"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-03-08"},{"lineNumber":257,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"zechajw"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":259,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":260,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":261,"author":{"gitId":"zechajw"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-03-08"},{"lineNumber":262,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":263,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":264,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":265,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":266,"author":{"gitId":"zechajw"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-03-08"},{"lineNumber":267,"author":{"gitId":"zechajw"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-08"},{"lineNumber":268,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":269,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":270,"author":{"gitId":"zechajw"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-03-08"},{"lineNumber":271,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-03-08"},{"lineNumber":272,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":273,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":274,"author":{"gitId":"zechajw"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-03-08"},{"lineNumber":275,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":276,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":277,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":278,"author":{"gitId":"zechajw"},"content":"#cardPane {","lastModifiedDate":"2022-03-08"},{"lineNumber":279,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":280,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":281,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":282,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":283,"author":{"gitId":"zechajw"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-08"},{"lineNumber":284,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-08"},{"lineNumber":285,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-08"},{"lineNumber":286,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":287,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":288,"author":{"gitId":"zechajw"},"content":"#commandTextField {","lastModifiedDate":"2022-03-08"},{"lineNumber":289,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"zechajw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":291,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 12 10 12 10;","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-28"},{"lineNumber":293,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-08"},{"lineNumber":294,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #3872dd;","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"zechajw"},"content":"    -fx-prompt-text-fill: #3872dd;","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":297,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":298,"author":{"gitId":"sheimoria"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2022-03-17"},{"lineNumber":299,"author":{"gitId":"zechajw"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-08"},{"lineNumber":300,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":301,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":302,"author":{"gitId":"zechajw"},"content":"#resultDisplay {","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 0 0 3 0;","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: transparent transparent #ECECEC transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"zechajw"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-08"},{"lineNumber":308,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"zechajw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":310,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":311,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":312,"author":{"gitId":"zechajw"},"content":"#policies {","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"zechajw"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-08"},{"lineNumber":314,"author":{"gitId":"zechajw"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":315,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":316,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":317,"author":{"gitId":"zechajw"},"content":"#policies .label {","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":319,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: #3872dd;","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":321,"author":{"gitId":"zechajw"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":322,"author":{"gitId":"zechajw"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-08"},{"lineNumber":323,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":325,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"zechajw"},"content":".heading {","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \"Lato Bold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":331,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":332,"author":{"gitId":"zechajw"},"content":".clientDetail {","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-28"},{"lineNumber":334,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 0 12 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"zechajw"},"content":"    -fx-pref-width: 360pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"zechajw"},"content":".clientSubtitle {","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"zechajw"},"content":"    -fx-wrap-text: true !important;","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":348,"author":{"gitId":"zechajw"},"content":".clientSubheading {","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"zechajw"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"zechajw"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"zechajw"},"content":".right-panel {","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"zechajw"},"content":"    -fx-padding: 0 10 0 5;","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"sheimoria":1,"zechajw":355}},{"path":"bin/main/view/Extensions.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":".error {","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":".list-cell:empty {","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"    -fx-background: transparent;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":".tag-selector {","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    -fx-border-color: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":".tooltip-text {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":20}},{"path":"bin/main/view/HelpWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"#copyButton {","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"#copyButton:hover {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"#copyButton:armed {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":19}},{"path":"bin/main/view/HelpWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":44}},{"path":"bin/main/view/MainWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"         title\u003d\"onlyFAs\" minWidth\u003d\"1000\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    \u003cImage url\u003d\"@/images/onlyfas_32.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleTutorial\" text\u003d\"Tutorial\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"          \u003cVBox minWidth\u003d\"600\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            \u003cStackPane maxWidth\u003d\"900\" VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"                \u003cInsets left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\" maxWidth\u003d\"900\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"            \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"              \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"            \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"              \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"joelwongjy":2,"sheimoria":1,"zechajw":71}},{"path":"bin/main/view/MeetingListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"      \u003cLabel fx:id\u003d\"startDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDateTime\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"      \u003cLabel fx:id\u003d\"endDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDateTime\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":3,"-":30}},{"path":"bin/main/view/MeetingListPanel.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003cVBox styleClass\u003d\"right-panel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"  \u003cLabel fx:id\u003d\"meetingsHeader\" styleClass\u003d\"heading\" text\u003d\"Meetings\"/\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zechajw":10}},{"path":"bin/main/view/PolicyListCard.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"                \u003cLabel fx:id\u003d\"policyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            \u003cLabel fx:id\u003d\"policyManager\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"            \u003cLabel fx:id\u003d\"premium\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zechajw":34}},{"path":"bin/main/view/ResultDisplay.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":9}},{"path":"bin/main/view/StatusBarFooter.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":12}},{"path":"bin/main/view/TutorialWindow.css","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"#nextButton, #tutorialMessage {","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"#nextButton {","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"#nextButton:hover {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"#nextButton:armed {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"#tutorialMessageContainer {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zechajw":19}},{"path":"bin/main/view/TutorialWindow.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Tutorial\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"         minWidth\u003d\"600\" minHeight\u003d\"200\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        \u003cURL value\u003d\"@TutorialWindow.css\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"      \u003cVBox fx:id\u003d\"tutorialMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            \u003cLabel fx:id\u003d\"tutorialMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        \u003cButton fx:id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#next\" text\u003d\"Next\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"           \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"zechajw":38}},{"path":"bin/test/view/UiPartTest/invalidFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"Not a valid FXML file","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":1}},{"path":"bin/test/view/UiPartTest/validFile.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":4}},{"path":"bin/test/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"zechajw":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"run {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"    archiveName \u003d \u0027onlyFAs.jar\u0027","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"myc37":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"You can reach us at the email `n.vijay.narayanan@u.nus.edu.sg`","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"### N Vijay Narayanan","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"\u003cimg src\u003d\"images/myc37.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"[[github](http://github.com/myc37)]","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"[[portfolio](team/myc37.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"* Role: Team Lead","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"* Responsibilities: CI/CD + Dev Ops","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"### Loh Jia Ming, Rayner","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"\u003cimg src\u003d\"images/raynerljm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"[[github](http://github.com/raynerljm)] [[portfolio](team/myc37.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"### Wong Jun Yong, Joel","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"\u003cimg src\u003d\"images/joelwongjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"[[github](http://github.com/joelwongjy)]","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"[[portfolio](team/joelwongjy.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"### Au Jun Wen, Zechary","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"\u003cimg src\u003d\"images/zechajw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"[[github](http://github.com/zechajw)]","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"[[portfolio](team/zechajw.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"* Responsibilities: Data","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"### Maleriado Shem Limos","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"\u003cimg src\u003d\"images/sheimoria.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"[[github](http://github.com/sheimoria)]","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"[[portfolio](team/sheimoria.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"* Responsibilities: CI/CD + Dev Ops","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"myc37":26,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"## Table of Contents","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"- [**Design**](#design)","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    * [Client features](#client-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"    * [Last contacted features](#last-contacted-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"    * [Meeting features](#meeting-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"    * [Note features](#note-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"    * [Preference features](#preference-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    * [Policy features](#policy-features)","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"    * [Deleting a client](#deleting-a-client)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"    * [Adding a policy](#adding-a-policy)","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"    * [Editing a policy](#editing-a-policy)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"    * [Deleting a policy](#deleting-a-policy)","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"- depends on some classes in the `Model` component, as it displays `Client` object residing in the `Model`.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a client).","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"zechajw"},"content":"- stores the address book data i.e., all `Client` objects (which are contained in a `UniqueClientList` object).","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"zechajw"},"content":"- stores the currently \u0027selected\u0027 `Client` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"zechajw"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"zechajw"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"sheimoria"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Client` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Client` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"zechajw"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"zechajw"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"zechajw"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"joelwongjy"},"content":"### Client features","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"joelwongjy"},"content":"The client feature is supported by the models `Client`, `Address`, `Date`, `DateTime`, `Email`, `Name`,","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"joelwongjy"},"content":"`NameContainsKeywordsPredicate`, `Note`, `Phone`, `PreferenceMap` and `UniqueClientList`.","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"joelwongjy"},"content":"`NameContainsKeywordsPredicate` checks whether a name contains certain keywords.","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"joelwongjy"},"content":"`UniqueClientList` allows for the adding, deleting and updating of clients while ensuring clients are unique.","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"joelwongjy"},"content":"`Preference Map` allows for the recording of client preferences in a category -\u003e preference pair.","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"joelwongjy"},"content":"The `Client` model has nine attributes","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"joelwongjy"},"content":"1. `name`","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"joelwongjy"},"content":"2. `phone`","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"joelwongjy"},"content":"3. `email`","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"joelwongjy"},"content":"4. `address`","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"joelwongjy"},"content":"5. `birthday`","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"joelwongjy"},"content":"6. `lastContacted` represents the date and time the client was last contacted at","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"joelwongjy"},"content":"7. `policies` stores the client\u0027s policies","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"joelwongjy"},"content":"8. `note` records a note about the client","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"joelwongjy"},"content":"9. `preferences` records the client\u0027s preferences","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"joelwongjy"},"content":"The meeting features supports the following operations:","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"joelwongjy"},"content":"- Adding new client - called via the `AddCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"joelwongjy"},"content":"- Viewing clients in the sidebar - called via the `ViewClientCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"joelwongjy"},"content":"- Updating clients - called via the `EditCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"joelwongjy"},"content":"- Deleting clients - called via the `DeleteCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"joelwongjy"},"content":"- Adding note to client - called via the `AddNoteCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"joelwongjy"},"content":"- Adding preferences to client - called via the `AddPreferenceCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"joelwongjy"},"content":"- Setting client last contacted time - called via the `ContactedCommand`","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"sheimoria"},"content":"### Last contacted features","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"sheimoria"},"content":"This feature, which allows the user to track when they have last contacted a client, is enabled through the","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"sheimoria"},"content":"`lastContacted` attribute of type `DateTime` in the `Client` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"sheimoria"},"content":"`DateTime` objects such as `lastContacted` only accept strings of the format `dd-MM-yy hh:mm`.","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"sheimoria"},"content":"The `ContactedCommand` allows for the updating of the `lastContacted` of a `Client`.","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"sheimoria"},"content":"Below is an example usage scenario:","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"sheimoria"},"content":"Step 1. The user launches the application. `Client`s are loaded from persistent memory. If a `Client`\u0027s `lastContacted`","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"sheimoria"},"content":"has been updated previously, the datetime will show on the user interface i.e. `Last contacted: 21-03-2022 21:03`.","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"sheimoria"},"content":"Otherwise, it will show `Last contacted: -`.","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"sheimoria"},"content":"![LastContacted1](images/LastContacted1.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"sheimoria"},"content":"Step 2. The user inputs `contacted 1 dt/ 21-03-2022 21:03` and presses `Enter`.","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"sheimoria"},"content":"![LastContacted2](images/LastContacted2.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"sheimoria"},"content":"Step 3. The first client\u0027s `lastContacted` is updated to `21-03-2022 21:03`.","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"sheimoria"},"content":"![LastContacted3](images/LastContacted3.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"sheimoria"},"content":"Note that when executing `AddCommand`, there is no need to add a parameter for `lastContacted`. When a new `Client` is","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"sheimoria"},"content":"created, its `lastContacted` will be instantiated with a default value of `01:01:0001 00:00`, which the user","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"sheimoria"},"content":"interface recognises as a blank field i.e. `-`.","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"sheimoria"},"content":"### Meeting features","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"raynerljm"},"content":"The new meeting feature is supported by two new main models `Meeting` and `NonOverlappingMeetingList`. The relationship between `Meeting` to `NonOverlappingMeetingList` is similar to the relationship between `Client` and `UniqueClientList`.","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"raynerljm"},"content":"The `NonOverlappingMeetingList` is stored in `AddressBook` class and ensures that no two meetings overlap.","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"raynerljm"},"content":"The `Meeting` model has four attributes","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"raynerljm"},"content":"1. `startDateTime` represents the starting date and time of the meeting","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"raynerljm"},"content":"2. `endDateTime` represents the ending date and time of the meeting","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"raynerljm"},"content":"3. `client` represents the client that is being met in this meeting","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"raynerljm"},"content":"4. `label` represents the description of the meeting","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"raynerljm"},"content":"The meeting features supports the following operations:","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"zechajw"},"content":"- Adding new meetings - called via the `AddMeetingCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"zechajw"},"content":"- Viewing meetings in the sidebar - called via the `ListMeetingCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"raynerljm"},"content":"- Editing meetings - called via the `EditMeetingCommand`","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"raynerljm"},"content":"- Deleting meetings - called via the `DeleteMeetingCommand`","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"raynerljm"},"content":"Given below is an example usage scenario and how the feature behaves:","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"raynerljm"},"content":"Step 1. The user launches the application. The `NonOverlappingMeetingList` is loaded from persistent memory if it exists and be stored in the AddressBook.","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"raynerljm"},"content":"Step 2. The user executes `addMeeting 1 ms/01-01-2022 11:00 me/01-01-2022 13:00` to schedule a meeting with the first client in the list on 1st January 2022 from 11:00AM to 1:00PM. The `addMeeting` command instantiates a new `Meeting` object and calls the `Model#addMeeting()` to add the object to the `NonOverlappingMeetingList`.","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"raynerljm"},"content":"![Meeting1Add](images/Meeting1Add.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":278,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":279,"author":{"gitId":"raynerljm"},"content":"Step 3. The user executes `meetings` to view the meetings on the right sidebar.","lastModifiedDate":"2022-03-22"},{"lineNumber":280,"author":{"gitId":"raynerljm"},"content":"![Meeting2List](images/Meeting2List.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":281,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"raynerljm"},"content":"Step 4. The user executes `updateMeeting 1 me/2022-01-01,14:00` to edit the meeting to set the end time to 2:00PM.","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"raynerljm"},"content":"![Meeting3Update](images/Meeting3Update.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"raynerljm"},"content":"Step 5. The user executes `deleteMeeting 1` to delete the meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"raynerljm"},"content":"![Meeting4Delete](images/Meeting4Delete.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"zechajw"},"content":"### Note features","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"zechajw"},"content":"The new note feature is supported by a new model `Note`. Each `Client` object contains a `Note` attribute to specify a specific `Note` that the user wishes to record about the `Client`.","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"zechajw"},"content":"The `Note` model has a single attribute","lastModifiedDate":"2022-03-23"},{"lineNumber":293,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"zechajw"},"content":"1. `value` that represents the `String` value that is stored in the note.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"zechajw"},"content":"The note feature supports the following operations:","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"zechajw"},"content":"- Adding a note - called via the `AddNoteCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"zechajw"},"content":"Given below is an example usage scenario and how the feature behaves:","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"zechajw"},"content":"Step 1: The user launches the application","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"zechajw"},"content":"Step 2: The user executes `addNote 1 nt/Likes to gym` to add a `Note` to the existing `Client` object that represents the first client in the list containing `\"Likes to gym\" as the value.","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"zechajw"},"content":"![Note1Add](images/Note1Add.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"zechajw"},"content":"### Preference features","lastModifiedDate":"2022-03-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"zechajw"},"content":"The new preference feature is supported by a new model `PreferenceMap`","lastModifiedDate":"2022-03-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":312,"author":{"gitId":"zechajw"},"content":"The `PreferenceMap` model has a single attribute. The existing `Client` model now contains a `PreferenceMap` representing all the preferences of the specific `Client`.","lastModifiedDate":"2022-03-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"zechajw"},"content":"1. `preferences` that represents stores the key, value pairs of the preferenceKey and preferenceDetails","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":316,"author":{"gitId":"zechajw"},"content":"The preference feature supports the following operations:","lastModifiedDate":"2022-03-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":318,"author":{"gitId":"zechajw"},"content":"- Adding of new preferences - called via the `AddPreferenceCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":319,"author":{"gitId":"zechajw"},"content":"- Deleting of existing preferences - called via the `DeletePreferenceCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":321,"author":{"gitId":"zechajw"},"content":"Given below is an example usage scenario and how the feature behaves:","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"zechajw"},"content":"Step 1: The user launches the application","lastModifiedDate":"2022-03-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":325,"author":{"gitId":"zechajw"},"content":"Step 2: The user executes `addPref 1 pk/Drink pd/Bubble Tea` to add the Drink: Bubble Tea preference to the first client in the contact list. The `addPref` command calls the `addPref` command of the existing `Client` object that represents the first client in the list, and adds the `\"Drink\", \"Bubble Tea\"` key-value pair into the preferences of the specified `Client`.","lastModifiedDate":"2022-03-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":327,"author":{"gitId":"zechajw"},"content":"![Preference1Add](images/Preference1Add.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":328,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":329,"author":{"gitId":"zechajw"},"content":"Step 3: If the user would like to remove the `\"Drink\", \"Bubble Tea\"` preference as specified in the `addPref` command in Step 2, they can execute `deletePref 1 pk/Drink` to remove the preference specified by the key `\"Drink\"` from the existing `Client` object represented at the index `1`.","lastModifiedDate":"2022-03-23"},{"lineNumber":330,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":331,"author":{"gitId":"zechajw"},"content":"![Preference2Delete](images/Preference2Delete.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":332,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":333,"author":{"gitId":"myc37"},"content":"### Policy features","lastModifiedDate":"2022-03-23"},{"lineNumber":334,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":335,"author":{"gitId":"myc37"},"content":"The new meeting feature is supported by two new models `Policy` and `Premium`.","lastModifiedDate":"2022-03-23"},{"lineNumber":336,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":337,"author":{"gitId":"myc37"},"content":"The `Policy` model has four attributes","lastModifiedDate":"2022-03-23"},{"lineNumber":338,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":339,"author":{"gitId":"myc37"},"content":"1. `name` represents the name of the policy","lastModifiedDate":"2022-03-23"},{"lineNumber":340,"author":{"gitId":"myc37"},"content":"2. `company` represents the name of the company which sells the policy","lastModifiedDate":"2022-03-23"},{"lineNumber":341,"author":{"gitId":"myc37"},"content":"3. `policyManager` represents the name of the person who is managing the policy","lastModifiedDate":"2022-03-23"},{"lineNumber":342,"author":{"gitId":"myc37"},"content":"4. `premium` represents the monthly premium payment for the policy","lastModifiedDate":"2022-03-23"},{"lineNumber":343,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":344,"author":{"gitId":"myc37"},"content":"The policy features supports the following operations:","lastModifiedDate":"2022-03-23"},{"lineNumber":345,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":346,"author":{"gitId":"zechajw"},"content":"- Adding new policies - called via the `AddPolicyCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":347,"author":{"gitId":"zechajw"},"content":"- Editing policies - called via the `EditPolicyCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"zechajw"},"content":"- Deleting policies - called via the `DeletePolicyCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"zechajw"},"content":"- _In progress_: View all policies - called via the `ViewPoliciesCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":351,"author":{"gitId":"myc37"},"content":"Given below is an example usage scenario and how the feature behaves:","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"myc37"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"myc37"},"content":"Step 2. The user executes `addPolicy 1 n/Medicare Plus c/Medicare pm/Zechary $/100` to add the Medicare Plus policy to the first client in the contact list. The `addPolicy` command instantiates a new `Policy` object which will be added to the existing `Client` object that represents the first client in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":356,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":357,"author":{"gitId":"myc37"},"content":"![Policy1Add](images/Policy1Add.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":358,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":359,"author":{"gitId":"myc37"},"content":"Step 3. The user executes `editPolicy 1 pi/1 $/200` to update the monthly premium of the first policy of the first client in the contact list from $100 up to $200.","lastModifiedDate":"2022-03-23"},{"lineNumber":360,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":361,"author":{"gitId":"myc37"},"content":"![Policy2Edit](images/Policy2Edit.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":362,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":363,"author":{"gitId":"myc37"},"content":"Step 4. The user executes `deletePolicy 1 pi/1` to delete the first policy of the first client in the contact list.","lastModifiedDate":"2022-03-23"},{"lineNumber":364,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":365,"author":{"gitId":"myc37"},"content":"![Policy3Delete](images/Policy3Delete.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":366,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":367,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"zechajw"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2022-03-23"},{"lineNumber":372,"author":{"gitId":"zechajw"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2022-03-23"},{"lineNumber":373,"author":{"gitId":"zechajw"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2022-03-23"},{"lineNumber":374,"author":{"gitId":"zechajw"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2022-03-23"},{"lineNumber":375,"author":{"gitId":"zechajw"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2022-03-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"zechajw"},"content":"- has a need to manage a significant number of client contacts","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"zechajw"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2022-03-23"},{"lineNumber":387,"author":{"gitId":"zechajw"},"content":"- can type fast","lastModifiedDate":"2022-03-23"},{"lineNumber":388,"author":{"gitId":"zechajw"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2022-03-23"},{"lineNumber":389,"author":{"gitId":"zechajw"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"joelwongjy"},"content":"**Value proposition**:","lastModifiedDate":"2022-03-01"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"zechajw"},"content":"- easily contact clients","lastModifiedDate":"2022-03-23"},{"lineNumber":394,"author":{"gitId":"zechajw"},"content":"- arrange for meetups with clients in one place","lastModifiedDate":"2022-03-23"},{"lineNumber":395,"author":{"gitId":"zechajw"},"content":"- manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                       | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"zechajw"},"content":"| -------- | ------------------------------------------ | -------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2022-03-23"},{"lineNumber":403,"author":{"gitId":"joelwongjy"},"content":"| `* * *`  | potential user                             | see the app populated with sample data             | see how the app will look like when it is in use                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":404,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                             | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"sheimoria"},"content":"| `* * *`  | user                                       | add a new client                                   |                                                                        |","lastModifiedDate":"2022-03-17"},{"lineNumber":406,"author":{"gitId":"sheimoria"},"content":"| `* * *`  | user                                       | update a client                                    | handle changes in client details                                       |","lastModifiedDate":"2022-03-17"},{"lineNumber":407,"author":{"gitId":"sheimoria"},"content":"| `* * *`  | user                                       | delete a client                                    | remove non-essential contacts                                          |","lastModifiedDate":"2022-03-17"},{"lineNumber":408,"author":{"gitId":"myc37"},"content":"| `* * *`  | user                                       | view all the clients in my contact list            |                                                                        |","lastModifiedDate":"2022-03-23"},{"lineNumber":409,"author":{"gitId":"sheimoria"},"content":"| `* * *`  | user                                       | find a client by name                              | locate details of clients without having to go through the entire list |","lastModifiedDate":"2022-03-17"},{"lineNumber":410,"author":{"gitId":"myc37"},"content":"| `* * *`  | user                                       | schedule a meeting with a client                   |                                                                        |","lastModifiedDate":"2022-03-23"},{"lineNumber":411,"author":{"gitId":"myc37"},"content":"| `* * *`  | user                                       | view my meeting schedule on a given today          | know what timings I will be occupied on that day                       |","lastModifiedDate":"2022-03-23"},{"lineNumber":412,"author":{"gitId":"joelwongjy"},"content":"| `* *`    | user                                       | get warnings if there are conflicts in my schedule | avoid scheduling clashing meetings                                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":413,"author":{"gitId":"joelwongjy"},"content":"| `* *`    | user                                       | add notes about my clients                         | record details about clients                                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":414,"author":{"gitId":"joelwongjy"},"content":"| `* *`    | user                                       | add details of my client\u0027s policies                | categorize clients by policies                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":415,"author":{"gitId":"myc37"},"content":"| `* *`    | user                                       | update details of my client\u0027s policies             | accommodate changes such as change in monthly premium                  |","lastModifiedDate":"2022-03-23"},{"lineNumber":416,"author":{"gitId":"myc37"},"content":"| `* *`    | user                                       | delete policies                                    | remove policies that clients have surrendered or terminated            |","lastModifiedDate":"2022-03-23"},{"lineNumber":417,"author":{"gitId":"joelwongjy"},"content":"| `* *`    | user                                       | record my client\u0027s individual preferences          | better cater to their needs                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":418,"author":{"gitId":"sheimoria"},"content":"| `*`      | user with many clients in the address book | sort clients by name                               | locate a client easily                                                 |","lastModifiedDate":"2022-03-17"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"zechajw"},"content":"_{More to be added}_","lastModifiedDate":"2022-03-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"joelwongjy"},"content":"(For all use cases below, the **System** is `onlyFAs` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-01"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"sheimoria"},"content":"**Use case: Add a client**","lastModifiedDate":"2022-03-17"},{"lineNumber":427,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":428,"author":{"gitId":"joelwongjy"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":429,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":430,"author":{"gitId":"sheimoria"},"content":"1. User requests to add a client","lastModifiedDate":"2022-03-17"},{"lineNumber":431,"author":{"gitId":"sheimoria"},"content":"2. onlyFAs prompts user to add data about a new client","lastModifiedDate":"2022-03-17"},{"lineNumber":432,"author":{"gitId":"sheimoria"},"content":"3. User enters details of new client","lastModifiedDate":"2022-03-17"},{"lineNumber":433,"author":{"gitId":"sheimoria"},"content":"4. onlyFAs adds the new client","lastModifiedDate":"2022-03-17"},{"lineNumber":434,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":435,"author":{"gitId":"joelwongjy"},"content":"Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":436,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":437,"author":{"gitId":"joelwongjy"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":438,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":439,"author":{"gitId":"joelwongjy"},"content":"**Use case: Update a client\u0027s details**","lastModifiedDate":"2022-03-01"},{"lineNumber":440,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":441,"author":{"gitId":"joelwongjy"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":442,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":443,"author":{"gitId":"joelwongjy"},"content":"1. User requests to edit a specific client in the list","lastModifiedDate":"2022-03-01"},{"lineNumber":444,"author":{"gitId":"joelwongjy"},"content":"2. onlyFAs prompts user to enter client\u0027s email","lastModifiedDate":"2022-03-01"},{"lineNumber":445,"author":{"gitId":"joelwongjy"},"content":"3. User enters client\u0027s email","lastModifiedDate":"2022-03-01"},{"lineNumber":446,"author":{"gitId":"joelwongjy"},"content":"4. onlyFAs prompts user to enter new details","lastModifiedDate":"2022-03-01"},{"lineNumber":447,"author":{"gitId":"joelwongjy"},"content":"5. User enters new details of client","lastModifiedDate":"2022-03-01"},{"lineNumber":448,"author":{"gitId":"joelwongjy"},"content":"6. onlyFAs edits the client details","lastModifiedDate":"2022-03-01"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":450,"author":{"gitId":"joelwongjy"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":451,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":452,"author":{"gitId":"joelwongjy"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":453,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":454,"author":{"gitId":"zechajw"},"content":"- 3a. The email does not belong to any client.","lastModifiedDate":"2022-03-23"},{"lineNumber":455,"author":{"gitId":"zechajw"},"content":"  - 3a1. onlyFAs shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":456,"author":{"gitId":"zechajw"},"content":"  - Use case resumes at step 2.","lastModifiedDate":"2022-03-23"},{"lineNumber":457,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":458,"author":{"gitId":"joelwongjy"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":459,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":460,"author":{"gitId":"joelwongjy"},"content":"**Use case: Delete a client**","lastModifiedDate":"2022-03-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"sheimoria"},"content":"1.  User requests to list clients","lastModifiedDate":"2022-03-17"},{"lineNumber":465,"author":{"gitId":"sheimoria"},"content":"2.  onlyFAs shows a list of clients","lastModifiedDate":"2022-03-17"},{"lineNumber":466,"author":{"gitId":"sheimoria"},"content":"3.  User requests to delete a specific client in the list","lastModifiedDate":"2022-03-17"},{"lineNumber":467,"author":{"gitId":"sheimoria"},"content":"4.  onlyFAs deletes the client","lastModifiedDate":"2022-03-17"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"zechajw"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-03-23"},{"lineNumber":474,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":475,"author":{"gitId":"zechajw"},"content":"  - Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":476,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":477,"author":{"gitId":"zechajw"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":478,"author":{"gitId":"zechajw"},"content":"  - 3a1. onlyFAs shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":479,"author":{"gitId":"zechajw"},"content":"  - Use case resumes at step 2.","lastModifiedDate":"2022-03-23"},{"lineNumber":480,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":481,"author":{"gitId":"joelwongjy"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":482,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":483,"author":{"gitId":"joelwongjy"},"content":"**Use case: Find a client by name**","lastModifiedDate":"2022-03-01"},{"lineNumber":484,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":485,"author":{"gitId":"joelwongjy"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":486,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":487,"author":{"gitId":"joelwongjy"},"content":"1. User requests to search","lastModifiedDate":"2022-03-01"},{"lineNumber":488,"author":{"gitId":"joelwongjy"},"content":"2. onlyFAs prompts user to enter client name","lastModifiedDate":"2022-03-01"},{"lineNumber":489,"author":{"gitId":"joelwongjy"},"content":"3. User enters client name","lastModifiedDate":"2022-03-01"},{"lineNumber":490,"author":{"gitId":"joelwongjy"},"content":"4. onlyFAs displays matching client’s details","lastModifiedDate":"2022-03-01"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"joelwongjy"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"zechajw"},"content":"- 2a. There are no matching clients.","lastModifiedDate":"2022-03-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"zechajw"},"content":"  - Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"zechajw"},"content":"- 2b. There are multiple matching clients.","lastModifiedDate":"2022-03-23"},{"lineNumber":501,"author":{"gitId":"zechajw"},"content":"  - 2b1. onlyFAs lists all matching clients.","lastModifiedDate":"2022-03-23"},{"lineNumber":502,"author":{"gitId":"zechajw"},"content":"  - 2b2. User requests to view a specific client in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":503,"author":{"gitId":"zechajw"},"content":"  - Use case resumes at step 4.","lastModifiedDate":"2022-03-23"},{"lineNumber":504,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":505,"author":{"gitId":"joelwongjy"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":506,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":507,"author":{"gitId":"joelwongjy"},"content":"**Use case: Schedule meeting with a client**","lastModifiedDate":"2022-03-01"},{"lineNumber":508,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":509,"author":{"gitId":"joelwongjy"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":510,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":511,"author":{"gitId":"joelwongjy"},"content":"1. User requests to schedule meeting with client","lastModifiedDate":"2022-03-01"},{"lineNumber":512,"author":{"gitId":"joelwongjy"},"content":"2. onlyFAs prompts user to enter client email","lastModifiedDate":"2022-03-01"},{"lineNumber":513,"author":{"gitId":"joelwongjy"},"content":"3. User enters client email","lastModifiedDate":"2022-03-01"},{"lineNumber":514,"author":{"gitId":"joelwongjy"},"content":"4. onlyFAs prompts user to enter meeting details","lastModifiedDate":"2022-03-01"},{"lineNumber":515,"author":{"gitId":"joelwongjy"},"content":"5. User enters meeting details","lastModifiedDate":"2022-03-01"},{"lineNumber":516,"author":{"gitId":"joelwongjy"},"content":"6. onlyFAs requests for confirmation","lastModifiedDate":"2022-03-01"},{"lineNumber":517,"author":{"gitId":"joelwongjy"},"content":"7. User confirms","lastModifiedDate":"2022-03-01"},{"lineNumber":518,"author":{"gitId":"joelwongjy"},"content":"8. onlyFAs displays the confirmed client and meeting details","lastModifiedDate":"2022-03-01"},{"lineNumber":519,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":520,"author":{"gitId":"joelwongjy"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":521,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":522,"author":{"gitId":"joelwongjy"},"content":"**Extensions:**","lastModifiedDate":"2022-03-01"},{"lineNumber":523,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":524,"author":{"gitId":"zechajw"},"content":"- 3a. The email does not belong to any client.","lastModifiedDate":"2022-03-23"},{"lineNumber":525,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"zechajw"},"content":"  - 3a1. onlyFAs shows an error message.","lastModifiedDate":"2022-03-23"},{"lineNumber":527,"author":{"gitId":"zechajw"},"content":"  - Use case resumes at step 2.","lastModifiedDate":"2022-03-23"},{"lineNumber":528,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":529,"author":{"gitId":"zechajw"},"content":"- 5a. onlyFAs detects a conflicting meeting in the schedule","lastModifiedDate":"2022-03-23"},{"lineNumber":530,"author":{"gitId":"zechajw"},"content":"  - 5a1. onlyFAs requests for user to enter another meeting time.","lastModifiedDate":"2022-03-23"},{"lineNumber":531,"author":{"gitId":"zechajw"},"content":"  - 5a2. User enters new meeting time.","lastModifiedDate":"2022-03-23"},{"lineNumber":532,"author":{"gitId":"zechajw"},"content":"  - Steps 5a1-5a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-03-23"},{"lineNumber":533,"author":{"gitId":"zechajw"},"content":"  - Use case resumes from step 6.","lastModifiedDate":"2022-03-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":535,"author":{"gitId":"joelwongjy"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":536,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":537,"author":{"gitId":"joelwongjy"},"content":"**Use case: View my meeting schedule for today**","lastModifiedDate":"2022-03-01"},{"lineNumber":538,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":539,"author":{"gitId":"joelwongjy"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":541,"author":{"gitId":"joelwongjy"},"content":"1. User requests to show meeting schedule","lastModifiedDate":"2022-03-01"},{"lineNumber":542,"author":{"gitId":"joelwongjy"},"content":"2. onlyFAs displays meetings for today.","lastModifiedDate":"2022-03-01"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":544,"author":{"gitId":"joelwongjy"},"content":"   Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":546,"author":{"gitId":"joelwongjy"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":548,"author":{"gitId":"zechajw"},"content":"- 2a. There are no meetings today.","lastModifiedDate":"2022-03-23"},{"lineNumber":549,"author":{"gitId":"zechajw"},"content":"  - Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"sheimoria"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-17"},{"lineNumber":555,"author":{"gitId":"joelwongjy"},"content":"3. Should be able to record at least 1000 meetings without a noticeable lag in data retrieval.","lastModifiedDate":"2022-03-02"},{"lineNumber":556,"author":{"gitId":"joelwongjy"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-02"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"zechajw"},"content":"_{More to be added}_","lastModifiedDate":"2022-03-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"zechajw"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-03-23"},{"lineNumber":563,"author":{"gitId":"zechajw"},"content":"- **Client**: A contact using the services of the user (a Financial Advisor).","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"zechajw"},"content":"---","lastModifiedDate":"2022-03-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"myc37"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a sample contact list containing 6 clients. The window size may not be optimum.","lastModifiedDate":"2022-03-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"sheimoria"},"content":"### Deleting a client","lastModifiedDate":"2022-03-17"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"sheimoria"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2022-03-17"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"sheimoria"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"myc37"},"content":"   2. Test case: `deleteClient 1`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"myc37"},"content":"   3. Test case: `deleteClient 0`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":603,"author":{"gitId":"sheimoria"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-17"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"myc37"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"myc37"},"content":"   5. _{ more test cases …​ }_","lastModifiedDate":"2022-03-23"},{"lineNumber":609,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":610,"author":{"gitId":"myc37"},"content":"### Adding a policy","lastModifiedDate":"2022-03-23"},{"lineNumber":611,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":612,"author":{"gitId":"myc37"},"content":"1. Adding a policy to a client in the contact list","lastModifiedDate":"2022-03-23"},{"lineNumber":613,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":614,"author":{"gitId":"myc37"},"content":"   1. Prerequisites: There must be at least one client in the contact list.","lastModifiedDate":"2022-03-23"},{"lineNumber":615,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":616,"author":{"gitId":"myc37"},"content":"   1. Test case: `addPolicy 1 n/Medicare Plus c/Medicare pm/Zechary $/100`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":617,"author":{"gitId":"zechajw"},"content":"      Expected: A blue tag entitled _Medicare Plus_ should appear under the name of the first client in the contact list. Status message shows that the number of policies of the client is 1 higher than before.","lastModifiedDate":"2022-03-23"},{"lineNumber":618,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":619,"author":{"gitId":"myc37"},"content":"   1. Test case: `addPolicy 1 n/Medicare Plus`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":620,"author":{"gitId":"myc37"},"content":"      Expected: No policy is added. Error details shown in the status message.","lastModifiedDate":"2022-03-23"},{"lineNumber":621,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":622,"author":{"gitId":"myc37"},"content":"   1. Other incorrect delete commands to try: `addPolicy`, `addPolicy x n/Medicare Plus c/Medicare pm/Zechary $/100`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":623,"author":{"gitId":"myc37"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-03-23"},{"lineNumber":624,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":625,"author":{"gitId":"zechajw"},"content":"1*{ more test cases …​ }*","lastModifiedDate":"2022-03-23"},{"lineNumber":626,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":627,"author":{"gitId":"myc37"},"content":"### Editing a policy","lastModifiedDate":"2022-03-23"},{"lineNumber":628,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":629,"author":{"gitId":"myc37"},"content":"1. Editing a policy of a client in the contact list","lastModifiedDate":"2022-03-23"},{"lineNumber":630,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":631,"author":{"gitId":"myc37"},"content":"   1. Prerequisites: There must be at least one client in the contact list with at least one policy.","lastModifiedDate":"2022-03-23"},{"lineNumber":632,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":633,"author":{"gitId":"myc37"},"content":"   1. Test case: `editPolicy 1 pi/1 n/New Policy`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":634,"author":{"gitId":"zechajw"},"content":"      Expected: The first blue tag under the name of the first client in the contact list should now be entitled _New Policy_. Status message shows that the number of policies of the client is the same as before.","lastModifiedDate":"2022-03-23"},{"lineNumber":635,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":636,"author":{"gitId":"myc37"},"content":"   1. Test case: `editPolicy 1 pi/1`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":637,"author":{"gitId":"myc37"},"content":"      Expected: No policy is edited. Error details shown in the status message.","lastModifiedDate":"2022-03-23"},{"lineNumber":638,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":639,"author":{"gitId":"myc37"},"content":"   1. Other incorrect delete commands to try: `editPolicy`, `editPolicy x pi/y`, `...` (where x is larger than the list size or y is larger than client\u0027s policy list size)\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":640,"author":{"gitId":"myc37"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-03-23"},{"lineNumber":641,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":642,"author":{"gitId":"zechajw"},"content":"1*{ more test cases …​ }*","lastModifiedDate":"2022-03-23"},{"lineNumber":643,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":644,"author":{"gitId":"myc37"},"content":"### Deleting a policy","lastModifiedDate":"2022-03-23"},{"lineNumber":645,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":646,"author":{"gitId":"myc37"},"content":"1. Deleting a policy of a client in the contact list","lastModifiedDate":"2022-03-23"},{"lineNumber":647,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"myc37"},"content":"   1. Prerequisites: There must be at least one client in the contact list with at least one policy.","lastModifiedDate":"2022-03-23"},{"lineNumber":649,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":650,"author":{"gitId":"myc37"},"content":"   1. Test case: `deletePolicy 1 pi/1`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":651,"author":{"gitId":"myc37"},"content":"      Expected: The first blue tag under the name of the first client in the contact list should disappear. Status message shows that the number of policies of the client is 1 less than before.","lastModifiedDate":"2022-03-23"},{"lineNumber":652,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":653,"author":{"gitId":"myc37"},"content":"   1. Test case: `deletePolicy 1`\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":654,"author":{"gitId":"myc37"},"content":"      Expected: No policy is deleted. Error details shown in the status message.","lastModifiedDate":"2022-03-23"},{"lineNumber":655,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":656,"author":{"gitId":"myc37"},"content":"   1. Other incorrect delete commands to try: `deletePolicy`, `deletePolicy x pi/y`, `...` (where x is larger than the list size or y is larger than client\u0027s policy list size)\u003cbr\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"myc37"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-03-23"},{"lineNumber":658,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":659,"author":{"gitId":"zechajw"},"content":"1*{ more test cases …​ }*","lastModifiedDate":"2022-03-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sheimoria":72,"joelwongjy":99,"myc37":81,"raynerljm":28,"zechajw":132,"-":255}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"## Introduction - What is onlyFAs?","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"\u003cstrong\u003eonlyFAs\u003c/strong\u003e is for both *upcoming* and *high achieving* financial advisors looking to *maintain* and *develop* good relationships with *current* and *potential* clients.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"### What can onlyFAs do?","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"It allows users to:","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"1. Record all clients in the app","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"2. Manage their clients\u0027 personal details","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"3. Manage their clients\u0027 portfolios\u0027 details","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"4. Track your meetings with your clients","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"5. Track the date that each client was last contacted","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"Currently, financial advisors might have to rely on apps like Google Calendar or Microsoft Excel, and do not have a ","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"dedicated platform catered to helping them manage their clientele. This is where *onlyFAs* bridges the gap.","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"## Table of Contents","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"- [Features](#features)","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"  1. [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"  2. [Add client: `addClient`](#add-client-addclient)","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"  3. [View client: `viewClient`](#view-client-viewclient)","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"  4. [Update client: `updateClient`](#update-client-updateclient)","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"  5. [Delete client: `deleteClient`](#delete-client-deleteclient)","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"  6. [Update last contacted of client: `contacted`](#update-last-contacted-of-client-contacted)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"  7. [Add notes for client: `addNote`](#add-note-for-client-addnote)","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"  8. [Add preferences to client: `addPref`](#add-preferences-to-client-addpref)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"  9. [Add policy: `addPolicy`](#add-policy-addpolicy)","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"  10. [Edit policy: `editPolicy`](#edit-policy-editpolicy)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"  11. [Delete policy: `deletePolicy`](#delete-policy-deletepolicy)","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"  12. [Add meeting: `addMeeting`](#add-meeting-addmeeting)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"  13. [View All Meetings: `meetings`](#view-all-meetings-meetings)","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"  14. [Edit Meeting Details: `editMeeting`](#edit-meeting-details-updatemeeting)","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"  15. [Delete Meeting: `deleteMeeting`](#delete-meeting-deletemeeting)","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"  16. [Close Meeting: `closeMeeting`]()","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"  17. [Sort Clients: `sortClients`](#sort-clients-sortclients)","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"  18. [Filter Clients: `filterClients`](#filter-clients-filterclients)","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"  19. [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"  20. [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"  21. [Saving the data](#saving-the-data)","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"  22. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"  23. [Archiving data files `[coming in v2.0]`](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"- [Mockups](#mockups)","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"1. Download the latest `onlyfas.jar` from [here](https://github.com/AY2122S2-CS2103T-W13-4/tp/releases).","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"1. Copy the file to the folder you want to use as the **home folder** for _onlyFAs_.","lastModifiedDate":"2022-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"   ![Ui](images/gui-sample.jpg)","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"   - **`list`** : Lists all contacts.","lastModifiedDate":"2022-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"   - **`addClient`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a client","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"     named `John Doe` to your contact list.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"   - **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"   - **`clear`** : Deletes all contacts.","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"   - **`exit`** : Exits the app.","lastModifiedDate":"2022-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"myc37"},"content":"### Add client: `addClient`","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"Adds a client to the list of managed clients.","lastModifiedDate":"2022-04-06"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"Format: `addClient n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [lc/LAST_CONTACTED]`","lastModifiedDate":"2022-04-06"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"- `BIRTHDAY` must be in `dd-MM-yyyy` format.","lastModifiedDate":"2022-04-06"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"- `LAST_CONTACTED` must be in `dd-MM-yyyy hh:mm` format.","lastModifiedDate":"2022-04-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"sheimoria"},"content":"- `addClient n/Vijay Narayanan p/91234567 e/vijay@email.com a/210 Street 3 b/21-03-1999 lc/21-03-2022 21:03`","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"### View client: `viewClient`","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"myc37"},"content":"View a client in your address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":134,"author":{"gitId":"myc37"},"content":"Format: `viewClient INDEX`","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"myc37"},"content":"Examples:","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":138,"author":{"gitId":"myc37"},"content":"- `viewClient 1`","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"### Update client: `updateClient`","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":142,"author":{"gitId":"myc37"},"content":"Update a client in your address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"sheimoria"},"content":"Format: `updateClient INDEX [n/NEW_NAME] [p/NEW_PHONE_NUMBER] [e/NEW_EMAIL] [a/NEW_ADDRESS] [b/NEW_BIRTHDAY] ","lastModifiedDate":"2022-04-06"},{"lineNumber":145,"author":{"gitId":"sheimoria"},"content":"[lc/NEW_LAST_CONTACTED]`","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"sheimoria"},"content":"- `NEW_BIRTHDAY` must be in `dd-MM-yyyy` format.","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"- `NEW_LAST_CONTACTED` must be in `dd-MM-yyyy hh:mm` format.","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":152,"author":{"gitId":"sheimoria"},"content":"- `updateClient 1 n/Shem Maleriado p/81234567 e/shem@email.com a/210 Avenue 1 b/21-01-1999 lc/21-01-2022 21:01`","lastModifiedDate":"2022-04-06"},{"lineNumber":153,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"myc37"},"content":"### Delete client: `deleteClient`","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"Delete a client from your address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"myc37"},"content":"Format: `deleteClient INDEX`","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"zechajw"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"- `deleteClient 1`","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":164,"author":{"gitId":"sheimoria"},"content":"### Update last contacted of client: `contacted`","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"sheimoria"},"content":"Updates the last contacted datetime of a client.","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"sheimoria"},"content":"Format: `contacted INDEX dt/DATETIME`","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"sheimoria"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"sheimoria"},"content":"- `contacted 1 dt/21-03-2022 21:03`","lastModifiedDate":"2022-04-06"},{"lineNumber":173,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"myc37"},"content":"### Add note for client: `addNote`","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"myc37"},"content":"Adds a plaintext note to a specific client","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"myc37"},"content":"Format: `addNote INDEX nt/NOTE`","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":180,"author":{"gitId":"myc37"},"content":"- `addNote 1 nt/Commando NSF with high risk of injury`","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"myc37"},"content":"- `addNote 2 nt/Look up on policies for emergency care`","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"zechajw"},"content":"### Add preferences to client: `addPref`","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"myc37"},"content":"Adds a preference to a specific client","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"myc37"},"content":"Format: `addPref INDEX cat/CATEGORY pref/PREFERENCE`","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":191,"author":{"gitId":"myc37"},"content":"- `addPref 1 cat/Drink pref/Coke`","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"myc37"},"content":"- `addPref 2 cat/Cigarettes pref/Marlboro`","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"zechajw"},"content":"### Delete preferences from client: `deletePref`","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"myc37"},"content":"Deletes the preference from the specified client","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"myc37"},"content":"Format: `deletePref INDEX cat/CATEGORY`","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"zechajw"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"myc37"},"content":"- `deletePref 1 cat/Drink`","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"myc37"},"content":"- `deletePref 2 cat/Cigarettes`","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"myc37"},"content":"### Add policy: `addPolicy`","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"myc37"},"content":"Adds an insurance policy to a specific client","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"myc37"},"content":"Format: `addPolicy INDEX n/POLICY_NAME c/COMPANY pm/POLICY_MANAGER_NAME $/PREMIUM_AMOUNT`","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"myc37"},"content":"- `addPolicy 1 n/Medicare Plus c/Medicare pm/Zechary $/100`","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"myc37"},"content":"- `addPolicy 2 n/Car Insurance c/Mercedes pm/Vijay $/250`","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"myc37"},"content":"### Edit policy: `editPolicy`","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":218,"author":{"gitId":"myc37"},"content":"Updates an insurance policy for a specific client","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"zechajw"},"content":"Format: `editPolicy INDEX pi/POLICY_INDEX [n/POLICY_NAME] [c/COMPANY] [pm/POLICY_MANAGER_NAME] [$/PREMIUM_AMOUNT]`","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"myc37"},"content":"Examples:","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"myc37"},"content":"- `editPolicy 1 pi/1 $/200`","lastModifiedDate":"2022-04-05"},{"lineNumber":225,"author":{"gitId":"myc37"},"content":"- `editPolicy 1 pi/2 n/Car Insurance Plus c/Mercedes pm/Zechary $/350`","lastModifiedDate":"2022-04-05"},{"lineNumber":226,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":227,"author":{"gitId":"myc37"},"content":"### Delete policy: `deletePolicy`","lastModifiedDate":"2022-03-20"},{"lineNumber":228,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":229,"author":{"gitId":"myc37"},"content":"Deletes an insurance policy from a specific client","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"myc37"},"content":"Format: `deletePolicy INDEX pi/POLICY_INDEX`","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"myc37"},"content":"Examples:","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"myc37"},"content":"- `deletePolicy 1 pi/1`","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"myc37"},"content":"### Add meeting: `addMeeting`","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"myc37"},"content":"Add a meeting to your schedule.","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"raynerljm"},"content":"Format: `addMeeting INDEX ms/START_DATETIME me/END_DATETIME [l/LABEL]`","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"myc37"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"raynerljm"},"content":"    Date format is dd-MM-yyyy HH:mm","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"myc37"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":249,"author":{"gitId":"raynerljm"},"content":"- `addMeeting 1 ms/01-01-2022 11:00 me/01-01-2022 12:00`","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"raynerljm"},"content":"- `addMeeting 2 ms/27-12-2022 16:00 me/27-12-2022 17:00 l/Dinner`","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"raynerljm"},"content":"### View Meetings: `meetings`","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":254,"author":{"gitId":"raynerljm"},"content":"Shows upcoming or all meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":256,"author":{"gitId":"raynerljm"},"content":"- If an index is provided, only shows meetings with the specified client.","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"raynerljm"},"content":"- If the `all/` flag is omitted, **ONLY** shows upcoming meetings (meetings that start today or in the future). ","lastModifiedDate":"2022-04-05"},{"lineNumber":258,"author":{"gitId":"raynerljm"},"content":"- If the `all/` flag is provided, shows all meetings instead of just upcoming meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"raynerljm"},"content":"Format: `meetings [INDEX] [all/]`","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"raynerljm"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"raynerljm"},"content":"- `meetings`","lastModifiedDate":"2022-03-28"},{"lineNumber":264,"author":{"gitId":"raynerljm"},"content":"- `meetings 2`","lastModifiedDate":"2022-03-28"},{"lineNumber":265,"author":{"gitId":"raynerljm"},"content":"- `meetings 3 all/`","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":267,"author":{"gitId":"raynerljm"},"content":"### Edit Meeting Details: `editMeeting`","lastModifiedDate":"2022-03-28"},{"lineNumber":268,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":269,"author":{"gitId":"raynerljm"},"content":"Edit details of a particular meeting.","lastModifiedDate":"2022-03-28"},{"lineNumber":270,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":271,"author":{"gitId":"raynerljm"},"content":"Format: `editMeeting INDEX [ms/NEW_START_DATETIME] [me/NEW_END_DATETIME] [l/LABEL]`","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-14"},{"lineNumber":274,"author":{"gitId":"raynerljm"},"content":"    Date format is dd-MM-yyyy HH:mm","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":279,"author":{"gitId":"raynerljm"},"content":"- `editMeeting 1 ms/01-01-2022 08:00 me/01-01-2022 10:00 l/Lunch`","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":281,"author":{"gitId":"raynerljm"},"content":"### Delete meeting: `deleteMeeting`","lastModifiedDate":"2022-03-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":283,"author":{"gitId":"raynerljm"},"content":"Deletes a meeting","lastModifiedDate":"2022-03-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":285,"author":{"gitId":"raynerljm"},"content":"Format: `deleteMeeting INDEX`","lastModifiedDate":"2022-03-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":287,"author":{"gitId":"raynerljm"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":289,"author":{"gitId":"raynerljm"},"content":"- `deleteMeeting 1`","lastModifiedDate":"2022-03-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":291,"author":{"gitId":"myc37"},"content":"### Delete meeting: `closeMeeting`","lastModifiedDate":"2022-04-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":293,"author":{"gitId":"myc37"},"content":"Closes a meeting and updates the lastContacted of the client that was met to match the end of the meeting. ","lastModifiedDate":"2022-04-01"},{"lineNumber":294,"author":{"gitId":"myc37"},"content":"The meeting will remain in the meeting list and not be deleted after it is closed.","lastModifiedDate":"2022-04-01"},{"lineNumber":295,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":296,"author":{"gitId":"myc37"},"content":"Format: `closeMeeting INDEX`","lastModifiedDate":"2022-04-01"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-01"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":300,"author":{"gitId":"myc37"},"content":"- `closeMeeting 1`","lastModifiedDate":"2022-04-01"},{"lineNumber":301,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":302,"author":{"gitId":"zechajw"},"content":"### Sort clients: `sortClients`","lastModifiedDate":"2022-04-01"},{"lineNumber":303,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":304,"author":{"gitId":"myc37"},"content":"Retrieve a sorted list of clients based on the provided attribute and sort direction.","lastModifiedDate":"2022-04-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"myc37"},"content":"Format: `sortClients [ATTRIBUTE] [dir/SORT_DIRECTION]`","lastModifiedDate":"2022-04-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":308,"author":{"gitId":"myc37"},"content":"Supported attributes: ","lastModifiedDate":"2022-04-05"},{"lineNumber":309,"author":{"gitId":"myc37"},"content":"1. `numPolicies`, clients will be sorted based on the number of policies that they have.","lastModifiedDate":"2022-04-05"},{"lineNumber":310,"author":{"gitId":"myc37"},"content":"2. `premium`, clients will be sorted based on their total premium sum for all their policies.","lastModifiedDate":"2022-04-05"},{"lineNumber":311,"author":{"gitId":"myc37"},"content":"3. `lastContacted` clients will be sorted based on when they were last contacted.","lastModifiedDate":"2022-04-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":313,"author":{"gitId":"myc37"},"content":"Note to Users:","lastModifiedDate":"2022-04-05"},{"lineNumber":314,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":315,"author":{"gitId":"myc37"},"content":"1. Sort direction refers to either `asc` (short for ascending) or `desc` (short for descending). ","lastModifiedDate":"2022-04-05"},{"lineNumber":316,"author":{"gitId":"myc37"},"content":"2. If no sort direction is provided, the default sort direction will be `desc`","lastModifiedDate":"2022-04-05"},{"lineNumber":317,"author":{"gitId":"myc37"},"content":"3. If no attribute is provided, the list of clients will be sorted by default in the order that the clients were added","lastModifiedDate":"2022-04-05"},{"lineNumber":318,"author":{"gitId":"myc37"},"content":"   to the list.","lastModifiedDate":"2022-04-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-01"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":322,"author":{"gitId":"myc37"},"content":"- `sortClients`","lastModifiedDate":"2022-04-05"},{"lineNumber":323,"author":{"gitId":"zechajw"},"content":"- `sortClients numPolicies`","lastModifiedDate":"2022-04-01"},{"lineNumber":324,"author":{"gitId":"zechajw"},"content":"- `sortClients premium`","lastModifiedDate":"2022-04-01"},{"lineNumber":325,"author":{"gitId":"zechajw"},"content":"- `sortClients lastContacted`","lastModifiedDate":"2022-04-01"},{"lineNumber":326,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":327,"author":{"gitId":"zechajw"},"content":"### Filter clients: `filterClients`","lastModifiedDate":"2022-04-01"},{"lineNumber":328,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":329,"author":{"gitId":"myc37"},"content":"Retrieve a filtered list of clients based on the provided operator and value.","lastModifiedDate":"2022-04-01"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":331,"author":{"gitId":"zechajw"},"content":"Format: `filterClients ATTRIBUTE op/OPERATOR v/VALUE`","lastModifiedDate":"2022-04-01"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":333,"author":{"gitId":"zechajw"},"content":"Note to Users:","lastModifiedDate":"2022-04-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":335,"author":{"gitId":"zechajw"},"content":"The `filterClients` command is a complex command involving 3 parameters:","lastModifiedDate":"2022-04-01"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":337,"author":{"gitId":"zechajw"},"content":"1. Attribute: the attribute to be filtered on","lastModifiedDate":"2022-04-01"},{"lineNumber":338,"author":{"gitId":"zechajw"},"content":"   ","lastModifiedDate":"2022-04-01"},{"lineNumber":339,"author":{"gitId":"zechajw"},"content":"    Supported attributes: `birthMonth`, `age`, `premium`, `company`","lastModifiedDate":"2022-04-01"},{"lineNumber":340,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":341,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":342,"author":{"gitId":"zechajw"},"content":"2. Operator: the desired filter range","lastModifiedDate":"2022-04-01"},{"lineNumber":343,"author":{"gitId":"zechajw"},"content":"   ","lastModifiedDate":"2022-04-01"},{"lineNumber":344,"author":{"gitId":"zechajw"},"content":"    Supported operators: `greaterorequal`, `greater`, `equal`, `lesser`, `lesserorequal`","lastModifiedDate":"2022-04-01"},{"lineNumber":345,"author":{"gitId":"myc37"},"content":"    * Note: The only operator supported for `company` is `equal`","lastModifiedDate":"2022-04-01"},{"lineNumber":346,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":347,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":348,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":349,"author":{"gitId":"zechajw"},"content":"3. Value: the value to be filtered around","lastModifiedDate":"2022-04-01"},{"lineNumber":350,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":351,"author":{"gitId":"zechajw"},"content":"- `birthMonth`: Accepts text inputs represent months of the year. Example: `february`, `march`","lastModifiedDate":"2022-04-01"},{"lineNumber":352,"author":{"gitId":"zechajw"},"content":"- `age`: Accepts integer values. Example: `25`, `27`","lastModifiedDate":"2022-04-01"},{"lineNumber":353,"author":{"gitId":"myc37"},"content":"- `premium`: Accepts integer values. Example: `25`, `27`","lastModifiedDate":"2022-04-01"},{"lineNumber":354,"author":{"gitId":"myc37"},"content":"- `company`: Accepts text inputs represent companies. Example: `Great Eastern`, `AAM`","lastModifiedDate":"2022-04-01"},{"lineNumber":355,"author":{"gitId":"zechajw"},"content":"   ","lastModifiedDate":"2022-04-01"},{"lineNumber":356,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-04-01"},{"lineNumber":357,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":358,"author":{"gitId":"zechajw"},"content":"1. `filterClients age op/equal v/25`: Retrieves all clients of `age` \u003d `25`","lastModifiedDate":"2022-04-01"},{"lineNumber":359,"author":{"gitId":"zechajw"},"content":"2. `filterClients birthMonth op/lesser v/february`: Retrieves all clients with birthdays before `february`","lastModifiedDate":"2022-04-01"},{"lineNumber":360,"author":{"gitId":"myc37"},"content":"3. `filterClients premium op/greater v/10000` Retrieves all clients that pay at least $`10000` in `premium`s ","lastModifiedDate":"2022-04-01"},{"lineNumber":361,"author":{"gitId":"myc37"},"content":"   annually","lastModifiedDate":"2022-04-01"},{"lineNumber":362,"author":{"gitId":"myc37"},"content":"4. `filterClients company op/equal v/Great Eastern` Retrieves all clients who own at least one policy from `Great ","lastModifiedDate":"2022-04-01"},{"lineNumber":363,"author":{"gitId":"myc37"},"content":"   Eastern`","lastModifiedDate":"2022-04-01"},{"lineNumber":364,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":365,"author":{"gitId":"joelwongjy"},"content":"### Save to hard drive","lastModifiedDate":"2022-03-01"},{"lineNumber":366,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":367,"author":{"gitId":"joelwongjy"},"content":"OnlyFAs’s data is saved in the hard drive automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-01"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"myc37"},"content":"Clear all entries in onlyFAs.","lastModifiedDate":"2022-03-01"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"myc37"},"content":"Exit the program.","lastModifiedDate":"2022-03-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"myc37"},"content":"onlyFAs\u0027 data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":387,"author":{"gitId":"myc37"},"content":"onlyFAs\u0027 data is saved in a JSON file `[JAR file location]/data/data.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":390,"author":{"gitId":"myc37"},"content":"If your changes to the data file makes its format invalid, onlyFAs will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-01"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":393,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"myc37"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous onlyFAs home folder.","lastModifiedDate":"2022-03-01"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":402,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"raynerljm"},"content":"| Action            | Format, Examples                                                                                                                                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":405,"author":{"gitId":"raynerljm"},"content":"|-------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-24"},{"lineNumber":406,"author":{"gitId":"myc37"},"content":"| **addClient**     | `addClient n/NAME p/PHONE_NUMBER [e/EMAIL a/ADDRESS]` \u003cbr\u003e e.g., `addClient n/N Vijay Narayanan p/99134234 a/abc street`                               |","lastModifiedDate":"2022-03-14"},{"lineNumber":407,"author":{"gitId":"myc37"},"content":"| **viewClient**    | `viewClient INDEX`\u003cbr\u003e e.g., `viewClient 1`                                                                                                            |","lastModifiedDate":"2022-03-14"},{"lineNumber":408,"author":{"gitId":"myc37"},"content":"| **updateClient**  | `updateClient INDEX [n/NEW_NAME p/NEW_PHONE_NUMBER e/NEW_EMAIL a/NEW_ADDRESS]`\u003cbr\u003e e.g.,`updateClient 1 e/new@email.com`                               |","lastModifiedDate":"2022-03-14"},{"lineNumber":409,"author":{"gitId":"myc37"},"content":"| **deleteClient**  | `deleteClient INDEX` \u003cbr\u003e e.g., `deleteClient 1`                                                                                                       |","lastModifiedDate":"2022-03-14"},{"lineNumber":410,"author":{"gitId":"sheimoria"},"content":"| **contacted**     | `contacted INDEX dt/DATETIME` \u003cbr\u003e e.g., `contacted 1 dt/21-03-2022 21:03`                                                                             |","lastModifiedDate":"2022-03-25"},{"lineNumber":411,"author":{"gitId":"myc37"},"content":"| **addNote**       | `addNote INDEX nt/NOTE` \u003cbr\u003e e.g., `addNote 1 nt/Commando NSF with high risk of injury`                                                                |","lastModifiedDate":"2022-03-14"},{"lineNumber":412,"author":{"gitId":"myc37"},"content":"| **addPref**       | `addPref INDEX cat/CATEGORY pref/PREFERENCE` \u003cbr\u003e e.g., `addPref 1 cat/Drink pref/Coke`                                                                |","lastModifiedDate":"2022-03-27"},{"lineNumber":413,"author":{"gitId":"myc37"},"content":"| **deletePref**    | `deletePref INDEX cat/CATEGORY` \u003cbr\u003e e.g., `deletePref 1 cat/Drink`                                                                                    |","lastModifiedDate":"2022-03-27"},{"lineNumber":414,"author":{"gitId":"myc37"},"content":"| **addPolicy**     | `addPolicy INDEX n/POLICY_NAME c/COMPANY pm/POLICY_MANAGER_NAME $/PREMIUM_AMOUNT` \u003cbr\u003e e.g., `addPolicy 1 n/Medicare Plus c/Medicare pm/Zechary $/100` |","lastModifiedDate":"2022-03-14"},{"lineNumber":415,"author":{"gitId":"myc37"},"content":"| **editPolicy**    | `editPolicy INDEX pi/POLICY_INDEX [n/POLICY_NAME] [c/COMPANY] [pm/POLICY_MANAGER_NAME] [$/PREMIUM_AMOUNT]` \u003cbr\u003e e.g., `editPolicy 1 pi/1 $/200`        |","lastModifiedDate":"2022-04-05"},{"lineNumber":416,"author":{"gitId":"myc37"},"content":"| **deletePolicy**  | `deletePolicy INDEX pi/POLICY_INDEX` \u003cbr\u003e e.g., `deletePolicy 1 pi/1`                                                                                  |","lastModifiedDate":"2022-03-20"},{"lineNumber":417,"author":{"gitId":"raynerljm"},"content":"| **meetings**      | `meetings [INDEX] [all/]` \u003cbr\u003e eg., `meetings 1 all/`                                                                                                  |","lastModifiedDate":"2022-03-29"},{"lineNumber":418,"author":{"gitId":"raynerljm"},"content":"| **addMeeting**    | `addMeeting INDEX ms/START_DATETIME me/END_DATETIME [l/LABEL]` \u003cbr\u003e e.g., `addMeeting 2 ms/27-12-2022 11:00 me/27-12-2022 12:00 l/Lunch`               |","lastModifiedDate":"2022-03-28"},{"lineNumber":419,"author":{"gitId":"raynerljm"},"content":"| **editMeeting**   | `editMeeting INDEX [ms/START_DATETIME] [me/END_DATETIME] [l/LABEL]` \u003cbr\u003e e.g., `editMeeting 2 ms/27-12-2022 16:00 me/27-12-2022 18:00 l/Dinner`        |","lastModifiedDate":"2022-03-28"},{"lineNumber":420,"author":{"gitId":"raynerljm"},"content":"| **deleteMeeting** | `deleteMeeting INDEX` \u003cbr\u003e e.g., `deleteMeeting 2`                                                                                                     |","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"myc37"},"content":"| **closeMeeting**  | `closeMeeting INDEX` \u003cbr\u003e e.g., `closeMeeting 3`                                                                                                       |","lastModifiedDate":"2022-04-01"},{"lineNumber":422,"author":{"gitId":"zechajw"},"content":"| **sortClients**   | `sortClients ATTRIBUTE` \u003cbr\u003e e.g., `sortClients numPolicies`                                                                                           |","lastModifiedDate":"2022-04-01"},{"lineNumber":423,"author":{"gitId":"zechajw"},"content":"| **filterClients** | `filterClients ATTRIBUTE op/OPERATOR v/VALUE` \u003cbr\u003e e.g., `filterClients age op/equal v/25`                                                             |","lastModifiedDate":"2022-04-01"},{"lineNumber":424,"author":{"gitId":"myc37"},"content":"| **help**          | `help`                                                                                                                                                 |","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"sheimoria":38,"joelwongjy":9,"myc37":119,"raynerljm":71,"zechajw":60,"-":127}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"sheimoria"},"content":"    content: \"onlyFAs\";","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"sheimoria":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteClient(p)","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"AddressBook *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Name","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Phone","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Email","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Address","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"DeleteCommand -\u003e Model : deleteClient(1)","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"Class UniqueClientList","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"Class Client","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"AddressBook *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"UniqueClientList --\u003e \"~* all\" Client","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Name","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Phone","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Email","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e Address","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"ModelManager --\u003e\"~* filtered\" Client","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"Class JsonAdaptedClient","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedClient","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"JsonAdaptedClient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"Class ClientListPanel","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"Class ClientCard","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"MainWindow *-down-\u003e \"1\" ClientListPanel","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"ClientListPanel -down-\u003e \"*\" ClientCard","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"ClientListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"ClientCard --|\u003e UiPart","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"ClientCard ..\u003e Model","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"ClientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sheimoria":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"ecp -\u003e ec ++: index, editClientDescriptor","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"sheimoria":1,"-":20}},{"path":"docs/team/joelwongjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"title: Joel Wong\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"### Project: onlyFAs","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"onlyFAs is a desktop client-management application used by high achieving financial advisors looking to maintain and develop good relationships with current and potential clients. THe user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djoelwongjy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"- **Contributions beyond the project team:**:","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"joelwongjy":9,"-":13}},{"path":"docs/team/myc37.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"title: N Vijay Narayanan\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"### Project: onlyFAs","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"onlyFAs is a desktop client-management application used by high achieving financial advisors looking to maintain and develop good relationships with current and potential clients. THe user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dmyc37\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"- **Contributons to the DG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"- **Contributions beyond the project team:**:","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"myc37":9,"-":13}},{"path":"docs/team/raynerljm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"title: Loh Jia Ming, Rayner\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"### Project: onlyFAs","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"onlyFAs is a desktop client-management application used by high achieving financial advisors looking to maintain and develop good relationships with current and potential clients. THe user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003draynerljm\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"- **Contributons to the DG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"- **Contributions beyond the project team:**:","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"myc37":1,"raynerljm":21}},{"path":"docs/team/sheimoria.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"title: Maleriado Shem Limos\u0027 Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"### Project: onlyFAs","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"onlyFAs is a desktop client-management application used by high achieving financial advisors looking to maintain and develop good relationships with current and potential clients. THe user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dsheimoria\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"- **Contributions to the DG**:","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"- **Contributions beyond the project team:**:","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"sheimoria":9,"-":13}},{"path":"docs/team/zechajw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"title: Zechary Au Jun Wen\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"### Project: onlyFAs","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"onlyFAs is a desktop client-management application used by high achieving financial advisors looking to maintain and develop good relationships with current and potential clients. THe user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dzechajw\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"- **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"- **Contributions to the UG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"- **Contributons to the DG**:","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"- **Review/mentoring contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"- **Contributions beyond the project team:**:","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"myc37":1,"zechajw":8,"-":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":" * Changes the remark of an existing client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"            + \": Edits the remark of the client identified \"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"            + \"by the index number used in the last client listing. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"     * @param index of the client in the filtered client list to edit the remark","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"     * @param remark of the client to be updated to","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"sheimoria"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of client data. We achieve that by working with the `Client` model. Each field in a Client is implemented as a separate class (e.g. a `Name` object represents the client’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a client.","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"sheimoria"},"content":"Create a new `Remark` in `seedu.address.model.client`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"sheimoria"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each client.","lastModifiedDate":"2022-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"sheimoria"},"content":"Simply add the following to [`seedu.address.ui.ClientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"sheimoria"},"content":"**`ClientCard.java`:**","lastModifiedDate":"2022-03-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"sheimoria"},"content":"Then insert the following into [`main/resources/view/ClientListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"sheimoria"},"content":"**`ClientListCard.fxml`:**","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"sheimoria"},"content":"## Modify `Client` to support a `Remark` field","lastModifiedDate":"2022-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"sheimoria"},"content":"Since `ClientCard` displays data from a `Client`, we need to update `Client` to get our `Remark` displayed!","lastModifiedDate":"2022-03-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"sheimoria"},"content":"### Modify `Client`","lastModifiedDate":"2022-03-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"sheimoria"},"content":"We change the constructor of `Client` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-03-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"sheimoria"},"content":"### Update other usages of `Client`","lastModifiedDate":"2022-03-17"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"sheimoria"},"content":"Unfortunately, a change to `Client` will cause other commands to break, you will have to modify these commands to use the updated `Client`!","lastModifiedDate":"2022-03-17"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"sheimoria"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Client` class to find these commands.","lastModifiedDate":"2022-03-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"sheimoria"},"content":"AddressBook stores data by serializing `JsonAdaptedClient` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedClient` to work with our new `Client`!","lastModifiedDate":"2022-03-17"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"sheimoria"},"content":"Now that we have finalized the `Client` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-03-17"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"sheimoria"},"content":"**`ClientCard.java`:**","lastModifiedDate":"2022-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"sheimoria"},"content":"public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"sheimoria"},"content":"    remark.setText(client.getRemark().value);","lastModifiedDate":"2022-03-17"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"sheimoria"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Client`. Since all fields in a `Client` are immutable, we create a new instance of a `Client` with the values that we want and","lastModifiedDate":"2022-03-17"},{"lineNumber":329,"author":{"gitId":"sheimoria"},"content":"save it with `Model#setClient()`.","lastModifiedDate":"2022-03-17"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Client: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":336,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Client: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"sheimoria"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"sheimoria"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":347,"author":{"gitId":"sheimoria"},"content":"        Client editedClient \u003d new Client(","lastModifiedDate":"2022-03-17"},{"lineNumber":348,"author":{"gitId":"sheimoria"},"content":"                clientToEdit.getName(), clientToEdit.getPhone(), clientToEdit.getEmail(),","lastModifiedDate":"2022-03-17"},{"lineNumber":349,"author":{"gitId":"sheimoria"},"content":"                clientToEdit.getAddress(), remark, clientToEdit.getTags());","lastModifiedDate":"2022-03-17"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"sheimoria"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":352,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"sheimoria"},"content":"        return new CommandResult(generateSuccessMessage(editedClient));","lastModifiedDate":"2022-03-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"sheimoria"},"content":"     * {@code clientToEdit}.","lastModifiedDate":"2022-03-17"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"sheimoria"},"content":"    private String generateSuccessMessage(Client clientToEdit) {","lastModifiedDate":"2022-03-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"sheimoria"},"content":"        return String.format(message, clientToEdit);","lastModifiedDate":"2022-03-17"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"sheimoria":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Client` class.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"The `address` field in `Client` is actually an instance of the `seedu.address.model.client.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditClientDescriptor` may require more careful inspection.","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"Let’s try removing references to `Address` in `EditClientDescriptor`.","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"1. Safe delete the field `address` in `EditClientDescriptor`.","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Client` class will require you to modify its constructor.","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ClientCard` that has not been removed nor identified.","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"A quick look at the `ClientCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"**`ClientCard.java`**","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"**`ClientCard.fxml`**","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"**`invalidClientAddressBook.json`:**","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"  \"clients\": [ {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"    \"name\": \"Client with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sheimoria":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"sheimoria"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditClientDescriptor`. Recall that we can verify the contents of `editClientDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"sheimoria"},"content":"       Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"sheimoria"},"content":"       Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"sheimoria"},"content":"       if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"sheimoria"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"sheimoria"},"content":"       model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"sheimoria"},"content":"       model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"sheimoria"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"sheimoria"},"content":"   * it uses the `setClient()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the client data.","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"sheimoria"},"content":"   * it uses the `updateFilteredClientList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ clients.\u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"sheimoria"},"content":"     FYI, The \u0027filtered list\u0027 is the list of clients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the clients so that the user can see the edited client along with all other clients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"sheimoria"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of clients is being tracked.","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"sheimoria"},"content":"        clients.addAll(","lastModifiedDate":"2022-03-17"},{"lineNumber":235,"author":{"gitId":"sheimoria"},"content":"            source.getClientList()","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"sheimoria"},"content":"                  .map(JsonAdaptedClient::new)","lastModifiedDate":"2022-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"sheimoria"},"content":"1. It appears that a `JsonAdaptedClient` is created for each `Client` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-03-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"sheimoria"},"content":"    5.  Add a new field to `Client`","lastModifiedDate":"2022-03-17"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sheimoria":17,"-":284}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-7.1-bin.zip","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"myc37":1,"-":4}},{"path":"gradlew.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"@rem","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"@rem","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"@rem","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"@rem","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"@rem","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2018-05-08"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"myc37":24,"-":65}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"myc37":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"⚠️ Invalid command format! \\n%1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_INVALID_POLICY_DISPLAYED_INDEX \u003d \"The policy index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_PARAMETERS \u003d \"Invalid parameters! \\n%1$s\";","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_INVALID_SORT_DIRECTION \u003d \"Invalid sort direction! \\n%1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":2,"myc37":2,"raynerljm":3,"-":9}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"     * Returns an unmodifiable view of the filtered or sorted list of clients depending on whether client list is","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"     * sorted.","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"    Client getDisplayedClient();","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"     * Returns whether all or only upcoming meetings are displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"    boolean isShowAllMeetings();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"     * Returns whether clients displayed are in sorted order.","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"joelwongjy"},"content":"    boolean isSorted();","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"joelwongjy"},"content":"     * Set whether clients displayed are in sorted order.","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"    void setIsSorted(boolean isSorted);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sheimoria":4,"joelwongjy":22,"myc37":1,"raynerljm":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"        return model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"joelwongjy"},"content":"    public Client getDisplayedClient() {","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"joelwongjy"},"content":"        return model.getDisplayedClient();","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"joelwongjy"},"content":"    public boolean isShowAllMeetings() {","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"        return model.isShowAllMeetings();","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"joelwongjy"},"content":"    public boolean isSorted() {","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"joelwongjy"},"content":"        return model.isSorted();","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"joelwongjy"},"content":"    public void setIsSorted(boolean isSorted) {","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"joelwongjy"},"content":"        model.setIsSorted(isSorted);","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sheimoria":3,"joelwongjy":22,"myc37":3,"raynerljm":4,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_CONTACTED;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":" * Adds a client to the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"addClient\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client to the address book.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_LAST_CONTACTED + \"LAST CONTACTED]\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"            + PREFIX_ADDRESS + \"311 Clementi Ave 2 #02-25 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"            + PREFIX_BIRTHDAY + \"21/03/1999 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"            + PREFIX_LAST_CONTACTED + \"21-03-2022 21:03 \";","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book\";","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"    private final Client toAdd;","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"     * Creates an AddCommand to add the specified {@code Client}","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"    public AddCommand(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        toAdd \u003d client;","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":22,"myc37":1,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"public class AddNoteCommand extends EditCommand {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"    public static final String COMMAND_WORD \u003d \"addNote\";","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note to client identified \"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"            + PREFIX_NOTE + \"Likes to gym\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    public AddNoteCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"        super(index, editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":3,"zechajw":17}},{"path":"src/main/java/seedu/address/logic/commands/AddPreferenceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_DETAIL;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_KEY;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"public class AddPreferenceCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    public static final String COMMAND_WORD \u003d \"addPref\";","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New preference added: %s: %s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a preference to \"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"            + \"the client specified by the index number used in the displayed \"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"            + \"client list.\\nParameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"            + \"[\" + PREFIX_PREFERENCE_KEY + \"PREFERENCE_KEY (one word with only alphabets)]\"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"            + \"[\" + PREFIX_PREFERENCE_DETAIL + \"PREFERENCE_DETAILS]\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            + PREFIX_PREFERENCE_KEY + \"Drink \"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"            + PREFIX_PREFERENCE_DETAIL + \"Bubble Tea\";","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    private final Index index;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    private final String preferenceKey;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    private final String preferenceDetails;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     * Creates an AddPreferenceCommand to add the specified preference","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    public AddPreferenceCommand(Index index, String preferenceKey, String preferenceDetails) {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        requireNonNull(preferenceKey);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        requireNonNull(preferenceDetails);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"        this.preferenceKey \u003d preferenceKey;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"        this.preferenceDetails \u003d preferenceDetails;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        Client clientToAddPreferences \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        clientToAddPreferences.addPreference(preferenceKey, preferenceDetails);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, preferenceKey, preferenceDetails), false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"                false, false, null, clientToAddPreferences);","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"        if (!(other instanceof AddPreferenceCommand)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"        AddPreferenceCommand otherApc \u003d (AddPreferenceCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"        return index.equals(otherApc.index)","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"                \u0026\u0026 preferenceKey.equals(otherApc.preferenceKey)","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"                \u0026\u0026 preferenceDetails.equals(otherApc.preferenceDetails);","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"sheimoria":6,"joelwongjy":4,"zechajw":68}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.SortCriteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"    /** Tutorial should be shown to the user. */","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    private final boolean showTutorial;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    /** Meetings should be shown. */","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    private final boolean showMeetings;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"    /** Clients should be shown. */","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    private final boolean showClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    /** Clients should be sorted **/","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"    private final SortCriteria sortClients;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    /** Index to show. */","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"    private final Index indexToShow;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"    private final Client clientToUpdate;","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showTutorial, boolean exit,","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"                         boolean showMeetings, boolean showClients, SortCriteria sortClients, Index indexToShow,","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"                         Client clientToUpdate) {","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"        this.showTutorial \u003d showTutorial;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        this.showMeetings \u003d showMeetings;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        this.showClients \u003d showClients;","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"        this.sortClients \u003d sortClients;","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        this.indexToShow \u003d indexToShow;","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"        this.clientToUpdate \u003d clientToUpdate;","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"     * Constructs a {@code CommandResult} with the specified fields for non-sort commands.","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showTutorial, boolean exit,","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"                         boolean showMeetings, boolean showClients, Index indexToShow, Client clientToUpdate) {","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"        this.showTutorial \u003d showTutorial;","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        this.showMeetings \u003d showMeetings;","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        this.showClients \u003d showClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"        this.indexToShow \u003d indexToShow;","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"        this.sortClients \u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"joelwongjy"},"content":"        this.clientToUpdate \u003d clientToUpdate;","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"     * Constructs a {@code CommandResult} with the specified fields for sort commands.","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"    public CommandResult(String feedbackToUser, SortCriteria sortClients) {","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"        this(feedbackToUser, false, false, false,","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"joelwongjy"},"content":"                false, false, sortClients, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"        this(feedbackToUser, false, false, false,","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"joelwongjy"},"content":"                false, false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"joelwongjy"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code indexToShow},","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"joelwongjy"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"joelwongjy"},"content":"    public CommandResult(String feedbackToUser, Index indexToShow) {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"joelwongjy"},"content":"        this(feedbackToUser, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"joelwongjy"},"content":"                false, false, indexToShow, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"joelwongjy"},"content":"    public boolean isShowTutorial() {","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"joelwongjy"},"content":"        return showTutorial;","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"    public boolean isShowMeetings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"        return showMeetings;","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"    public boolean isShowClients() {","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"        return showClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"joelwongjy"},"content":"    public boolean isShowClient() {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"joelwongjy"},"content":"        return indexToShow !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"    public boolean isSortClients() {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"joelwongjy"},"content":"        return sortClients !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"joelwongjy"},"content":"    public Index getIndexToShow() {","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"joelwongjy"},"content":"        return indexToShow;","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"joelwongjy"},"content":"    public boolean isUpdateClient() {","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"joelwongjy"},"content":"        return clientToUpdate !\u003d null;","lastModifiedDate":"2022-04-01"},{"lineNumber":138,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"joelwongjy"},"content":"    public Client getClientToUpdate() {","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"joelwongjy"},"content":"        return clientToUpdate;","lastModifiedDate":"2022-04-01"},{"lineNumber":142,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"joelwongjy"},"content":"    public SortCriteria getSortCriteria() {","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"joelwongjy"},"content":"        return sortClients;","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"joelwongjy"},"content":"                \u0026\u0026 showTutorial \u003d\u003d otherCommandResult.showTutorial","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 sortClients \u003d\u003d otherCommandResult.sortClients","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joelwongjy":55,"sheimoria":5,"myc37":23,"raynerljm":17,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/ContactedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"public class ContactedCommand extends EditCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"    public static final String COMMAND_WORD \u003d \"contacted\";","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the last contacted datetime of the client \"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"            + \"identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + PREFIX_DATETIME + \"DATETIME\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_DATETIME + \"21-03-2022 21:03\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"    public ContactedCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"        super(index, editClientDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"sheimoria":18}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"deleteClient\";","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"            + \": Deletes the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete));","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":8,"joelwongjy":1,"myc37":1,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"public class DeleteNoteCommand extends EditCommand {","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"    public static final String COMMAND_WORD \u003d \"deleteNote\";","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the note of the client specified\"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    public DeleteNoteCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"        super(index, editClientDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zechajw":16}},{"path":"src/main/java/seedu/address/logic/commands/DeletePreferenceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_KEY;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.client.exceptions.InvalidPreferenceKeyException;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"public class DeletePreferenceCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    public static final String COMMAND_WORD \u003d \"deletePref\";","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Preference deleted for %s: [%s]\";","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a preference from the client specified \"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"            + \"by the index number used in the displayed client list and the specified preference key.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"            + \"\" + PREFIX_PREFERENCE_KEY + \"PREFERENCE_KEY\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            + PREFIX_PREFERENCE_KEY + \"Drink\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_INVALID_KEY \u003d \"There is no existing preference matching the key %s for \"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            + \"this client: %s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    private final Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"    private final String preferenceKey;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"     * Creates a DeletePreferenceCommand to delete the specified {@code preferenceKey}","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    public DeletePreferenceCommand(Index index, String preferenceKey) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        requireNonNull(preferenceKey);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        this.preferenceKey \u003d preferenceKey;","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"        Client clientToDeletePreference \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"            clientToDeletePreference.deletePreference(preferenceKey);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"                    clientToDeletePreference.getName().toString(), preferenceKey), false, false, false,","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"                    false, false, null, clientToDeletePreference);","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"        } catch (InvalidPreferenceKeyException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_KEY, preferenceKey,","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"                    clientToDeletePreference.getName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"                || (other instanceof DeletePreferenceCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"                \u0026\u0026 index.equals(((DeletePreferenceCommand) other).index)","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"                \u0026\u0026 index.equals(((DeletePreferenceCommand) other).preferenceKey));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"joelwongjy":3,"zechajw":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_CONTACTED;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.PreferenceMap;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.UniquePolicyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.DuplicatePolicyException;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.InvalidPolicyIndexException;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"updateClient\";","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client identified \"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"            + \"by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"            + \"[\" + PREFIX_LAST_CONTACTED + \"LAST CONTACTED]\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"            + PREFIX_DATETIME + \"21/03/2022 21:03\";","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"    public EditCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"        Client editedClient;","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"            editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"myc37"},"content":"        } catch (DuplicatePolicyException dpe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"            throw new CommandException(dpe.getMessage());","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"joelwongjy"},"content":"        model.updateDisplayedClient(editedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient), false, false, false, false,","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"joelwongjy"},"content":"                false, null, editedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"myc37"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) throws","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"myc37"},"content":"            DuplicatePolicyException, InvalidPolicyIndexException {","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"        Phone updatedPhone \u003d editClientDescriptor.getPhone().orElse(clientToEdit.getPhone());","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"        Email updatedEmail \u003d editClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"        Address updatedAddress \u003d editClientDescriptor.getAddress().orElse(clientToEdit.getAddress());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"        Date updatedBirthday \u003d editClientDescriptor.getBirthday().orElse(clientToEdit.getBirthday());","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"        DateTime updatedLastContacted \u003d editClientDescriptor.getLastContacted().orElse(clientToEdit.getLastContacted());","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"        Note updatedNote \u003d editClientDescriptor.getNote().orElse(clientToEdit.getNote());","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"        PreferenceMap updatedPreferences \u003d editClientDescriptor.getPreferenceMap().orElse(clientToEdit","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"                .getPreferenceMap());","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"myc37"},"content":"        UniquePolicyList updatedPolicies \u003d clientToEdit.getPolicies();","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthday,","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"myc37"},"content":"                updatedLastContacted, updatedPolicies, updatedNote, updatedPreferences);","lastModifiedDate":"2022-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"sheimoria"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"sheimoria"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"sheimoria"},"content":"        private Date birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"sheimoria"},"content":"        private DateTime lastContacted;","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"zechajw"},"content":"        private Note note;","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"zechajw"},"content":"        private PreferenceMap preferences;","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"sheimoria"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"sheimoria"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"sheimoria"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"sheimoria"},"content":"            setLastContacted(toCopy.lastContacted);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"zechajw"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"zechajw"},"content":"            setPreferenceMap(toCopy.preferences);","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"myc37"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, lastContacted);","lastModifiedDate":"2022-04-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"sheimoria"},"content":"        public void setBirthday(Date birthday) {","lastModifiedDate":"2022-03-16"},{"lineNumber":215,"author":{"gitId":"sheimoria"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":218,"author":{"gitId":"sheimoria"},"content":"        public Optional\u003cDate\u003e getBirthday() {","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"sheimoria"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"sheimoria"},"content":"        public void setLastContacted(DateTime lastContacted) {","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"sheimoria"},"content":"            this.lastContacted \u003d lastContacted;","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"sheimoria"},"content":"        public Optional\u003cDateTime\u003e getLastContacted() {","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"sheimoria"},"content":"            return Optional.ofNullable(lastContacted);","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"zechajw"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2022-03-08"},{"lineNumber":231,"author":{"gitId":"zechajw"},"content":"            this.note \u003d note;","lastModifiedDate":"2022-03-08"},{"lineNumber":232,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":234,"author":{"gitId":"zechajw"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2022-03-08"},{"lineNumber":235,"author":{"gitId":"zechajw"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2022-03-08"},{"lineNumber":236,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":237,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"zechajw"},"content":"        public void setPreferenceMap(PreferenceMap preferences) {","lastModifiedDate":"2022-03-13"},{"lineNumber":239,"author":{"gitId":"zechajw"},"content":"            this.preferences \u003d preferences;","lastModifiedDate":"2022-03-13"},{"lineNumber":240,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":241,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":242,"author":{"gitId":"zechajw"},"content":"        public Optional\u003cPreferenceMap\u003e getPreferenceMap() {","lastModifiedDate":"2022-03-13"},{"lineNumber":243,"author":{"gitId":"zechajw"},"content":"            return Optional.ofNullable(preferences);","lastModifiedDate":"2022-03-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"sheimoria"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"sheimoria"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"sheimoria"},"content":"                    \u0026\u0026 getBirthday().equals(e.getBirthday())","lastModifiedDate":"2022-03-16"},{"lineNumber":266,"author":{"gitId":"sheimoria"},"content":"                    \u0026\u0026 getLastContacted().equals(e.getLastContacted())","lastModifiedDate":"2022-03-10"},{"lineNumber":267,"author":{"gitId":"zechajw"},"content":"                    \u0026\u0026 getNote().equals(e.getNote());","lastModifiedDate":"2022-03-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"sheimoria":77,"joelwongjy":4,"myc37":13,"zechajw":19,"-":157}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true, false, false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"joelwongjy":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_OPERATOR;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_VALUE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":" * Filter clients in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public static final String COMMAND_WORD \u003d \"filterClients\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    public static final String FILTER_ATTRIBUTES \u003d \"age, premium, company, birthMonth\";","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public static final String FILTER_OPERATORS \u003d \"equal, greater, lesser, lesserorequal, greaterorequal\";","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters clients in the address book.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"            + \"ATTRIBUTE \" + PREFIX_FILTER_OPERATOR + \"FILTER_OPERATOR \"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"            + PREFIX_FILTER_VALUE + \"FILTER_VALUE\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            + \"Example: \" + COMMAND_WORD + \"age \"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"            + PREFIX_FILTER_OPERATOR + \"equal \"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            + PREFIX_FILTER_VALUE + \"50\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"            + \"Supported attributes: \" + FILTER_ATTRIBUTES + \"\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            + \"Supported inequalities: \" + FILTER_OPERATORS;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully filtered: %s %s %s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_INVALID_FILTER_ATTRIBUTE \u003d \"The filter attribute %s is invalid. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"            + \"Supported attributes: \" + FILTER_ATTRIBUTES;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_INVALID_FILTER_OPERATOR \u003d \"The filter operator %s is invalid. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"            + \"Supported operators: \" + FILTER_OPERATORS;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_ONLY_EQUAL_FILTER_OPERATOR \u003d \"Only equal is a valid filter operator for this \"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"            + \"attribute\";","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    public static final String MESSAGE_INVALID_FILTER_VALUE \u003d \"The filter value %s is invalid, expected a %s \"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"            + \"for the attribute %s.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    private final String attribute;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"    private final String operator;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"    private final String value;","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"     * Creates a FilterCommand to filter the {@code Client}s by a specified {@code attribute}.","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"     * @param attribute {@code Client} attribute to filter by","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"     * @param operator whether the filter should be equal, greater or less than","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"     * @param value the value to be filtered on","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    public FilterCommand(String attribute, String operator, String value) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"zechajw"},"content":"        requireNonNull(operator);","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"zechajw"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"        this.operator \u003d operator;","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"        Predicate\u003cClient\u003e predicateLess \u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"        Predicate\u003cClient\u003e predicateEqual;","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"        Predicate\u003cClient\u003e predicateGreater \u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"        int compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"        switch (attribute) {","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"        case \"age\":","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"            try {","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"                compareValue \u003d Integer.parseInt(value);","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_FILTER_VALUE, value, \"integer\", attribute));","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"            predicateLess \u003d (client) -\u003e client.getAge() \u003c compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"            predicateEqual \u003d (client) -\u003e client.getAge() \u003d\u003d compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"            predicateGreater \u003d (client) -\u003e client.getAge() \u003e compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"        case \"premium\":","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"            try {","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"                compareValue \u003d Integer.parseInt(value);","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_FILTER_VALUE, value, \"integer\", attribute));","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"            predicateLess \u003d (client) -\u003e client.getPolicies().totalPremiumSum() \u003c compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"myc37"},"content":"            predicateEqual \u003d (client) -\u003e client.getPolicies().totalPremiumSum() \u003d\u003d compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"            predicateGreater \u003d (client) -\u003e client.getPolicies().totalPremiumSum() \u003e compareValue;","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"myc37"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"myc37"},"content":"        case \"company\":","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"myc37"},"content":"            Name companyName;","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"            try {","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"                companyName \u003d new Name(value);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"myc37"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"myc37"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"            predicateEqual \u003d (client) -\u003e client.getPolicies().hasPolicyFromCompany(companyName);","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"zechajw"},"content":"        case \"birthMonth\":","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"zechajw"},"content":"            int month;","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"zechajw"},"content":"            try {","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"zechajw"},"content":"                month \u003d Month.valueOf(value.toUpperCase()).getValue();","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"zechajw"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"zechajw"},"content":"                throw new CommandException(String.format(MESSAGE_INVALID_FILTER_VALUE, value, \"month (e.g. february)\",","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"zechajw"},"content":"                        attribute));","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"            predicateLess \u003d (client) -\u003e client.getBirthdayMonth() \u003c month;","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"            predicateEqual \u003d (client) -\u003e client.getBirthdayMonth() \u003d\u003d month;","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"            predicateGreater \u003d (client) -\u003e client.getBirthdayMonth() \u003e month;","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"        default:","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"zechajw"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_FILTER_ATTRIBUTE, attribute));","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"        switch (operator) {","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"        case \"greater\":","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"myc37"},"content":"            if (predicateGreater \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"myc37"},"content":"                throw new CommandException(MESSAGE_ONLY_EQUAL_FILTER_OPERATOR);","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"            model.updateFilteredClientList(predicateGreater);","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"zechajw"},"content":"        case \"equal\":","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"zechajw"},"content":"            model.updateFilteredClientList(predicateEqual);","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"zechajw"},"content":"        case \"lesser\":","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"            if (predicateLess \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"myc37"},"content":"                throw new CommandException(MESSAGE_ONLY_EQUAL_FILTER_OPERATOR);","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"zechajw"},"content":"            model.updateFilteredClientList(predicateLess);","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"zechajw"},"content":"        case \"lesserorequal\":","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"myc37"},"content":"            if (predicateLess \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"myc37"},"content":"                throw new CommandException(MESSAGE_ONLY_EQUAL_FILTER_OPERATOR);","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"            model.updateFilteredClientList(predicateLess.or(predicateEqual));","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"zechajw"},"content":"        case \"greaterorequal\":","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"            if (predicateGreater \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"myc37"},"content":"                throw new CommandException(MESSAGE_ONLY_EQUAL_FILTER_OPERATOR);","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"            model.updateFilteredClientList(predicateGreater.or(predicateEqual));","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"zechajw"},"content":"            break;","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"zechajw"},"content":"        default:","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"zechajw"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_FILTER_OPERATOR, operator));","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, attribute, operator, value));","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"myc37":38,"zechajw":113}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":" * Finds and lists all clients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients whose names contain any of \"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"            + \"the specified keywords (case-insensitive)\\nand displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getClientList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sheimoria":4,"joelwongjy":2,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joelwongjy":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all clients\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, false, true, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":4,"joelwongjy":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_DIRECTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.SortCriteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":" * Sorts clients in the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":" *","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":" * birthday","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":" * premium","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":" * lastContacted","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":" * premium due date","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":" * num policies","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":" *","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"sortClients\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts clients in the address book.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_SORT_DIRECTION + \"SORT_DIRECTION]\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"            + PREFIX_SORT_DIRECTION + \"desc\";","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully sorted\";","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    public static final String MESSAGE_INVALID_ATTRIBUTE \u003d \"This attribute is invalid.\\nThe available attributes are\"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"            + \" `empty` (default), `numPolicies`, `premium` and `lastContacted`.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_INVALID_SORT_DIRECTION \u003d \"Use \u0027asc\u0027 for ascending or \u0027desc\u0027 for descending\";","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"    private final boolean isAscending;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"    private final String attribute;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"     * Creates a SortCommand to sort the {@code Client}s by a specified {@code attribute} and direction.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"     * @param attribute {@code Client} attribute to sort by","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"     * @param isAscending Indicator on whether the sort should be in ascending or descending order","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"    public SortCommand(String attribute, boolean isAscending) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        requireNonNull(attribute);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        requireNonNull(isAscending);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        this.attribute \u003d attribute;","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"        this.isAscending \u003d isAscending;","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        Comparator\u003cClient\u003e comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"        SortCriteria criteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"        if (!Objects.equals(attribute, \"\") \u0026\u0026 !SortCriteria.isValidEnum(attribute)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"            throw new CommandException(MESSAGE_INVALID_ATTRIBUTE);","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"        switch(attribute) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        case \"numPolicies\":","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"            comparator \u003d Comparator.comparingInt(a -\u003e a.getPolicies().asUnmodifiableObservableList().size());","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"            criteria \u003d SortCriteria.numPolicies;","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"            model.setIsSorted(true);","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"        case \"premium\":","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"            comparator \u003d Comparator.comparingInt(a -\u003e a.getPolicies().totalPremiumSum());","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"joelwongjy"},"content":"            criteria \u003d SortCriteria.premium;","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"joelwongjy"},"content":"            model.setIsSorted(true);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        case \"lastContacted\":","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"            comparator \u003d Comparator.comparing(a -\u003e a.getLastContacted().getDateTime());","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"            criteria \u003d SortCriteria.lastContacted;","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"joelwongjy"},"content":"            model.setIsSorted(true);","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"            break;","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"joelwongjy"},"content":"            comparator \u003d Comparator.comparing(a -\u003e a.getName().fullName);","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"joelwongjy"},"content":"            criteria \u003d SortCriteria.DEFAULT;","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"joelwongjy"},"content":"            model.setIsSorted(false);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"        if (!isAscending) {","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"            comparator \u003d comparator.reversed();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"        model.updateSortedClientList(comparator);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, criteria);","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"myc37"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 attribute.equals(((SortCommand) other).attribute)","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 isAscending \u003d\u003d ((SortCommand) other).isAscending);","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"joelwongjy":18,"sheimoria":8,"myc37":75}},{"path":"src/main/java/seedu/address/logic/commands/TutorialCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":" * Format full tutorial instructions for every command for display.","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"public class TutorialCommand extends Command {","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"    public static final String COMMAND_WORD \u003d \"tutorial\";","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"    public static final String SHOWING_TUTORIAL_MESSAGE \u003d \"Opened tutorial window.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(SHOWING_TUTORIAL_MESSAGE, false, true, false, false, false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"joelwongjy":21}},{"path":"src/main/java/seedu/address/logic/commands/ViewClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"public class ViewClientCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"    public static final String COMMAND_WORD \u003d \"viewClient\";","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"            + \": Displays details of the client identified by the index number used in the displayed client list.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing client: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"     * @param index of the client in the filtered client list to view","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"    public ViewClientCommand(Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"        Client clientToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"        model.updateDisplayedClient(clientToView);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, clientToView.getName()), false, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"                false, index, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":49}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"myc37":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/meeting/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":" * Adds a meeting to the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public static final String COMMAND_WORD \u003d \"addMeeting\";","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS_UPCOMING \u003d \"New upcoming meeting added:\\n%1$s\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"            + \"View your upcoming meetings with the `meetings` command\";","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS_PAST \u003d \"New past meeting added:\\n%1$s\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"            + \"View all your meetings with the `meetings all/` command\";","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_USAGE \u003d \"Parameters:\\n• INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"            + \"\" + PREFIX_START_DATETIME + \"START_DATETIME \"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"            + \"\" + PREFIX_END_DATETIME + \"END_DATETIME \"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"            + \"[\" + PREFIX_LABEL + \"LABEL]\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"            + \"Example:\\n• \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_START_DATETIME + \"01-01-2022 11:00 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_END_DATETIME + \"01-01-2020 13:00 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_LABEL + \"Lunch\";","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_OVERLAPPING_MEETING \u003d \"There is an existing\"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"           + \" meeting overlapping with this meeting.\";","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_DATETIME \u003d \"The end time cannot be before the start time.\";","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    private final Index index;","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    private final String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"    public AddMeetingCommand(Index index, LocalDateTime startDateTime, LocalDateTime endDateTime, String label) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(startDateTime);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(endDateTime);","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(label);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        Client clientToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        Meeting newMeeting \u003d new Meeting(startDateTime, endDateTime, clientToMeet, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"        if (model.isOverlapping(newMeeting)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"            throw new CommandException(MESSAGE_OVERLAPPING_MEETING);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"        model.addMeeting(newMeeting);","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"        model.sortMeetings();","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"        String successMessage;","lastModifiedDate":"2022-04-05"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"        if (newMeeting.isUpcoming()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"            successMessage \u003d MESSAGE_SUCCESS_UPCOMING;","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"            successMessage \u003d MESSAGE_SUCCESS_PAST;","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"        return new CommandResult(String.format(successMessage, newMeeting));","lastModifiedDate":"2022-04-05"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"        // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"        AddMeetingCommand otherAmc \u003d (AddMeetingCommand) other;","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"        return index.equals(otherAmc.index)","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 startDateTime.equals(otherAmc.startDateTime)","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 endDateTime.equals(otherAmc.endDateTime) \u0026\u0026 label.equals(otherAmc.label);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sheimoria":3,"joelwongjy":1,"raynerljm":108,"zechajw":2}},{"path":"src/main/java/seedu/address/logic/commands/meeting/CloseMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"public class CloseMeetingCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"closeMeeting\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_USAGE \u003d \"Parameters:\\n• INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"            + \"Example:\\n• \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_CLOSE_MEETING_SUCCESS \u003d \"Closed Meeting: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"    public CloseMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"        Meeting meetingToClose \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        Client client \u003d meetingToClose.getClient();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"        DateTime endDateTime \u003d new DateTime(meetingToClose.getEndDateTime().format(dtf));","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        Client updatedClient \u003d client.updateLastContacted(endDateTime);","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        model.setClient(client, updatedClient);","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        model.updateDisplayedClient(updatedClient);","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"        return new CommandResult(String.format(MESSAGE_CLOSE_MEETING_SUCCESS, meetingToClose));","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"                || (other instanceof CloseMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 targetIndex.equals(((CloseMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"myc37":62}},{"path":"src/main/java/seedu/address/logic/commands/meeting/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    public static final String COMMAND_WORD \u003d \"deleteMeeting\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_USAGE \u003d \"Parameters:\\n• INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"            + \"Example:\\n• \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, meetingToDelete));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"                || (other instanceof DeleteMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"raynerljm":53}},{"path":"src/main/java/seedu/address/logic/commands/meeting/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public static final String COMMAND_WORD \u003d \"editMeeting\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_USAGE \u003d \"Parameters:\\n• INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"            + \"[\" + PREFIX_START_DATETIME + \"START_DATETIME] \"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"            + \"[\" + PREFIX_END_DATETIME + \"END_DATETIME] \"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"            + \"[\" + PREFIX_LABEL + \"LABEL]\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"            + \"(Existing values will be overwritten by the input values)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"            + \"Example:\\n• \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_START_DATETIME + \"01-01-2022 18:00 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_END_DATETIME + \"01-01-2022 20:00 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"            + PREFIX_LABEL + \"Dinner\";","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_OVERLAPPING_MEETING \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"            \"The new timing specified overlaps with at least one existing meeting.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_DATETIME \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"            \"The new timing specified is invalid. The start date time cannot be after the end date time\";","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    private final Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"     * @param index of the meeting in the filtered meeting list to edit","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"        if (model.isOverlappingExcept(editedMeeting, meetingToEdit)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"            throw new CommandException(MESSAGE_OVERLAPPING_MEETING);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        if (!Meeting.isValidMeeting(editedMeeting.getStartDateTime(), editedMeeting.getEndDateTime())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"            throw new CommandException(MESSAGE_INVALID_DATETIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"joelwongjy"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS, model.isShowAllMeetings());","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime startDateTime \u003d editMeetingDescriptor.getStartDateTime() !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"                ? editMeetingDescriptor.getStartDateTime()","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"                : meetingToEdit.getStartDateTime();","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime endDateTime \u003d editMeetingDescriptor.getEndDateTime() !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"                ? editMeetingDescriptor.getEndDateTime()","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"                : meetingToEdit.getEndDateTime();","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"        String label \u003d editMeetingDescriptor.getLabel() !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"                ? editMeetingDescriptor.getLabel()","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"                : meetingToEdit.getLabel();","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"        return new Meeting(startDateTime, endDateTime, meetingToEdit.getClient(), label);","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"        // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"        EditMeetingCommand e \u003d (EditMeetingCommand) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"        private LocalDateTime startDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"        private LocalDateTime endDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"        private String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"        public EditMeetingDescriptor() {}","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"        /**","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"         */","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"            setStartDateTime(toCopy.startDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"            setEndDateTime(toCopy.endDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"            setLabel(toCopy.label);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"        /**","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"         */","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"            return CollectionUtil.isAnyNonNull(startDateTime, endDateTime, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"        public void setStartDateTime(LocalDateTime startDateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"        public void setEndDateTime(LocalDateTime endDateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"        public void setLabel(String label) {","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"            this.label \u003d label;","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"        public LocalDateTime getStartDateTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"            return startDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"        public LocalDateTime getEndDateTime() {","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"            return endDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"raynerljm"},"content":"        public String getLabel() {","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"raynerljm"},"content":"            return label;","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"raynerljm"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"raynerljm"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"raynerljm"},"content":"                return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"raynerljm"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"raynerljm"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"raynerljm"},"content":"                return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"raynerljm"},"content":"            // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"raynerljm"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"raynerljm"},"content":"            return getStartDateTime().equals(e.getStartDateTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"raynerljm"},"content":"                    \u0026\u0026 getEndDateTime().equals(e.getEndDateTime())","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"raynerljm"},"content":"                    \u0026\u0026 getLabel().equals(e.getLabel());","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"joelwongjy":1,"raynerljm":195}},{"path":"src/main/java/seedu/address/logic/commands/meeting/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.commands.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UPCOMING_MEETINGS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public static final String COMMAND_WORD \u003d \"meetings\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed upcoming meetings\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS_ALL \u003d \"Listed all meetings\";","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS_WITH_CLIENT \u003d \"Listed upcoming meetings with:\\n%s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_SUCCESS_WITH_CLIENT_ALL \u003d \"Listed all meetings with:\\n%s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    private final Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    private final boolean isShowAll;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     * Command to view all meetings with the client specified by the index.","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * @param index of the client to view meetings with.","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     * @param isShowAll determines whether to show all meetings or only upcoming meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    public ListMeetingCommand(Index index, boolean isShowAll) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        this.isShowAll \u003d isShowAll;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * Helper functions to generate the success message based on the provided inputs.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     * @param isShowAll determines whether to show all meetings or only upcoming meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"     * @param client details","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"    private String generateSuccessMessage(boolean isShowAll, Client client) {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        if (client !\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"            if (isShowAll) {","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                return String.format(MESSAGE_SUCCESS_WITH_CLIENT_ALL, client);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"                return String.format(MESSAGE_SUCCESS_WITH_CLIENT, client);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"            if (isShowAll) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"                return MESSAGE_SUCCESS_ALL;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"                return MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"     * Helper functions to generate the predicate based on the provided inputs.","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"     * @param isShowAll determines whether to show all meetings or only upcoming meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"     * @param client details","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"    private Predicate\u003cMeeting\u003e generatePredicate(boolean isShowAll, Client client) {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        if (client !\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"            if (isShowAll) {","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"                return meeting -\u003e meeting.getClient().equals(client);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"                return meeting -\u003e meeting.getClient().equals(client) \u0026\u0026 meeting.isUpcoming();","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"            if (isShowAll) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"                return PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"                return PREDICATE_SHOW_UPCOMING_MEETINGS;","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"        Client client \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"joelwongjy"},"content":"            client \u003d model.getClientList().get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"        model.updateFilteredMeetingList(generatePredicate(isShowAll, client), isShowAll);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(generateSuccessMessage(isShowAll, client), false, false, false, true,","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"                false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"sheimoria":1,"joelwongjy":5,"raynerljm":99}},{"path":"src/main/java/seedu/address/logic/commands/policy/AddPolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.commands.policy;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_MANAGER;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREMIUM;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.DuplicatePolicyException;","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"public class AddPolicyCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"addPolicy\";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New policy added: %s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a policy to the client identified \"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"            + \"by the index number used in the displayed client list. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_POLICY_MANAGER + \"POLICY_MANAGER] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_PREMIUM + \"PREMIUM]...\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"            + PREFIX_NAME + \"Investment Plan \"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"            + PREFIX_COMPANY + \"AAM Advisory \"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"            + PREFIX_POLICY_MANAGER + \"Me \"","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"            + PREFIX_PREMIUM + \"15\";","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"    private final Policy policyToAdd;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"     * Creates an AddPolicyCommand to add the specified {@code Policy} to the {@code Client} specified by {@code Index}","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"    public AddPolicyCommand(Index index, Policy policy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"        requireNonNull(policy);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        this.policyToAdd \u003d policy;","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"        Client clientToAddPolicy \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"        Client updatedClient;","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"            updatedClient \u003d clientToAddPolicy.addPolicy(policyToAdd);","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        } catch (DuplicatePolicyException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"        model.setClient(clientToAddPolicy, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"        model.updateDisplayedClient(clientToAddPolicy);","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, policyToAdd), false, false, false,","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"joelwongjy"},"content":"                false, false, null, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"myc37"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 policyToAdd.equals(((AddPolicyCommand) other).policyToAdd)","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 index.equals(((AddPolicyCommand) other).index));","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":2,"joelwongjy":4,"myc37":77}},{"path":"src/main/java/seedu/address/logic/commands/policy/DeletePolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.commands.policy;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.EmptyPolicyListException;","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.InvalidPolicyIndexException;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":" * Deletes a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"public class DeletePolicyCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"deletePolicy\";","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"            + \": Deletes the policy identified by the client index number used in the displayed client list and \"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"            + \"policy index number used in the displayed client card.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"            + \"Parameters: INDEX pi/POLICY_INDEX\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_DELETE_POLICY_SUCCESS \u003d \"Deleted Policy: %s from %s\u0027s policy list\";","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    private final Index clientIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"    private final Index policyIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"     * @param clientIndex index of the client to remove policy from","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"     * @param policyIndex index of the policy to be removed","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"    public DeletePolicyCommand(Index clientIndex, Index policyIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"        this.clientIndex \u003d clientIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        this.policyIndex \u003d policyIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        if (clientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        Client clientToDeletePolicy \u003d lastShownList.get(clientIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        Client updatedClient;","lastModifiedDate":"2022-04-05"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"        Policy policyToDelete;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"            policyToDelete \u003d clientToDeletePolicy.getPolicy(policyIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"            updatedClient \u003d clientToDeletePolicy.removePolicy(policyToDelete);","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"        } catch (EmptyPolicyListException | InvalidPolicyIndexException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"        model.setClient(clientToDeletePolicy, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"        model.updateDisplayedClient(clientToDeletePolicy);","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_POLICY_SUCCESS, policyToDelete,","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"joelwongjy"},"content":"                clientToDeletePolicy.getName()), false, false, false,","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"                false, false, null, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"                || (other instanceof DeletePolicyCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 clientIndex.equals(((DeletePolicyCommand) other).clientIndex) // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 policyIndex.equals(((DeletePolicyCommand) other).policyIndex));","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"joelwongjy":4,"myc37":73}},{"path":"src/main/java/seedu/address/logic/commands/policy/EditPolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.commands.policy;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_MANAGER;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREMIUM;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.DuplicatePolicyException;","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.InvalidPolicyIndexException;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.PolicyNotEditedException;","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":" * Edits a client identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"public class EditPolicyCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    public static final String COMMAND_WORD \u003d \"editPolicy\";","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited Policy: %s from %s\u0027s policy list\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"            + \": Edits the policy identified by the client index number used in the displayed client list and \"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"            + \"policy index number used in the displayed client card.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"            + \"Parameters: INDEX pi/POLICY_INDEX\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_POLICY_MANAGER + \"POLICY_MANAGER] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"            + \"[\" + PREFIX_PREMIUM + \"PREMIUM] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"            + PREFIX_NAME + \"Renamed Policy\";","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"    private final Index clientIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"    private final Index policyIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"    private final EditPolicyDescriptor editPolicyDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"     * @param clientIndex index of client whose policy is to be edited","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"     * @param policyIndex index of the policy to be edited","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"     * @param editPolicyDescriptor details to edit the policy with","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"    public EditPolicyCommand(Index clientIndex, Index policyIndex, EditPolicyDescriptor editPolicyDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"        requireNonNull(clientIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        requireNonNull(policyIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"        requireNonNull(editPolicyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"        this.clientIndex \u003d clientIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"        this.policyIndex \u003d policyIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"        this.editPolicyDescriptor \u003d editPolicyDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"        if (clientIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"        Client clientToEditPolicy \u003d lastShownList.get(clientIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"        Policy editedPolicy;","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"myc37"},"content":"            Name editedPolicyName \u003d editPolicyDescriptor.getName().orElse(clientToEditPolicy.getPolicy(","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"                    policyIndex.getZeroBased()).getName());","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"            Name editedCompany \u003d editPolicyDescriptor.getCompany().orElse(clientToEditPolicy.getPolicy(","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"                    policyIndex.getZeroBased()).getCompany());","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"            Name editedPolicyManager \u003d editPolicyDescriptor.getPolicyManager().orElse(clientToEditPolicy.getPolicy(","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"                    policyIndex.getZeroBased()).getPolicyManager());","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"            Premium editedPremium \u003d","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"myc37"},"content":"                    editPolicyDescriptor.getPremium().orElse(clientToEditPolicy.getPolicy(","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"                            policyIndex.getZeroBased()).getPremium());","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"myc37"},"content":"            editedPolicy \u003d new Policy(editedPolicyName, editedCompany, editedPolicyManager, editedPremium);","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"myc37"},"content":"        } catch (InvalidPolicyIndexException e) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POLICY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":96,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":97,"author":{"gitId":"myc37"},"content":"        Client updatedClient;","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"            updatedClient \u003d clientToEditPolicy.setPolicy(policyIndex.getZeroBased(), editedPolicy);","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"        } catch (InvalidPolicyIndexException | PolicyNotEditedException | DuplicatePolicyException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"myc37"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-04-05"},{"lineNumber":102,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"        model.setClient(clientToEditPolicy, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"myc37"},"content":"        model.updateDisplayedClient(updatedClient);","lastModifiedDate":"2022-04-05"},{"lineNumber":105,"author":{"gitId":"joelwongjy"},"content":"        return new CommandResult((String.format(MESSAGE_SUCCESS, editedPolicy, clientToEditPolicy.getName())),","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"joelwongjy"},"content":"                false, false, false, false, false, null, updatedClient);","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"myc37"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 clientIndex.equals(((EditPolicyCommand) other).clientIndex)","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 policyIndex.equals(((EditPolicyCommand) other).policyIndex)","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 editPolicyDescriptor.equals(((EditPolicyCommand) other).editPolicyDescriptor));","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"myc37"},"content":"     * Stores the details to edit the policy with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"myc37"},"content":"     * corresponding field value of the policy.","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"myc37"},"content":"    public static class EditPolicyDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"myc37"},"content":"        private Name name;","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"myc37"},"content":"        private Name company;","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"myc37"},"content":"        private Name policyManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"myc37"},"content":"        private Premium premium;","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"        public EditPolicyDescriptor() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"myc37"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"myc37"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"myc37"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"myc37"},"content":"            return CollectionUtil.isAnyNonNull(name, company, policyManager, premium);","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"myc37"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"myc37"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"myc37"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"myc37"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"myc37"},"content":"        public void setCompany(Name company) {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"myc37"},"content":"            this.company \u003d company;","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"myc37"},"content":"        public Optional\u003cName\u003e getCompany() {","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"myc37"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"myc37"},"content":"        public void setPolicyManager(Name policyManager) {","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"myc37"},"content":"            this.policyManager \u003d policyManager;","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"myc37"},"content":"        public Optional\u003cName\u003e getPolicyManager() {","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"myc37"},"content":"            return Optional.ofNullable(policyManager);","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"myc37"},"content":"        public void setPremium(Premium premium) {","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"            this.premium \u003d premium;","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"myc37"},"content":"        public Optional\u003cPremium\u003e getPremium() {","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"myc37"},"content":"            return Optional.ofNullable(premium);","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"myc37"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"myc37"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"myc37"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"myc37"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"myc37"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"myc37"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"myc37"},"content":"            if (!(other instanceof EditPolicyDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"myc37"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"myc37"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"myc37"},"content":"            EditPolicyDescriptor e \u003d (EditPolicyDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"myc37"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"myc37"},"content":"                    \u0026\u0026 getCompany().equals(e.getCompany())","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"myc37"},"content":"                    \u0026\u0026 getPolicyManager().equals(e.getPolicyManager())","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"myc37"},"content":"                    \u0026\u0026 getPremium().equals(e.getPremium());","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"joelwongjy":5,"myc37":186}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_CONTACTED;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":" * * input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"                        PREFIX_BIRTHDAY, PREFIX_LAST_CONTACTED);","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        Date birthday \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_BIRTHDAY).orElse(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        DateTime lastContacted \u003d ParserUtil.parseLastContacted(argMultimap.getValue(PREFIX_LAST_CONTACTED)","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"                .orElse(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        Client client \u003d new Client(name, phone, email, address, birthday, lastContacted);","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        return new AddCommand(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"sheimoria":18,"myc37":2,"-":44}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     * and returns a AddNoteCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NOTE)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        Index index;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"            throw new ParseException((String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE)));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        editClientDescriptor.setNote(note);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        return new AddNoteCommand(index, editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":4,"zechajw":51}},{"path":"src/main/java/seedu/address/logic/parser/AddPreferenceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_DETAIL;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_KEY;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.AddPreferenceCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"public class AddPreferenceCommandParser implements Parser\u003cAddPreferenceCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPreferenceCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * and returns an AddPreferenceCommand object for execution","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    public AddPreferenceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PREFERENCE_KEY, PREFIX_PREFERENCE_DETAIL);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_PREFERENCE_KEY, PREFIX_PREFERENCE_DETAIL)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPreferenceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        Index index;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"                    AddPreferenceCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"                    pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"        return new AddPreferenceCommand(index, argumentMultimap.getValue(PREFIX_PREFERENCE_KEY).get(),","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"                argumentMultimap.getValue(PREFIX_PREFERENCE_DETAIL).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"     * {@code ArgumentMultiMap}","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"zechajw":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.AddPreferenceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.ContactedCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.DeletePreferenceCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.TutorialCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.ViewClientCommand;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.AddMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.meeting.CloseMeetingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.DeleteMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.EditMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.ListMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.AddPolicyCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.DeletePolicyCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.EditPolicyCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.meeting.AddMeetingCommandParser;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.meeting.CloseMeetingCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.meeting.DeleteMeetingCommandParser;","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.meeting.EditMeetingCommandParser;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.meeting.ListMeetingCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.policy.AddPolicyCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.policy.DeletePolicyCommandParser;","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.policy.EditPolicyCommandParser;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        case ContactedCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"            return new ContactedCommandParser().parse(arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"joelwongjy"},"content":"        case TutorialCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"            return new TutorialCommand();","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"            return new ListMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"myc37"},"content":"        case AddPolicyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"myc37"},"content":"            return new AddPolicyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"zechajw"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"zechajw"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"zechajw"},"content":"        case AddPreferenceCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"zechajw"},"content":"            return new AddPreferenceCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"joelwongjy"},"content":"        case DeletePreferenceCommand.COMMAND_WORD:","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"joelwongjy"},"content":"            return new DeletePreferenceCommandParser().parse(arguments);","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"myc37"},"content":"        case DeletePolicyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"myc37"},"content":"            return new DeletePolicyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"myc37"},"content":"        case EditPolicyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"            return new EditPolicyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"joelwongjy"},"content":"        case ViewClientCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"joelwongjy"},"content":"            return new ViewClientCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"zechajw"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"zechajw"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"myc37"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"myc37"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"zechajw"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"zechajw"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"myc37"},"content":"        case CloseMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"myc37"},"content":"            return new CloseMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joelwongjy":18,"sheimoria":3,"myc37":23,"raynerljm":20,"zechajw":12,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"    public static final Prefix PREFIX_LAST_CONTACTED \u003d new Prefix(\"lc/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    public static final Prefix PREFIX_START_DATETIME \u003d new Prefix(\"ms/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    public static final Prefix PREFIX_END_DATETIME \u003d new Prefix(\"me/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    public static final Prefix PREFIX_MEETINGS_SHOW_ALL \u003d new Prefix(\"all/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    public static final Prefix PREFIX_LABEL \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"    public static final Prefix PREFIX_POLICY_MANAGER \u003d new Prefix(\"pm/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    public static final Prefix PREFIX_PREMIUM \u003d new Prefix(\"$/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"nt/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    public static final Prefix PREFIX_PREFERENCE_KEY \u003d new Prefix(\"cat/\");","lastModifiedDate":"2022-04-04"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    public static final Prefix PREFIX_PREFERENCE_DETAIL \u003d new Prefix(\"pref/\");","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"    public static final Prefix PREFIX_POLICY_INDEX \u003d new Prefix(\"pi/\");","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"    public static final Prefix PREFIX_SORT_DIRECTION \u003d new Prefix(\"dir/\");","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    public static final Prefix PREFIX_FILTER_OPERATOR \u003d new Prefix(\"op/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    public static final Prefix PREFIX_FILTER_VALUE \u003d new Prefix(\"v/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sheimoria":3,"myc37":5,"raynerljm":4,"zechajw":5,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/ContactedCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.ContactedCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":" * Parses input arguments and creates a new ContactedCommand object","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"public class ContactedCommandParser implements Parser\u003cContactedCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"     * Parses the given {@code String} of arguments in the context of the ContactedCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"     * and returns a ContactedCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    public ContactedCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATETIME);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATETIME)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ContactedCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"            throw new ParseException((String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE)));","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        DateTime contacted \u003d ParserUtil.parseLastContacted(argMultimap.getValue(PREFIX_DATETIME).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        editClientDescriptor.setLastContacted(contacted);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        return new ContactedCommand(index, editClientDescriptor);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"sheimoria":56}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteNoteCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * and returns a DeleteNoteCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        Index index;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"            throw new ParseException((String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE)));","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        EditCommand.EditClientDescriptor editClientDescriptor \u003d new EditCommand.EditClientDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"        Note note \u003d new Note(Note.DEFAULT_NOTE);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        editClientDescriptor.setNote(note);","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        return new DeleteNoteCommand(index, editClientDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"zechajw":38}},{"path":"src/main/java/seedu/address/logic/parser/DeletePreferenceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERENCE_KEY;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.DeletePreferenceCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"public class DeletePreferenceCommandParser implements Parser\u003cDeletePreferenceCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * Parses the given {@code String} of arguments in the context of DeletePreferenceCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * and returns a DeletePreferenceCommand object for execution","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public DeletePreferenceCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PREFERENCE_KEY);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_PREFERENCE_KEY)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"                    DeletePreferenceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"        Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"                    DeletePreferenceCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        return new DeletePreferenceCommand(index, argumentMultimap.getValue(PREFIX_PREFERENCE_KEY).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"     * {@code ArgumentMultiMap}","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"zechajw":48}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_CONTACTED;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"                        PREFIX_BIRTHDAY, PREFIX_LAST_CONTACTED);","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setBirthday(ParserUtil.parseDate(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        if (argMultimap.getValue(PREFIX_LAST_CONTACTED).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"            editClientDescriptor.setLastContacted(ParserUtil.parseLastContacted(argMultimap","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"                    .getValue(PREFIX_LAST_CONTACTED).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"        return new EditCommand(index, editClientDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sheimoria":17,"myc37":1,"-":50}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_OPERATOR;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILTER_VALUE;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * and returns an FilterCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILTER_OPERATOR, PREFIX_FILTER_VALUE);","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FILTER_OPERATOR, PREFIX_FILTER_VALUE)","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"        String attribute;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"            attribute \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"        String operator \u003d argMultimap.getValue(PREFIX_FILTER_OPERATOR).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"        String value \u003d argMultimap.getValue(PREFIX_FILTER_VALUE).get();","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"        return new FilterCommand(attribute, operator, value);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"zechajw":52}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sheimoria":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    public static final String DEFAULT_DATE \u003d \"01-01-0001\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    public static final String DEFAULT_DATETIME \u003d \"01-01-0001 00:00\";","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"            return new Address();","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"sheimoria"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"            return new Date();","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"     * Parses a {@code String dateTime} into a {@code DateTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"    public static DateTime parseLastContacted(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"            return new DateTime();","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"sheimoria"},"content":"            return new Email();","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"     * Parses a {@code String input} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"    public static LocalDateTime parseDateTime(String stringDateTime) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(stringDateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"        String trimmedStringDateTime \u003d stringDateTime.trim();","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"        if (!Meeting.isValidDate(trimmedStringDateTime)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(Meeting.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"        } else if (!Meeting.isValidDateRange(trimmedStringDateTime)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(Meeting.DATETIME_MESSAGE_BAD_RANGE);","lastModifiedDate":"2022-04-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"        return LocalDateTime.parse(trimmedStringDateTime, Meeting.DATETIME_FORMATTER);","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"myc37"},"content":"     * Parses a {@code String premium} into a {@code Premium}.","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"myc37"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"myc37"},"content":"     * @throws ParseException if the given {@code premium} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"myc37"},"content":"    public static Premium parsePremium(String premium) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"myc37"},"content":"        requireNonNull(premium);","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"myc37"},"content":"        String trimmedPremium \u003d premium.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"myc37"},"content":"        if (!Premium.isValidPremium(trimmedPremium)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"myc37"},"content":"            throw new ParseException(Premium.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"myc37"},"content":"        return new Premium(trimmedPremium);","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"zechajw"},"content":"     * Parses a {@code String note} into a {@code Note}","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"zechajw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"zechajw"},"content":"    public static Note parseNote(String note) {","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"zechajw"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"zechajw"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"zechajw"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sheimoria":49,"myc37":12,"raynerljm":14,"zechajw":9,"-":99}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_SORT_DIRECTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_DIRECTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_DIRECTION);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"        String attribute;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"            attribute \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"        Set\u003cString\u003e validSortDirections \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"        validSortDirections.add(\"asc\");","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        validSortDirections.add(\"desc\");","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"        String sortDirection \u003d argMultimap.getValue(PREFIX_SORT_DIRECTION).orElse(\"desc\");","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        if (!validSortDirections.contains(sortDirection)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_SORT_DIRECTION,","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"                    SortCommand.MESSAGE_INVALID_SORT_DIRECTION));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        return new SortCommand(attribute, sortDirection.equals(\"asc\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"myc37":50}},{"path":"src/main/java/seedu/address/logic/parser/ViewClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.ViewClientCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"public class ViewClientCommandParser implements Parser\u003cViewClientCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewClientCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"     * and returns a ViewClientCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"    public ViewClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"            return new ViewClientCommand(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":25}},{"path":"src/main/java/seedu/address/logic/parser/meeting/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARAMETERS;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.AddMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":" * Parses input arguments and creates a new AddMeetingCommand object","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_LABEL);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_START_DATETIME, PREFIX_END_DATETIME)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        Index index;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"                    AddMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"                    pe);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime startDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime endDateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            startDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATETIME).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            endDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATETIME).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"                    \"Reason:\\n\" + pe.getMessage() + \"\\n\" + AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        if (argMultimap.getValue(PREFIX_LABEL).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"            label \u003d argMultimap.getValue(PREFIX_LABEL).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"            label \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        if (!Meeting.isValidMeeting(startDateTime, endDateTime)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"                    MESSAGE_INVALID_PARAMETERS,","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"                    AddMeetingCommand.MESSAGE_INVALID_DATETIME));","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        return new AddMeetingCommand(index, startDateTime, endDateTime, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"raynerljm":85}},{"path":"src/main/java/seedu/address/logic/parser/meeting/CloseMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.meeting.CloseMeetingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"public class CloseMeetingCommandParser implements Parser\u003cCloseMeetingCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"    public CloseMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"            return new CloseMeetingCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloseMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"myc37":31}},{"path":"src/main/java/seedu/address/logic/parser/meeting/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.DeleteMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"raynerljm":32}},{"path":"src/main/java/seedu/address/logic/parser/meeting/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LABEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATETIME;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.EditMeetingCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":" * Parses input arguments and creates a new EditMeetingCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_START_DATETIME, PREFIX_END_DATETIME, PREFIX_LABEL);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"        Index index;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"                    EditMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        if (argMultimap.getValue(PREFIX_START_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"            editMeetingDescriptor.setStartDateTime(","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"                    ParserUtil.parseDateTime(","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"                            argMultimap.getValue(PREFIX_START_DATETIME).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        if (argMultimap.getValue(PREFIX_END_DATETIME).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"            editMeetingDescriptor.setEndDateTime(","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"                    ParserUtil.parseDateTime(","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                            argMultimap.getValue(PREFIX_END_DATETIME).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        if (argMultimap.getValue(PREFIX_LABEL).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            if (argMultimap.getValue(PREFIX_LABEL).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"                label \u003d argMultimap.getValue(PREFIX_LABEL).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"                label \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"            editMeetingDescriptor.setLabel(label);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"raynerljm":69}},{"path":"src/main/java/seedu/address/logic/parser/meeting/ListMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.logic.parser.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETINGS_SHOW_ALL;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.commands.meeting.ListMeetingCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"public class ListMeetingCommandParser implements Parser\u003cListMeetingCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"     * Parses the given {@code String} of arguments in the context of the ListMeetingCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     * and returns a ListMeetingCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     * Returns a ListMeetingCommand with no index if no index was specified.","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    public ListMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEETINGS_SHOW_ALL);","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"        boolean isShowAll \u003d arePrefixesPresent(argMultimap, PREFIX_MEETINGS_SHOW_ALL);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"        Index index;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"            index \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        return new ListMeetingCommand(index, isShowAll);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"raynerljm":45}},{"path":"src/main/java/seedu/address/logic/parser/policy/AddPolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.parser.policy;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_MANAGER;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREMIUM;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.AddPolicyCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":" * Parses input arguments and creates a new AddPolicyCommand object","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"public class AddPolicyCommandParser implements Parser\u003cAddPolicyCommand\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    public AddPolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_POLICY_MANAGER, PREFIX_PREMIUM);","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COMPANY, PREFIX_POLICY_MANAGER, PREFIX_PREMIUM)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        Index index;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPolicyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"        assert argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        Name policyName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        assert argMultimap.getValue(PREFIX_COMPANY).isPresent();","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        Name company \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"        assert argMultimap.getValue(PREFIX_POLICY_MANAGER).isPresent();","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        Name policyManager \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_POLICY_MANAGER).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        assert argMultimap.getValue(PREFIX_PREMIUM).isPresent();","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"        Premium premium \u003d ParserUtil.parsePremium(argMultimap.getValue(PREFIX_PREMIUM).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"        Policy policy \u003d new Policy(policyName, company, policyManager, premium);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        return new AddPolicyCommand(index, policy);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":1,"myc37":67,"zechajw":1}},{"path":"src/main/java/seedu/address/logic/parser/policy/DeletePolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.parser.policy;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.DeletePolicyCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":" * Parses input arguments and creates a new DeletePolicyCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"public class DeletePolicyCommandParser implements Parser\u003cDeletePolicyCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePolicyCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"     * and returns a DeletePolicyCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"    public DeletePolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POLICY_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POLICY_INDEX)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"        Index policyIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_POLICY_INDEX).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"        Index clientIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"            clientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePolicyCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"                    pe);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"        return new DeletePolicyCommand(clientIndex, policyIndex);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"myc37":54}},{"path":"src/main/java/seedu/address/logic/parser/policy/EditPolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.logic.parser.policy;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_INDEX;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POLICY_MANAGER;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREMIUM;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.commands.policy.EditPolicyCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":" * Parses input arguments and creates a new EditPolicyCommand object","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"public class EditPolicyCommandParser implements Parser\u003cEditPolicyCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPolicyCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"     * and returns a EditPolicyCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    public EditPolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POLICY_INDEX, PREFIX_NAME,","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"                        PREFIX_COMPANY, PREFIX_POLICY_MANAGER, PREFIX_PREMIUM);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_POLICY_INDEX)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"        Index policyIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_POLICY_INDEX).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        Index clientIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"            clientIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPolicyCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"                    pe);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        EditPolicyCommand.EditPolicyDescriptor editPolicyDescriptor \u003d new EditPolicyCommand.EditPolicyDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"            Name policyName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"            editPolicyDescriptor.setName(policyName);","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"            Name company \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"            editPolicyDescriptor.setCompany(company);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"        if (argMultimap.getValue(PREFIX_POLICY_MANAGER).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"            Name policyManager \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_POLICY_MANAGER).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"            editPolicyDescriptor.setPolicyManager(policyManager);","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        if (argMultimap.getValue(PREFIX_PREMIUM).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"            Premium premium \u003d ParserUtil.parsePremium(argMultimap.getValue(PREFIX_PREMIUM).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"            editPolicyDescriptor.setPremium(premium);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"        if (!editPolicyDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"        return new EditPolicyCommand(clientIndex, policyIndex, editPolicyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"myc37"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"myc37":86}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.NonOverlappingMeetingList;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":" * Duplicates are not allowed (by .isSameClient comparison)","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    private final NonOverlappingMeetingList meetings;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        meetings \u003d new NonOverlappingMeetingList();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"     * Creates an AddressBook using the Clients in the {@code toBeCopied}","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"     * {@code clients} must not contain overlapping meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    //// client-level operations","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"        return clients.contains(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"        clients.add(p);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"sheimoria"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"        meetings.setClient(target, editedClient);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"myc37"},"content":"        removeClientMeetings(key);","lastModifiedDate":"2022-04-05"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"        clients.remove(key);","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"myc37"},"content":"    private void removeClientMeetings(Client key) {","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"myc37"},"content":"        for (Iterator\u003cMeeting\u003e iterator \u003d meetings.iterator(); iterator.hasNext();) {","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"            Meeting m \u003d iterator.next();","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"myc37"},"content":"            if (m.getClient().equals(key)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":118,"author":{"gitId":"myc37"},"content":"                iterator.remove();","lastModifiedDate":"2022-04-05"},{"lineNumber":119,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":120,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":122,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"     * Returns true if a meeting overlaps with {@code meeting} in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"    public boolean isOverlapping(Meeting meeting) {","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"        return meetings.overlaps(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"     * Returns true if a meeting overlaps with {@code meeting} in the address book except the specified meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"    public boolean isOverlappingExcept(Meeting meeting, Meeting exceptedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(meeting, exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"        return meetings.overlapsExcept(meeting, exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"     * The meeting must not be overlapping with other meetings in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"        meetings.add(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"     * Removes {@code meeting} from this {@code AddressBook}.","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"     * {@code meeting} must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"    public void removeMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"        meetings.remove(meeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"     * The meeting timing of {@code editedMeeting} must not be overlapping with","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"     * another existing meeting in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"     * Sorts meetings in ascending order.","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"raynerljm"},"content":"    public void sortMeetings() {","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"raynerljm"},"content":"        meetings.sortAscending();","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"sheimoria"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients\";","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"sheimoria"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"sheimoria"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":187,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"raynerljm"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"raynerljm"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 clients.equals(((AddressBook) other).clients));","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"sheimoria"},"content":"        return clients.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":33,"myc37":11,"raynerljm":64,"-":95}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     * @{code Predicate} that only evaluates to true if the meeting is today or in the future","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_UPCOMING_MEETINGS \u003d meeting -\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"        return meeting.isUpcoming();","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    };","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"     * Deletes the given client.","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"     * Adds the given client.","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"     * {@code client} must not already exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"    void addClient(Client client);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"     * Returns an unmodifiable view of the filtered client list","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"     * Returns an unmodifiable view of the filtered or sorted list of clients depending on whether client list is","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"joelwongjy"},"content":"     * sorted","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"joelwongjy"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"myc37"},"content":"    void updateSortedClientList(Comparator\u003cClient\u003e comparator);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"joelwongjy"},"content":"    Client getDisplayedClient();","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"joelwongjy"},"content":"    void updateDisplayedClient(Client client);","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"     * Adds the given meeting.","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"     * {@code meeting} must not overlap with existing meetings.","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"     * The meeting must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"    void deleteMeeting(Meeting meeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"     * The meeting timing of {@code editedMeeting} must not be overlapping with","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"     * another existing meeting in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"     * Sorts the meetings by descending order.","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"    void sortMeetings();","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"     * Returns true if there is a meeting that overlaps with {@code meeting} in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"    boolean isOverlapping(Meeting meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"     * Returns true if there is a meeting that overlaps with {@code meeting} in the addres book except the","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"     * specified meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"    boolean isOverlappingExcept(Meeting meeting, Meeting exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"     * Returns an unmodifiable view of the filtered meeting list","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"joelwongjy"},"content":"     * Returns whether all or only upcoming meetings are displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"joelwongjy"},"content":"    boolean isShowAllMeetings();","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"joelwongjy"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate, boolean isShowAll);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"joelwongjy"},"content":"     * Returns whether clients displayed are in sorted order.","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"joelwongjy"},"content":"    boolean isSorted();","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"joelwongjy"},"content":"     * Set whether clients displayed are in sorted order.","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"joelwongjy"},"content":"    void setIsSorted(boolean isSorted);","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"sheimoria":17,"joelwongjy":25,"myc37":3,"raynerljm":55,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"    private final SortedList\u003cClient\u003e sortedClients;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"    private boolean isShowAllMeetings \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    private Client displayedClient;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"    private boolean isSorted \u003d false;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"        sortedClients \u003d new SortedList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"    public boolean isOverlapping(Meeting meeting) {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"        return addressBook.isOverlapping(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"    public boolean isOverlappingExcept(Meeting meeting, Meeting exceptedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(meeting, exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"        return addressBook.isOverlappingExcept(meeting, exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"joelwongjy"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS, isShowAllMeetings);","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"joelwongjy"},"content":"    public boolean isShowAllMeetings() {","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"joelwongjy"},"content":"        return isShowAllMeetings;","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"        addressBook.removeMeeting(target);","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"    public void sortMeetings() {","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"        addressBook.sortMeetings();","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"joelwongjy"},"content":"    public Client getDisplayedClient() {","lastModifiedDate":"2022-04-01"},{"lineNumber":164,"author":{"gitId":"joelwongjy"},"content":"        return displayedClient;","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"joelwongjy"},"content":"    public void updateDisplayedClient(Client client) {","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"joelwongjy"},"content":"        displayedClient \u003d client;","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"joelwongjy"},"content":"    public boolean isSorted() {","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"joelwongjy"},"content":"        return isSorted;","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"joelwongjy"},"content":"    public void setIsSorted(boolean isSorted) {","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"joelwongjy"},"content":"        this.isSorted \u003d isSorted;","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"sheimoria"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":185,"author":{"gitId":"sheimoria"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"sheimoria"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"sheimoria"},"content":"        return filteredClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"joelwongjy"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"joelwongjy"},"content":"        return isSorted ? sortedClients : filteredClients;","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"joelwongjy"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"joelwongjy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"joelwongjy"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"myc37"},"content":"    public void updateSortedClientList(Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"myc37"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"myc37"},"content":"        sortedClients.setComparator(comparator);","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"raynerljm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"raynerljm"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting}.","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"raynerljm"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"raynerljm"},"content":"        return filteredMeetings;","lastModifiedDate":"2022-03-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":221,"author":{"gitId":"joelwongjy"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate, boolean isShowAll) {","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"joelwongjy"},"content":"        this.isShowAllMeetings \u003d isShowAll;","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"raynerljm"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":243,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 filteredClients.equals(other.filteredClients)","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 sortedClients.equals(other.sortedClients);","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":18,"joelwongjy":36,"myc37":15,"raynerljm":44,"-":134}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     * Returns an unmodifiable view of the meeting list.","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":4,"raynerljm":5,"-":14}},{"path":"src/main/java/seedu/address/model/client/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s address in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    public Address() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":6,"-":55}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.UniquePolicyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.EmptyPolicyListException;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.InvalidPolicyIndexException;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":" * Represents a Client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"public class Client {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    private final Address address;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"    private Date birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    private DateTime lastContacted;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    private final UniquePolicyList policies \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    private Note note \u003d new Note(\"\");","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    private final PreferenceMap preferences \u003d new PreferenceMap();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Date birthday, DateTime lastContacted) {","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"        requireAllNonNull(name, phone, email, address, birthday, lastContacted);","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        this.lastContacted \u003d lastContacted;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"     * Overloaded constructor for all commands.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"    public Client(Name name, Phone phone, Email email, Address address, Date birthday, DateTime lastContacted,","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"                  UniquePolicyList policies, Note note, PreferenceMap preferences) {","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        requireAllNonNull(name, phone, email, address, policies, note, preferences);","lastModifiedDate":"2022-04-05"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        this.lastContacted \u003d lastContacted;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        this.policies.setPolicies(policies);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"        this.preferences.addAllPreferences(preferences);","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"    public Date getBirthday() {","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        return birthday;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"        return birthday.getAge();","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"    public int getBirthdayMonth() {","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"        return birthday.getMonth();","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"    public DateTime getLastContacted() {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        return lastContacted;","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"    public PreferenceMap getPreferenceMap() {","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"        return this.preferences;","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"myc37"},"content":"     * Returns an immutable policy list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"myc37"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"myc37"},"content":"    public UniquePolicyList getPolicies() {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"myc37"},"content":"        return policies;","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"zechajw"},"content":"     * Returns a note","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"zechajw"},"content":"    public Note getNote() {","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"zechajw"},"content":"        return note;","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"     * Returns true if both clients have the same name.","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 otherClient.getName().equals(getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"myc37"},"content":"    public Policy getPolicy(int index) throws EmptyPolicyListException, InvalidPolicyIndexException {","lastModifiedDate":"2022-04-05"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"        List\u003cPolicy\u003e policyList \u003d policies.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"        if (policyList.isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":131,"author":{"gitId":"myc37"},"content":"            throw new EmptyPolicyListException();","lastModifiedDate":"2022-04-05"},{"lineNumber":132,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":133,"author":{"gitId":"myc37"},"content":"        if (index \u003c 0 || index \u003e\u003d policyList.size()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":134,"author":{"gitId":"myc37"},"content":"            throw new InvalidPolicyIndexException();","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"myc37"},"content":"        return policyList.get(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"     * Add {@code policyToAdd} to this client","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"myc37"},"content":"    public Client addPolicy(Policy policyToAdd) {","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"myc37"},"content":"        UniquePolicyList updatedPolicyList \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.setPolicies(policies);","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":146,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.add(policyToAdd);","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"myc37"},"content":"        return new Client(name, phone, email, address, birthday, lastContacted, updatedPolicyList, note,","lastModifiedDate":"2022-04-05"},{"lineNumber":148,"author":{"gitId":"myc37"},"content":"                preferences);","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"myc37"},"content":"     * Update {@code editedPolicy} for this client","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"myc37"},"content":"    public Client setPolicy(int index, Policy editedPolicy) {","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"myc37"},"content":"        UniquePolicyList updatedPolicyList \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.setPolicies(policies);","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"myc37"},"content":"        Policy prevPolicy \u003d getPolicy(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.setPolicy(prevPolicy, editedPolicy);","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"myc37"},"content":"        return new Client(name, phone, email, address, birthday, lastContacted, updatedPolicyList, note,","lastModifiedDate":"2022-04-05"},{"lineNumber":160,"author":{"gitId":"myc37"},"content":"                preferences);","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"myc37"},"content":"     * Remove {@code policyToRemove} from this client","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"myc37"},"content":"    public Client removePolicy(Policy policyToRemove) {","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"myc37"},"content":"        UniquePolicyList updatedPolicyList \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.setPolicies(policies);","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"myc37"},"content":"        updatedPolicyList.remove(policyToRemove);","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"myc37"},"content":"        return new Client(name, phone, email, address, birthday, lastContacted, updatedPolicyList, note,","lastModifiedDate":"2022-04-05"},{"lineNumber":171,"author":{"gitId":"myc37"},"content":"                preferences);","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"sheimoria"},"content":"     * Adds the key, value pair to the PreferenceMap for this client","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"zechajw"},"content":"    public void addPreference(String key, String value) {","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"zechajw"},"content":"        this.preferences.addPreference(key, value);","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"zechajw"},"content":"     * Deletes the key from the PreferenceMap for this client","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"zechajw"},"content":"     * @param key - the key to be deleted from the PreferenceMap","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"zechajw"},"content":"    public void deletePreference(String key) {","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"zechajw"},"content":"        this.preferences.deletePreference(key);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"myc37"},"content":"     * Updates the lastContacted DateTime of this client.","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"myc37"},"content":"    public Client updateLastContacted(DateTime dateTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"myc37"},"content":"        return new Client(name, phone, email, address, birthday, dateTime, policies, note, preferences);","lastModifiedDate":"2022-04-05"},{"lineNumber":194,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"sheimoria"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"sheimoria"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"sheimoria"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"sheimoria"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"sheimoria"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 otherClient.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-17"},{"lineNumber":214,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 otherClient.getAddress().equals(getAddress());","lastModifiedDate":"2022-04-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"myc37"},"content":"        return Objects.hash(name, phone, email, address, birthday, lastContacted, policies, preferences, note);","lastModifiedDate":"2022-04-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":232,"author":{"gitId":"myc37"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-08"},{"lineNumber":233,"author":{"gitId":"sheimoria"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2022-03-16"},{"lineNumber":234,"author":{"gitId":"sheimoria"},"content":"                .append(getBirthday())","lastModifiedDate":"2022-03-16"},{"lineNumber":235,"author":{"gitId":"sheimoria"},"content":"                .append(\"; Last Contacted: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"sheimoria"},"content":"                .append(getLastContacted())","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"myc37"},"content":"                .append(\"; Policies: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":238,"author":{"gitId":"myc37"},"content":"                .append(getPolicies().asUnmodifiableObservableList().size())","lastModifiedDate":"2022-03-27"},{"lineNumber":239,"author":{"gitId":"zechajw"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":240,"author":{"gitId":"zechajw"},"content":"                .append(getNote())","lastModifiedDate":"2022-03-13"},{"lineNumber":241,"author":{"gitId":"zechajw"},"content":"                .append(\"; Preferences: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":242,"author":{"gitId":"zechajw"},"content":"                .append(getPreferenceMap().size());","lastModifiedDate":"2022-03-13"},{"lineNumber":243,"author":{"gitId":"myc37"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":48,"myc37":82,"zechajw":39,"-":76}},{"path":"src/main/java/seedu/address/model/client/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"import java.time.Period;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":" * Represents a date in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"public class Date {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in dd-MM-yyyy format.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"    /*","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"     * Date should be in dd-MM-yyyy format.","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([012][1-9]|3[01])-([0][1-9]|1[012])-([0-9][0-9][0-9][1-9])$\";","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    public final String value;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    public Date() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        value \u003d date;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        return value;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"zechajw"},"content":"    public int getAge() {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"        return Period.between(parse(value), LocalDate.now()).getYears();","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    public int getMonth() {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"        return parse(value).getMonthValue();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"    public LocalDate parse(String date) {","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"sheimoria":67,"zechajw":8}},{"path":"src/main/java/seedu/address/model/client/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":" * Represents a datetime in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"public class DateTime {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Datetime should be in DD-MM-YYYY HH:mm format.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"     * Datetime should be in dd-MM-yyyy HH:mm format.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"            \"^([012][1-9]|3[01])-([0][1-9]|1[012])-([0-9][0-9][0-9][0-9])\\\\s([0-1]?[0-9]|2?[0-3]):([0-5]\\\\d)$\";","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    public final String value;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    public DateTime() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"     * @param dateTime A valid datetime.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        value \u003d dateTime;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"     * Returns the datetime as a {@code LocalDateTime} object.","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"        if (value.equals(\"\")) {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"            return LocalDateTime.parse(\"01-01-0001 00:00\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        return LocalDateTime.parse(value, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"        return value;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 value.equals(((DateTime) other).value)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"    //    public boolean isBefore(DateTime other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"    //        if (parse(value).isBefore(parse(other.value))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"    //            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"    //        }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"    //        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"    //    }","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    //","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"    //    public boolean isAfter(DateTime other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"    //        if (parse(value).isAfter(parse(other.value))) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"    //            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"    //        }","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"    //        return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"    //    }","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"sheimoria":86,"myc37":1}},{"path":"src/main/java/seedu/address/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s email in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    public Email() {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":6,"-":69}},{"path":"src/main/java/seedu/address/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s name in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":2,"-":57}},{"path":"src/main/java/seedu/address/model/client/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":" * Tests that a {@code Client}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(client.getName().fullName, keyword));","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sheimoria":5,"-":26}},{"path":"src/main/java/seedu/address/model/client/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s note in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":" * Guarantees: immutable; has valid String value","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"zechajw"},"content":"public class Note {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"    public final String value;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     * Constructs a {@code Note}","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"     * @param note A note.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"    public Note(String note) {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"        this.value \u003d note;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        return this.value;","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"                || (other instanceof Note","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"                \u0026\u0026 value.equals(((Note) other).value));","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"sheimoria":2,"zechajw":38}},{"path":"src/main/java/seedu/address/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s phone number in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sheimoria":2,"-":51}},{"path":"src/main/java/seedu/address/model/client/PreferenceMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"import seedu.address.model.client.exceptions.InvalidPreferenceKeyException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"public class PreferenceMap {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"    // static values","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"    public final HashMap\u003cString, String\u003e preferences;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"     * Construct a {@code PreferenceMap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"    public PreferenceMap() {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"        this.preferences \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"    public PreferenceMap(HashMap\u003cString, String\u003e preferences) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"        this.preferences \u003d preferences;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"     * Adds the preference to the specified {@code Client}","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"     * @param key","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"     * @param value","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"zechajw"},"content":"    public void addPreference(String key, String value) {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"zechajw"},"content":"        requireNonNull(key, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"zechajw"},"content":"        preferences.put(key, value);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"zechajw"},"content":"     * Deletes the preference of the specified {@code key} from the Client","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"     * @param key - the key to be deleted from the client\u0027s preferences","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"zechajw"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"zechajw"},"content":"    public void deletePreference(String key) throws InvalidPreferenceKeyException {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"zechajw"},"content":"        requireNonNull(key);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"zechajw"},"content":"        if (!preferences.containsKey(key)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"zechajw"},"content":"            throw new InvalidPreferenceKeyException();","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"zechajw"},"content":"        preferences.remove(key);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"zechajw"},"content":"    public HashMap\u003cString, String\u003e getMap() {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"zechajw"},"content":"        return this.preferences;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"    public ObservableList\u003cMap.Entry\u003cString, String\u003e\u003e asObservableList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"        return FXCollections.observableArrayList(new ArrayList\u003c\u003e(preferences.entrySet()));","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"     * Add all the preferences in the previous PreferenceMap to this PreferenceMap","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"    public PreferenceMap addAllPreferences(PreferenceMap preferenceMap) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"        this.preferences.putAll(preferenceMap.preferences);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"zechajw"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"zechajw"},"content":"        if (preferences.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"zechajw"},"content":"            return \"The client has no preferences.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"zechajw"},"content":"        for (String str: preferences.keySet()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"zechajw"},"content":"            result +\u003d String.format(\"%s: %s\\n\", str, preferences.get(str));","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"zechajw"},"content":"        return result;","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"zechajw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"            || (other instanceof PreferenceMap","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"zechajw"},"content":"            \u0026\u0026 preferences.equals(((PreferenceMap) other).preferences));","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"zechajw"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"zechajw"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"zechajw"},"content":"        return preferences.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"zechajw"},"content":"    public int size() {","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"zechajw"},"content":"        return preferences.size();","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"sheimoria":2,"joelwongjy":8,"zechajw":88}},{"path":"src/main/java/seedu/address/model/client/SortCriteria.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"public enum SortCriteria {","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"    numPolicies(\"Number of Policies\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"    premium(\"Premium\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"    lastContacted(\"Last Contacted\"),","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"    DEFAULT(\"Default\");","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"    private String criteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"    SortCriteria(String criteria) {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"        this.criteria \u003d criteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    public static boolean isValidEnum(String attribute) {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"        return Arrays.stream(SortCriteria.values()).anyMatch(e -\u003e e.name().equals(attribute));","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    public String toString() {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"        return criteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"joelwongjy":25}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":" *","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":" *","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Adds a client to the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"     * The client must exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"                || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"                        \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"sheimoria"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"sheimoria"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"sheimoria"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"sheimoria"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"sheimoria"},"content":"                    return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"sheimoria"},"content":"                }","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"sheimoria"},"content":"        return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":138}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":6}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":" * identity).","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":11}},{"path":"src/main/java/seedu/address/model/client/exceptions/InvalidPreferenceKeyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":" * Signals that the operation is unable to find the specified preference key for the client.","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"public class InvalidPreferenceKeyException extends RuntimeException {}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"zechajw":6}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"* Represents a meeting with a Client in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"*/","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"public class Meeting {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER_LENIENT \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\");","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public static final String DATETIME_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"            \"Date times should consist of dates and times in the format of dd-MM-yyyy HH:mm\";","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    public static final String DATETIME_MESSAGE_BAD_RANGE \u003d \"Date times cannot be invalid dates (eg. 31/02/2022)\";","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public final LocalDateTime startDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    public final LocalDateTime endDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"    public final Client client;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    public final String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    * Constructs a {@code Meeting}.","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"     * @param startDateTime A date time object representing the start of the meeting.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     * @param endDateTime A date time object representing the end of the meeting.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"     * @param client A client object representing the client being met.","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"     * @param label A label labelling the meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    */","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    public Meeting(LocalDateTime startDateTime, LocalDateTime endDateTime, Client client, String label) {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(startDateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(endDateTime);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"     * Returns true if two meetings overlap.","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"    public boolean isOverlapping(Meeting otherMeeting) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        if (startDateTime.compareTo(otherMeeting.startDateTime) \u003c 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"            return otherMeeting.startDateTime.compareTo(endDateTime) \u003c 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        } else if (startDateTime.compareTo(otherMeeting.startDateTime) \u003e 0) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"            return startDateTime.compareTo(otherMeeting.endDateTime) \u003c 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"     * Returns true if the meeting is happening today or in the future.","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"    public boolean isUpcoming() {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime yesterday \u003d LocalDate.now().atStartOfDay().minusMinutes(1);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        return startDateTime.isAfter(yesterday);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"     * Returns true if a string is in the right format to convert into LocalDate.","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"    public static boolean isValidDate(String stringDate) {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"            LocalDate.parse(stringDate, Meeting.DATETIME_FORMATTER_LENIENT);","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"     * Returns true if a string is in a valid date range.","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"     * Eg. \"28-02-2022\" is valid but \"31-02-2022\" is invalid.","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"    public static boolean isValidDateRange(String stringDate) {","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"            LocalDate.parse(stringDate, Meeting.DATETIME_FORMATTER);","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-04-05"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"     * Returns true if a given start time is before a given end time.","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"    public static boolean isValidMeeting(LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"        return startDateTime.compareTo(endDateTime) \u003c 0;","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"     * Returns the name of the client.","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"        return client.getName();","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"     * Returns the start datetime of the meeting.","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"        return startDateTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"     * Returns the end datetime of the meeting.","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"        return endDateTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"     * Returns the client being met for the meeting.","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"    public Client getClient() {","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"        return client;","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"     * Returns the label of the meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"    public String getLabel() {","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"        return label;","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"     * Updates the client and returns a new meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"    public Meeting updateClient(Client editedClient) {","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"        return new Meeting(startDateTime, endDateTime, editedClient, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"        if (label.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"            return String.format(\"Meeting with %s from %s to %s\",","lastModifiedDate":"2022-03-07"},{"lineNumber":150,"author":{"gitId":"sheimoria"},"content":"                    client.getName().toString(),","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"                    startDateTime.format(DATETIME_FORMATTER),","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"                    endDateTime.format(DATETIME_FORMATTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"            return String.format(\"%s with %s from %s to %s\",","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"                    label,","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"                    client.getName().toString(),","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"                    startDateTime.format(DATETIME_FORMATTER),","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"                    endDateTime.format(DATETIME_FORMATTER));","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"raynerljm"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"raynerljm"},"content":"        return otherMeeting.startDateTime.equals(startDateTime) \u0026\u0026 otherMeeting.endDateTime.equals(endDateTime)","lastModifiedDate":"2022-03-07"},{"lineNumber":174,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 otherMeeting.client.equals(client) \u0026\u0026 otherMeeting.label.equals(label);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"raynerljm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"        return Objects.hash(startDateTime, endDateTime, client, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sheimoria":9,"raynerljm":172}},{"path":"src/main/java/seedu/address/model/meeting/NonOverlappingMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.exceptions.OverlappingMeetingsException;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":" *","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":" *","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":" * @see Meeting#isOverlapping(Meeting)","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"public class NonOverlappingMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"     * Returns true if the list contains any overlapping meetings.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    public boolean overlaps(Meeting toCheck) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"        return internalList.stream().anyMatch(toCheck::isOverlapping);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * Returns true if the list contains any overlapping meetings except for the specified meeting.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    public boolean overlapsExcept(Meeting toCheck, Meeting exceptedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(toCheck, exceptedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        return internalList.stream().filter(x -\u003e !x.equals(exceptedMeeting)).anyMatch(toCheck::isOverlapping);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"     * The meeting must not be overlapping with other meetings in the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        if (overlaps(toAdd)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"            throw new OverlappingMeetingsException();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"     * Sorts the meetings in ascending order based on starting meeting time.","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"    public void sortAscending() {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"        List\u003cMeeting\u003e sortedMeetings \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"        Comparator\u003cMeeting\u003e comparatorDateTime \u003d Comparator","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"                .comparing((Meeting meeting) -\u003e meeting.getStartDateTime().toLocalDate());","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"        sortedMeetings.sort(comparatorDateTime);","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"        setMeetings(sortedMeetings);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"     * Sorts the meetings in descending order based on starting meeting time.","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"    public void sortDescending() {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"        List\u003cMeeting\u003e sortedMeetings \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"        Comparator\u003cMeeting\u003e comparatorDate \u003d Comparator","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"                .comparing((Meeting meeting) -\u003e meeting.getStartDateTime().toLocalDate())","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"                .reversed();","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"raynerljm"},"content":"        Comparator\u003cMeeting\u003e comparatorTime \u003d Comparator","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"raynerljm"},"content":"                .comparing((Meeting meeting) -\u003e meeting.getStartDateTime().toLocalTime());","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"raynerljm"},"content":"        Comparator\u003cMeeting\u003e comparatorDateThenTime \u003d comparatorDate","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"raynerljm"},"content":"                .thenComparing(comparatorTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"raynerljm"},"content":"        sortedMeetings.sort(comparatorDateThenTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"raynerljm"},"content":"        setMeetings(sortedMeetings);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"raynerljm"},"content":"     * Update meetings with the specified client to a new client.","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"raynerljm"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"raynerljm"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"raynerljm"},"content":"            Meeting meeting \u003d internalList.get(i);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"raynerljm"},"content":"            if (meeting.getClient().isSameClient(target)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"raynerljm"},"content":"                Meeting newMeeting \u003d meeting.updateClient(editedClient);","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"raynerljm"},"content":"                internalList.set(i, newMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"raynerljm"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"raynerljm"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"raynerljm"},"content":"     * The meeting timing of {@code editedMeeting} must not be overlapping with","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"raynerljm"},"content":"     * another existing meeting in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"raynerljm"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"raynerljm"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"raynerljm"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"raynerljm"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"raynerljm"},"content":"        if (!target.isOverlapping(editedMeeting) \u0026\u0026 overlaps(editedMeeting)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"raynerljm"},"content":"            throw new OverlappingMeetingsException();","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"raynerljm"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"raynerljm"},"content":"     * Replaces the contents of this list with a replacement.","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"raynerljm"},"content":"     * {@code replacement} must not contain overlapping meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"raynerljm"},"content":"    public void setMeetings(NonOverlappingMeetingList replacement) {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"raynerljm"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"raynerljm"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"raynerljm"},"content":"     * {@code meetings} must not contain overlapping meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"raynerljm"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"raynerljm"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"raynerljm"},"content":"        if (!meetingsAreNonOverlapping(meetings)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"raynerljm"},"content":"            throw new OverlappingMeetingsException();","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"raynerljm"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"raynerljm"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"raynerljm"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"raynerljm"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"raynerljm"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"raynerljm"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"raynerljm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"                || (other instanceof NonOverlappingMeetingList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"raynerljm"},"content":"                        \u0026\u0026 internalList.equals(((NonOverlappingMeetingList) other).internalList));","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"raynerljm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"raynerljm"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"raynerljm"},"content":"     * Returns true if {@code meetings} contains non-overlapping meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"raynerljm"},"content":"    private boolean meetingsAreNonOverlapping(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"raynerljm"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"raynerljm"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"raynerljm"},"content":"                if (meetings.get(i).isOverlapping(meetings.get(j))) {","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"raynerljm"},"content":"                    return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"raynerljm"},"content":"                }","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"raynerljm"},"content":"        return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sheimoria":5,"raynerljm":196}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"raynerljm":6}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/OverlappingMeetingsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":" * Signals that the operation will result in overlapping Meetings (Meetings are considered overlapping if the start","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":" * time of the later meeting is before the end time of the earlier meeting).","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"public class OverlappingMeetingsException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"    public OverlappingMeetingsException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"        super(\"Operation would result in overlapping meetings\");","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"raynerljm":11}},{"path":"src/main/java/seedu/address/model/policy/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":" * Represents a Policy in the address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"public class Policy {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"    // Identity fields","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"    private final Name name;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"    private final Name company;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"    private final Name policyManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"    private final Premium premium;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    public Policy(Name name, Name company, Name policyManager, Premium premium) {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"        this.policyManager \u003d policyManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"        this.premium \u003d premium;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"        return name;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    public Name getCompany() {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"        return company;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"    public Name getPolicyManager() {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        return policyManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"    public Premium getPremium() {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        return premium;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"     * Returns true if both policies have the same name.","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"     * This defines a weaker notion of equality between two policies.","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"    public boolean isSamePolicy(Policy otherPolicy) {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        if (otherPolicy \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        return otherPolicy !\u003d null","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 otherPolicy.getName().equals(getName());","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"     * Returns true if both Policies have the same identity fields.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        if (!(other instanceof Policy)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"        Policy otherPolicy \u003d (Policy) other;","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"        return otherPolicy.getName().equals(getName())","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 otherPolicy.getCompany().equals(getCompany())","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 otherPolicy.getPolicyManager().equals(getPolicyManager())","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 otherPolicy.getPremium().equals(getPremium());","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"myc37"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"myc37"},"content":"        return Objects.hash(name, company, policyManager, premium);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"        return getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"myc37"},"content":"    public String toNumberedDisplay(int index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"        return String.format(\"%s. %s\", index, this);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"     * Returns a formatted string displaying the full details of this policy.","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"myc37"},"content":"    public String fullDetails() {","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"myc37"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"        builder.append(\"{\")","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"                .append(getName())","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"myc37"},"content":"                .append(getCompany())","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"myc37"},"content":"                .append(\"; Policy Manager: \")","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"myc37"},"content":"                .append(getPolicyManager())","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"myc37"},"content":"                .append(\"; Premium Amount: $\")","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"myc37"},"content":"                .append(getPremium())","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"myc37"},"content":"                .append(\"}\");","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"myc37"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sheimoria":1,"myc37":110}},{"path":"src/main/java/seedu/address/model/policy/Premium.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":" * Represents a Client\u0027s premium amount in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPremium(String)}","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"public class Premium {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"            \"Premium amount should only contain numbers\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"    public final String value;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"     * Constructs a {@code Premium}.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"     *","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"     * @param premium A valid premium amount.","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    public Premium(String premium) {","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"        requireNonNull(premium);","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"        checkArgument(isValidPremium(premium), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"        value \u003d premium;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"     * Returns true if a given string is a valid Premium amount.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"    public static boolean isValidPremium(String test) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"    /** Returns the premium amount */","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    public int getValue() {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"    public String toString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        return value;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"                || (other instanceof Premium // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"                \u0026\u0026 value.equals(((Premium) other).value)); // state check","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sheimoria":1,"myc37":56}},{"path":"src/main/java/seedu/address/model/policy/UniquePolicyList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.DuplicatePolicyException;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.EmptyPolicyListException;","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.InvalidPolicyIndexException;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.exceptions.PolicyNotEditedException;","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":" * A list of policies that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":" * A policy is considered unique by comparing using {@code Policy#isSamePolicy(Policy)}. As such, adding and","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":" * updating of policies uses Policy#isSamePolicy(Policy) for equality to ensure that the policy being added or","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":" * updated is unique in terms of identity in the UniquePolicyList. However, the removal of a policy uses","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":" * Policy#equals(Object) to ensure that the policy with exactly the same fields will be removed.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":" *","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":" *","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":" * @see Policy#isSamePolicy(Policy)","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"public class UniquePolicyList implements Iterable\u003cPolicy\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"    private final ObservableList\u003cPolicy\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"    private final ObservableList\u003cPolicy\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"     * Returns true if the list contains an equivalent policy as the given argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"    public boolean contains(Policy toCheck) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePolicy);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"     * Adds a policy to the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"     * The policy must not already exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"    public void add(Policy toAdd) throws DuplicatePolicyException {","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"            throw new DuplicatePolicyException();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"     * Replaces the policy {@code target} in the list with {@code editedPolicy}.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"     * The policy identity of {@code editedPolicy} must not be the same as another existing policy in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"    public void setPolicy(Policy target, Policy editedPolicy) throws InvalidPolicyIndexException,","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"            PolicyNotEditedException,","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"            DuplicatePolicyException {","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"        requireAllNonNull(target, editedPolicy);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"            throw new InvalidPolicyIndexException();","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"myc37"},"content":"        if (target.equals(editedPolicy)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"myc37"},"content":"            throw new PolicyNotEditedException();","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"myc37"},"content":"        if (!setDoesNotCreateDuplicate(target, editedPolicy)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"            throw new DuplicatePolicyException();","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"myc37"},"content":"        internalList.set(index, editedPolicy);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"myc37"},"content":"    private boolean setDoesNotCreateDuplicate(Policy target, Policy editedPolicy) {","lastModifiedDate":"2022-04-05"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"        for (Policy p : internalUnmodifiableList) {","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"            if (!p.equals(target) \u0026\u0026 p.isSamePolicy(editedPolicy)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"                return false;","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":87,"author":{"gitId":"myc37"},"content":"        return true;","lastModifiedDate":"2022-04-05"},{"lineNumber":88,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":89,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"myc37"},"content":"     * Removes the equivalent policy from the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"myc37"},"content":"     * The policy must exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"    public void remove(Policy toRemove) throws EmptyPolicyListException, InvalidPolicyIndexException {","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"myc37"},"content":"        if (internalList.isEmpty()) {","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"myc37"},"content":"            throw new EmptyPolicyListException();","lastModifiedDate":"2022-04-05"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"            throw new InvalidPolicyIndexException();","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"myc37"},"content":"    public void setPolicies(UniquePolicyList replacement) {","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"myc37"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"myc37"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"myc37"},"content":"     * Replaces the contents of this list with {@code policies}.","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"     * {@code policies} must not contain duplicate policies.","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"myc37"},"content":"    public void setPolicies(List\u003cPolicy\u003e policies) {","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"myc37"},"content":"        requireAllNonNull(policies);","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"myc37"},"content":"        if (!policiesAreUnique(policies)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"            throw new DuplicatePolicyException();","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"myc37"},"content":"        internalList.setAll(policies);","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"myc37"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"myc37"},"content":"    public ObservableList\u003cPolicy\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"myc37"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"myc37"},"content":"    public Iterator\u003cPolicy\u003e iterator() {","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"myc37"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"myc37"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"myc37"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"myc37"},"content":"                || (other instanceof UniquePolicyList // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"myc37"},"content":"                        \u0026\u0026 internalList.equals(((UniquePolicyList) other).internalList));","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"myc37"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"myc37"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"myc37"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"myc37"},"content":"     * Returns true if {@code policies} contains only unique policies.","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"myc37"},"content":"    private boolean policiesAreUnique(List\u003cPolicy\u003e policies) {","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"myc37"},"content":"        for (int i \u003d 0; i \u003c policies.size() - 1; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"myc37"},"content":"            for (int j \u003d i + 1; j \u003c policies.size(); j++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"myc37"},"content":"                if (policies.get(i).isSamePolicy(policies.get(j))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"myc37"},"content":"                    return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"myc37"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"myc37"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"myc37"},"content":"     * Returns the sum total of premium amounts of all policies in the unique policy list.","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"myc37"},"content":"    public int totalPremiumSum() {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"myc37"},"content":"        int res \u003d 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"myc37"},"content":"        for (Policy p : internalUnmodifiableList) {","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"myc37"},"content":"            res +\u003d p.getPremium().getValue();","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"myc37"},"content":"        return res;","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"myc37"},"content":"     * Returns true if the {@code UniquePolicyList} contains an {@code Policy} from the given {@code company}","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"myc37"},"content":"    public boolean hasPolicyFromCompany(Name company) {","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"myc37"},"content":"        for (Policy p : internalUnmodifiableList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"myc37"},"content":"            if (p.getCompany().equals(company)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"myc37"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"myc37"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"myc37"},"content":"        return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"myc37":182}},{"path":"src/main/java/seedu/address/model/policy/exceptions/DuplicatePolicyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy.exceptions;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":" * Signals that the operation will result in duplicate Policies (Policies are considered duplicates if they have the","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":" * same identity).","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"public class DuplicatePolicyException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"    public DuplicatePolicyException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"        super(\"Operation would result in duplicate policies\");","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"myc37":11}},{"path":"src/main/java/seedu/address/model/policy/exceptions/EmptyPolicyListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":" * Signals that the operation is not possible because the given policy index is not a valid one.","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"public class EmptyPolicyListException extends RuntimeException {","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"    public EmptyPolicyListException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"        super(\"This client has no policies\");","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"myc37":10}},{"path":"src/main/java/seedu/address/model/policy/exceptions/InvalidPolicyIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy.exceptions;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":" * Signals that the operation is not possible because the given policy index is not a valid one.","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"public class InvalidPolicyIndexException extends RuntimeException {","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"    public InvalidPolicyIndexException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"        super(\"There is no policy at this index\");","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"myc37":10}},{"path":"src/main/java/seedu/address/model/policy/exceptions/PolicyNotEditedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.model.policy.exceptions;","lastModifiedDate":"2022-04-05"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":" * Signals that the operation will result in duplicate Policies (Policies are considered duplicates if they have the","lastModifiedDate":"2022-04-05"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":" * same identity).","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"public class PolicyNotEditedException extends RuntimeException {","lastModifiedDate":"2022-04-05"},{"lineNumber":8,"author":{"gitId":"myc37"},"content":"    public PolicyNotEditedException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"        super(\"The edited policy is the same as the original policy\");","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"myc37":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.UniquePolicyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"        return new Client[] {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Date(\"21-03-1999\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Date(\"21-03-2001\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Date(\"21-03-2001\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Date(\"21-03-1999\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Date(\"21-03-1999\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\")),","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"            new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Date(\"21-03-1999\"),","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"                    new DateTime(\"21-03-1999 21:03\"))","lastModifiedDate":"2022-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"    public static UniquePolicyList getPolicyList(Policy... policies) {","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        UniquePolicyList policyList \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        policyList.setPolicies(List.of(policies));","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"        return policyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"sheimoria":23,"myc37":14,"-":21}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.PreferenceMap;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.UniquePolicyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":" * Jackson-friendly version of {@link Client}.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"class JsonAdaptedClient {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Client\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"    private final String birthday;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"    private final String lastContacted;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"    private final List\u003cJsonAdaptedPolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    private final String note;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"    private final JsonAdaptedPreferenceMap preferenceMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"                             @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"                             @JsonProperty(\"lastContacted\") String lastContacted,","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"                             @JsonProperty(\"policies\") List\u003cJsonAdaptedPolicy\u003e policies,","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"                             @JsonProperty(\"note\") String note,","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"zechajw"},"content":"                             @JsonProperty(\"preferenceMap\") JsonAdaptedPreferenceMap preferenceMap) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        this.lastContacted \u003d lastContacted;","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"        if (policies !\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"            this.policies.addAll(policies);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"zechajw"},"content":"        if (note !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"zechajw"},"content":"            this.note \u003d note;","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"zechajw"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"zechajw"},"content":"            this.note \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"zechajw"},"content":"        if (preferenceMap !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"zechajw"},"content":"            this.preferenceMap \u003d preferenceMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"zechajw"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"zechajw"},"content":"            this.preferenceMap \u003d new JsonAdaptedPreferenceMap(new PreferenceMap());","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"        birthday \u003d source.getBirthday().value;","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        lastContacted \u003d source.getLastContacted().value;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"        policies.addAll(source.getPolicies().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"myc37"},"content":"                .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"zechajw"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"zechajw"},"content":"        preferenceMap \u003d new JsonAdaptedPreferenceMap(source.getPreferenceMap());","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"        final List\u003cPolicy\u003e clientPolicies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"myc37"},"content":"        for (JsonAdaptedPolicy policy: policies) {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"            clientPolicies.add(policy.toModelType());","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"        Email modelEmail;","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"        if (email.equals(\"\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"            modelEmail \u003d new Email();","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"sheimoria"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"sheimoria"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"sheimoria"},"content":"        final Address modelAddress;","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"sheimoria"},"content":"        if (address.equals(\"\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"sheimoria"},"content":"            modelAddress \u003d new Address();","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"sheimoria"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"sheimoria"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"sheimoria"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"sheimoria"},"content":"        final Date modelBirthday;","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"sheimoria"},"content":"        if (birthday \u003d\u003d \"\") {","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"sheimoria"},"content":"            modelBirthday \u003d new Date();","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"sheimoria"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"sheimoria"},"content":"            if (!Date.isValidDate(birthday)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"sheimoria"},"content":"                throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"sheimoria"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"sheimoria"},"content":"            modelBirthday \u003d new Date(birthday);","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"sheimoria"},"content":"        if (lastContacted \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"sheimoria"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"sheimoria"},"content":"                    DateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"sheimoria"},"content":"        final DateTime modelLastContacted;","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"sheimoria"},"content":"        if (lastContacted \u003d\u003d \"\") {","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"sheimoria"},"content":"            modelLastContacted \u003d new DateTime();","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"sheimoria"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"sheimoria"},"content":"            if (!DateTime.isValidDateTime(lastContacted)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"sheimoria"},"content":"                throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"sheimoria"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"sheimoria"},"content":"            modelLastContacted \u003d new DateTime(lastContacted);","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"zechajw"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"zechajw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"zechajw"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"zechajw"},"content":"        if (preferenceMap \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"zechajw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"zechajw"},"content":"                    PreferenceMap.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"zechajw"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"zechajw"},"content":"        final PreferenceMap modelPreferenceMap \u003d preferenceMap.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"myc37"},"content":"        final UniquePolicyList modelPolicies \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"myc37"},"content":"        modelPolicies.setPolicies(clientPolicies);","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"myc37"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelBirthday, modelLastContacted,","lastModifiedDate":"2022-04-05"},{"lineNumber":195,"author":{"gitId":"sheimoria"},"content":"                modelPolicies, modelNote, modelPreferenceMap);","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheimoria":80,"myc37":14,"zechajw":29,"-":74}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    private final String startDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    private final String endDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    private final JsonAdaptedClient client;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    private final String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    JsonAdaptedMeeting(@JsonProperty(\"startDateTime\") String startDateTime,","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"                       @JsonProperty(\"endDateTime\") String endDateTime,","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"                       @JsonProperty(\"client\") JsonAdaptedClient client,","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"                       @JsonProperty(\"label\") String label) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     * Converts a given {@code Policy} into this class for Jackson use.","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    public JsonAdaptedMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        startDateTime \u003d meeting.getStartDateTime().toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"        endDateTime \u003d meeting.getEndDateTime().toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"        client \u003d new JsonAdaptedClient(meeting.getClient());","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        label \u003d meeting.getLabel();","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"     * Converts this Jackson-friendly adapted Meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime modelStartDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"            modelStartDateTime \u003d LocalDateTime.parse(startDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"            throw new IllegalValueException(Meeting.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        LocalDateTime modelEndDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"            modelEndDateTime \u003d LocalDateTime.parse(endDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"            throw new IllegalValueException(Meeting.DATETIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        if (client \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"                    Client.class.getSimpleName()));","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"        final Client modelClient \u003d client.toModelType();","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"        return new Meeting(modelStartDateTime, modelEndDateTime, modelClient, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"raynerljm":86}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"myc37"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"myc37"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"myc37"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"myc37"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":" * Jackson-friendly version of {@link Policy}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"myc37"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"myc37"},"content":"class JsonAdaptedPolicy {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"myc37"},"content":"    private final String policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"    private final String company;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"    private final String policyManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"    private final String premium;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"     * Constructs a {@code JsonAdaptedPolicy} with the given {@code policyName}, {@code company},","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"myc37"},"content":"     * {@code policyManager} and {@code premium}.","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"myc37"},"content":"    JsonAdaptedPolicy(@JsonProperty(\"policy\") String policy, @JsonProperty(\"company\") String company,","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"                      @JsonProperty(\"policyManager\") String policyManager, @JsonProperty(\"premium\") String premium) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"        this.policyManager \u003d policyManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"myc37"},"content":"        this.premium \u003d premium;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"     * Converts a given {@code Policy} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"    public JsonAdaptedPolicy(Policy source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"        policy \u003d source.getName().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"        company \u003d source.getCompany().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"        policyManager \u003d source.getPolicyManager().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        premium \u003d source.getPremium().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"     * Converts this Jackson-friendly adapted Policy object into the model\u0027s {@code Policy} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"myc37"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"    public Policy toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"myc37"},"content":"        if (!Name.isValidName(policy)","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"myc37"},"content":"                || !Name.isValidName(company)","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"                || !Name.isValidName(policyManager)","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"                || !Premium.isValidPremium(premium)","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        ) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"            throw new IllegalValueException(\"Incorrect format - Could not save policy\");","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"        return new Policy(new Name(policy), new Name(company), new Name(policyManager), new Premium(premium));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"sheimoria":2,"myc37":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPreferenceMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zechajw"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"zechajw"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"zechajw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"zechajw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.PreferenceMap;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"zechajw"},"content":"public class JsonAdaptedPreferenceMap {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"zechajw"},"content":"    private final HashMap\u003cString, String\u003e preferenceMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"zechajw"},"content":"     * Constructs a {@code JsonAdaptedPreferenceMap} with the given {@code HashMap}","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"zechajw"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"zechajw"},"content":"    JsonAdaptedPreferenceMap(@JsonProperty(\"preferenceMap\") HashMap\u003cString, String\u003e preferenceMap) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"zechajw"},"content":"        this.preferenceMap \u003d preferenceMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"zechajw"},"content":"    public JsonAdaptedPreferenceMap(PreferenceMap source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"zechajw"},"content":"        preferenceMap \u003d source.getMap();","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"zechajw"},"content":"    public PreferenceMap toModelType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"zechajw"},"content":"        return new PreferenceMap().addAllPreferences(new PreferenceMap(preferenceMap));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"zechajw"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sheimoria":2,"zechajw":29}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_OVERLAPPING_MEETINGS \u003d \"Meeting list contains overlapping meetings.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public static final String MESSAGE_INVALID_MEETING_DATETIME \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"            \"Meeting list contains meeting with invalid datetime.\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given clients and meetings.","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"                                       @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting: meetings) {","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"            if (addressBook.isOverlapping(meeting)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"                throw new IllegalValueException(MESSAGE_OVERLAPPING_MEETINGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"            if (!Meeting.isValidMeeting(meeting.getStartDateTime(), meeting.getEndDateTime())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_MEETING_DATETIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheimoria":10,"raynerljm":23,"-":48}},{"path":"src/main/java/seedu/address/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"myc37"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"public class ClientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    public final Client client;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    private Label lastContacted;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"    private FlowPane policies;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Creates a {@code ClientCode} with the given {@code Client} and index to display.","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"        assert client !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        if (client.getLastContacted() !\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"            lastContacted.setText(\"Last contacted: \" + client.getLastContacted().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"            lastContacted.setText(\"Last contacted: -\");","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        AtomicInteger counter \u003d new AtomicInteger(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"        client.getPolicies().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"                .forEach(policy -\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"                    policies.getChildren().add(new Label(policy.toNumberedDisplay(counter.get())));","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"                    counter.getAndIncrement();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"                });","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"        if (!(other instanceof ClientCard)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        ClientCard card \u003d (ClientCard) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"                \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sheimoria":19,"joelwongjy":1,"myc37":8,"-":51}},{"path":"src/main/java/seedu/address/ui/ClientDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":" * An UI component that displays information of select {@code Client} in the right panel","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"public class ClientDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"    private static final String FXML \u003d \"ClientDisplayPanel.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    private static final int PREFERENCE_CELL_HEIGHT \u003d 48;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"    private static final int POLICY_CELL_HEIGHT \u003d 114;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"    private final Client client;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"    private Label name;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"    private Label phone;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"    private Label address;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"    private Label birthday;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    private Label lastContacted;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"    private Label email;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"    private Label preferencesHeader;","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"    private ListView\u003cMap.Entry\u003cString, String\u003e\u003e preferences;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"    private StackPane preferencesContainer;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"    private ListView\u003cPolicy\u003e policyListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"    private Label note;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"    private VBox clientDisplayCard;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"joelwongjy"},"content":"     * Creates a {@code ClientDisplay} with the given {@code Client} to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"    public ClientDisplay(Client client) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"        name.setText(client.getName().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"        phone.setText(client.getPhone().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"        email.setText(client.getEmail().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"        address.setText(client.getAddress().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"        if (client.getBirthday() !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"            birthday.setText(client.getBirthday().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"joelwongjy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"            birthday.setText(\"-\");","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"        if (client.getLastContacted() !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"            lastContacted.setText(\"Last contacted: \" + client.getLastContacted().toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"            lastContacted.setText(\"Last contacted: -\");","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"joelwongjy"},"content":"        ObservableList\u003cMap.Entry\u003cString, String\u003e\u003e preferenceList \u003d client.getPreferenceMap().asObservableList();","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"joelwongjy"},"content":"        preferences.setItems(preferenceList);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"joelwongjy"},"content":"        preferences.setCellFactory(listView -\u003e new PreferenceListViewCell());","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"joelwongjy"},"content":"        preferences.setMinHeight(preferenceList.size() * PREFERENCE_CELL_HEIGHT);","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"joelwongjy"},"content":"        int labelIndex \u003d clientDisplayCard.getChildren().indexOf(preferencesHeader);","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"        clientDisplayCard.getChildren().add(labelIndex + 1, preferences);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"joelwongjy"},"content":"        ObservableList\u003cPolicy\u003e policyList \u003d client.getPolicies().asUnmodifiableObservableList();","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"joelwongjy"},"content":"        policyListView.setItems(policyList);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"joelwongjy"},"content":"        policyListView.setCellFactory(listView -\u003e new PolicyListViewCell());","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"joelwongjy"},"content":"        policyListView.setMinHeight(policyList.size() * POLICY_CELL_HEIGHT);","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"joelwongjy"},"content":"        clientDisplayCard.getChildren().add(policyListView);","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"joelwongjy"},"content":"        note.setText(client.getNote().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"joelwongjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Policy} using a {@code PolicyCard}.","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"joelwongjy"},"content":"    class PreferenceListViewCell extends ListCell\u003cMap.Entry\u003cString, String\u003e\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"joelwongjy"},"content":"        protected void updateItem(Map.Entry\u003cString, String\u003e preference, boolean empty) {","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"joelwongjy"},"content":"            super.updateItem(preference, empty);","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"joelwongjy"},"content":"            if (empty || preference \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"joelwongjy"},"content":"                setText(null);","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"joelwongjy"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(new PreferenceRow(preference).getRoot());","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"joelwongjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Policy} using a {@code PolicyCard}.","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"joelwongjy"},"content":"    class PolicyListViewCell extends ListCell\u003cPolicy\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"joelwongjy"},"content":"        protected void updateItem(Policy policy, boolean empty) {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"joelwongjy"},"content":"            super.updateItem(policy, empty);","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"joelwongjy"},"content":"            if (empty || policy \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"joelwongjy"},"content":"                setText(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"joelwongjy"},"content":"            } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(new PolicyCard(policy, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":122}},{"path":"src/main/java/seedu/address/ui/ClientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.SortCriteria;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"public class ClientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"    private static final String FXML \u003d \"ClientListPanel.fxml\";","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClientListPanel.class);","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    private final ObservableList\u003cClient\u003e clientList;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"    private Label clientCount;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    private Label sortMethod;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    private ListView\u003cClient\u003e clientListView;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"    public ClientListPanel(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        super(FXML);","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"        this.clientList \u003d clientList;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        clientCount.setText(String.format(\"%d Clients\", clientList.size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"        sortMethod.setText(\"Sorted by: Default\");","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        clientListView.setItems(clientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        clientListView.setCellFactory(listView -\u003e new ClientListViewCell());","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"    public void setClientCount() {","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"        clientCount.setText(String.format(\"%d Clients\", clientList.size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"    public void setSortCriteria(SortCriteria criteria) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"        sortMethod.setText(String.format(\"Sorted by: %s\", criteria));","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Client} using a {@code ClientCard}.","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"    class ClientListViewCell extends ListCell\u003cClient\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        protected void updateItem(Client client, boolean empty) {","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"            super.updateItem(client, empty);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"            if (empty || client \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"                setText(null);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"            } else {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"                setGraphic(new ClientCard(client, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":49,"joelwongjy":19}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"myc37"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"myc37":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    private ClientListPanel clientListPanel;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"    private TutorialWindow tutorialWindow;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"    private ClientDisplay clientDisplay;","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"        tutorialWindow \u003d new TutorialWindow();","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"joelwongjy"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getClientList());","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList(), logic.isShowAllMeetings());","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"joelwongjy"},"content":"        if (logic.getClientList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"joelwongjy"},"content":"            resultDisplay.setFeedbackToUser(\"Add client by using the add command!\");","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"joelwongjy"},"content":"            tutorialWindow.show();","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"joelwongjy"},"content":"     * Opens the tutorial window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"joelwongjy"},"content":"    public void handleTutorial() {","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"joelwongjy"},"content":"        if (!tutorialWindow.isShowing()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"joelwongjy"},"content":"            tutorialWindow.show();","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"joelwongjy"},"content":"        } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"joelwongjy"},"content":"            tutorialWindow.focus();","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"raynerljm"},"content":"     * List meetings.","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"raynerljm"},"content":"    private void showMeetings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList(), logic.isShowAllMeetings());","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"raynerljm"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"raynerljm"},"content":"        if (logic.getFilteredMeetingList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"raynerljm"},"content":"            if (logic.getAddressBook().getMeetingList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-04-05"},{"lineNumber":204,"author":{"gitId":"raynerljm"},"content":"                resultDisplay.setFeedbackToUser(\"No meetings found.\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":205,"author":{"gitId":"raynerljm"},"content":"                        + \"Add meetings by using the `addMeeting` command!\");","lastModifiedDate":"2022-04-05"},{"lineNumber":206,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-04-05"},{"lineNumber":207,"author":{"gitId":"raynerljm"},"content":"                resultDisplay.setFeedbackToUser(\"No upcoming meetings found.\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":208,"author":{"gitId":"raynerljm"},"content":"                        + \"View all meetings (including past meetings) by using the `meetings all/` command!\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":209,"author":{"gitId":"raynerljm"},"content":"                        + \"Add meetings by using the `addMeeting` command!\\n\");","lastModifiedDate":"2022-04-05"},{"lineNumber":210,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-04-05"},{"lineNumber":211,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"joelwongjy"},"content":"     * List clients.","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"sheimoria"},"content":"    private void showClients() {","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"sheimoria"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":219,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"joelwongjy"},"content":"        if (logic.getClientList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"raynerljm"},"content":"            resultDisplay.setFeedbackToUser(\"Add client by using the add command!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"joelwongjy"},"content":"     * Display client.","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"joelwongjy"},"content":"    private void showClientByIndex(Index index) {","lastModifiedDate":"2022-04-01"},{"lineNumber":229,"author":{"gitId":"joelwongjy"},"content":"        clientDisplay \u003d new ClientDisplay(logic.getClientList().get(index.getZeroBased()));","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanelPlaceholder.getChildren().add(clientDisplay.getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":235,"author":{"gitId":"joelwongjy"},"content":"     * Display client.","lastModifiedDate":"2022-04-01"},{"lineNumber":236,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":237,"author":{"gitId":"joelwongjy"},"content":"    private void showClient(Client client) {","lastModifiedDate":"2022-04-01"},{"lineNumber":238,"author":{"gitId":"joelwongjy"},"content":"        clientDisplay \u003d new ClientDisplay(client);","lastModifiedDate":"2022-04-01"},{"lineNumber":239,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-04-01"},{"lineNumber":240,"author":{"gitId":"joelwongjy"},"content":"        meetingListPanelPlaceholder.getChildren().add(clientDisplay.getRoot());","lastModifiedDate":"2022-04-01"},{"lineNumber":241,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":242,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":243,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"joelwongjy"},"content":"     * Display sorted clients.","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"joelwongjy"},"content":"    private void updateClients() {","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"joelwongjy"},"content":"        clientListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"joelwongjy"},"content":"        clientListPanel \u003d new ClientListPanel(logic.getClientList());","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"joelwongjy"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"joelwongjy"},"content":"            clientListPanel.setClientCount();","lastModifiedDate":"2022-03-31"},{"lineNumber":264,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"joelwongjy"},"content":"            if (commandResult.isShowTutorial()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":270,"author":{"gitId":"joelwongjy"},"content":"                handleTutorial();","lastModifiedDate":"2022-03-08"},{"lineNumber":271,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":272,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"raynerljm"},"content":"            if (commandResult.isShowMeetings()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":278,"author":{"gitId":"raynerljm"},"content":"                showMeetings();","lastModifiedDate":"2022-03-12"},{"lineNumber":279,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":280,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":281,"author":{"gitId":"sheimoria"},"content":"            if (commandResult.isShowClients()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":282,"author":{"gitId":"sheimoria"},"content":"                showClients();","lastModifiedDate":"2022-03-17"},{"lineNumber":283,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":284,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":285,"author":{"gitId":"myc37"},"content":"            if (commandResult.isSortClients()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"joelwongjy"},"content":"                updateClients();","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"joelwongjy"},"content":"                clientListPanel.setSortCriteria(commandResult.getSortCriteria());","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"joelwongjy"},"content":"            if (commandResult.isShowClient()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"joelwongjy"},"content":"                showClientByIndex(commandResult.getIndexToShow());","lastModifiedDate":"2022-04-01"},{"lineNumber":292,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"joelwongjy"},"content":"            if (commandResult.isUpdateClient()","lastModifiedDate":"2022-04-01"},{"lineNumber":295,"author":{"gitId":"joelwongjy"},"content":"                    \u0026\u0026 logic.getDisplayedClient().equals(commandResult.getClientToUpdate())) {","lastModifiedDate":"2022-04-01"},{"lineNumber":296,"author":{"gitId":"joelwongjy"},"content":"                showClient(commandResult.getClientToUpdate());","lastModifiedDate":"2022-04-01"},{"lineNumber":297,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":298,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joelwongjy":71,"sheimoria":7,"myc37":2,"raynerljm":34,"-":192}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":" * An UI component that displays information of a {@code Client}.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    public final Meeting meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"    private Label name;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    private Label id;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"    private Label startDateTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"    private Label endDateTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"        super(FXML);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"        if (!meeting.isUpcoming()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"            name.setStyle(\"-fx-text-fill: #ADABBC;\");","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"            id.setStyle(\"-fx-text-fill: #ADABBC;\");","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"            startDateTime.setStyle(\"-fx-text-fill: #ADABBC;\");","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"            endDateTime.setStyle(\"-fx-text-fill: #ADABBC;\");","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        String nameLabel;","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"        if (meeting.getLabel().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"            nameLabel \u003d meeting.getName().fullName;","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        } else {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            nameLabel \u003d meeting.getName().fullName + \" (\" + meeting.getLabel() + \")\";","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"        name.setText(nameLabel);","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        startDateTime.setText(\"Start: \" + meeting.getStartDateTime().format(Meeting.DATETIME_FORMATTER));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        endDateTime.setText(\"End: \" + meeting.getEndDateTime().format(Meeting.DATETIME_FORMATTER));","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"joelwongjy":10,"sheimoria":1,"raynerljm":68}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":" * Panel containing the list of clients.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"    private Label meetingsHeader;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"     * Creates a {@code ClientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList, boolean isShowAll) {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"        super(FXML);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"        if (isShowAll) {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"            meetingsHeader.setText(\"All Meetings\");","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"            meetingsHeader.setText(\"Upcoming Meetings\");","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"                setText(null);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"            } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"joelwongjy":10,"sheimoria":2,"raynerljm":47}},{"path":"src/main/java/seedu/address/ui/PolicyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":" * A UI component that displays information of a {@code Policy}.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"public class PolicyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"    private static final String FXML \u003d \"PolicyListCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"    public final Policy policy;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"    private Label policyName;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"    private Label id;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"    private Label company;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    private Label policyManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"    private Label premium;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"     * Creates a {@code PolicyCard} with the given {@code Policy} and index to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"    public PolicyCard(Policy policy, int displayedIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"        policyName.setText(policy.getName().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"        company.setText(policy.getCompany().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"        policyManager.setText(\"Managed by \" + policy.getPolicyManager().fullName);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"        premium.setText(\"$\" + policy.getPremium());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"joelwongjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"        if (!(other instanceof PolicyCard)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"        // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"joelwongjy"},"content":"        PolicyCard card \u003d (PolicyCard) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"                \u0026\u0026 policy.equals(card.policy);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":70}},{"path":"src/main/java/seedu/address/ui/PolicyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":" * Panel containing the list of policies.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"public class PolicyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"    private static final String FXML \u003d \"ClientDisplayPanel.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PolicyListPanel.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    private ListView\u003cPolicy\u003e policyListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"     * Creates a {@code PolicyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    public PolicyListPanel(ObservableList\u003cPolicy\u003e policyList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"        policyListView.setItems(policyList);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"        policyListView.setCellFactory(listView -\u003e new PolicyListViewCell());","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Policy} using a {@code PolicyCard}.","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    class PolicyListViewCell extends ListCell\u003cPolicy\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"        protected void updateItem(Policy policy, boolean empty) {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"            super.updateItem(policy, empty);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"            if (empty || policy \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"                setText(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"            } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"                setGraphic(new PolicyCard(policy, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":50}},{"path":"src/main/java/seedu/address/ui/PreferenceRow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":" * An UI component that displays a preference of a {@code Client}.","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"public class PreferenceRow extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"    private static final String FXML \u003d \"PreferenceRow.fxml\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"    public final Map.Entry\u003cString, String\u003e preference;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    private Label key;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"    private Label value;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"     * Creates a {@code PreferenceRow} with the given {@code preference}.","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"    public PreferenceRow(Map.Entry\u003cString, String\u003e preference) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"        this.preference \u003d preference;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        key.setText(preference.getKey());","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"        value.setText(preference.getValue());","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"        if (!(other instanceof PreferenceRow)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"joelwongjy"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"joelwongjy"},"content":"        PreferenceRow card \u003d (PreferenceRow) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"        return preference.equals(card.preference);","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"joelwongjy":57}},{"path":"src/main/java/seedu/address/ui/TutorialWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":" * Controller for a tutorial page","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"public class TutorialWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"    public static final String WELCOME \u003d \"Welcome to onlyFAs! Here is a tutorial on how to use our app.\";","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    public static final List\u003cString\u003e STEPS \u003d List.of(WELCOME, AddCommand.MESSAGE_USAGE, DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"            EditCommand.MESSAGE_USAGE, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TutorialWindow.class);","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"    private static final String FXML \u003d \"TutorialWindow.fxml\";","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"    private int index \u003d 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"    private Button nextButton;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    private Label tutorialMessage;","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"     * Creates a new TutorialWindow.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"     * @param root Stage to use as the root of the TutorialWindow.","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"    public TutorialWindow(Stage root) {","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"        tutorialMessage.setText(STEPS.get(index));","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"     * Creates a new TutorialWindow.","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"    public TutorialWindow() {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"joelwongjy"},"content":"     * Shows the tutorial window.","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"joelwongjy"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"joelwongjy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"joelwongjy"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"joelwongjy"},"content":"    public void show() {","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"joelwongjy"},"content":"        logger.fine(\"Showing tutorial page about the application.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"joelwongjy"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"joelwongjy"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"joelwongjy"},"content":"     * Returns true if the tutorial window is currently being shown.","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"joelwongjy"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"joelwongjy"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"joelwongjy"},"content":"     * Hides the tutorial window.","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"joelwongjy"},"content":"    public void hide() {","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"joelwongjy"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"joelwongjy"},"content":"     * Focuses on the tutorial window.","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"joelwongjy"},"content":"    public void focus() {","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"joelwongjy"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"joelwongjy"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"joelwongjy"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"joelwongjy"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"joelwongjy"},"content":"    private void next() {","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"joelwongjy"},"content":"        if (index + 1 \u003d\u003d STEPS.size()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"joelwongjy"},"content":"            getRoot().close();","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"joelwongjy"},"content":"            index \u003d 0;","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"joelwongjy"},"content":"            tutorialMessage.setText(STEPS.get(0));","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"joelwongjy"},"content":"        } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"joelwongjy"},"content":"            if (index \u003d\u003d STEPS.size() - 2) {","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"joelwongjy"},"content":"                nextButton.setText(\"Done\");","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"joelwongjy"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"joelwongjy"},"content":"            index +\u003d 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"joelwongjy"},"content":"            tutorialMessage.setText(STEPS.get(index));","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"joelwongjy"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"joelwongjy":114}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/onlyfas_32.png\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joelwongjy":1,"-":87}},{"path":"src/main/resources/view/ClientDisplayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"\u003cScrollPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"        \u003cAnchorPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"            \u003cVBox fx:id\u003d\"clientDisplayCard\" prefHeight\u003d\"180\" prefWidth\u003d\"360\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"                \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"                    \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"70\" fitWidth\u003d\"70\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"                        \u003cImage url\u003d\"@/images/profile.png\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"                    \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"heading\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"                            \u003cInsets top\u003d\"10.0\" bottom\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"                    \u003cLabel fx:id\u003d\"lastContacted\" styleClass\u003d\"clientSubtitle\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"PHONE\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"ADDRESS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"EMAIL\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"BIRTHDAY\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"NOTE\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"clientDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"preferencesHeader\" styleClass\u003d\"clientSubheading\" text\u003d\"PREFERENCES\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"                        \u003cInsets top\u003d\"5\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joelwongjy"},"content":"                \u003cStackPane fx:id\u003d\"preferencesContainer\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"                    \u003cListView fx:id\u003d\"preferences\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"joelwongjy"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel styleClass\u003d\"clientSubheading\" text\u003d\"POLICIES\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"joelwongjy"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"joelwongjy"},"content":"                        \u003cInsets top\u003d\"15\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"joelwongjy"},"content":"                \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"                    \u003cListView fx:id\u003d\"policyListView\" minHeight\u003d\"1000\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"joelwongjy"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"joelwongjy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":63}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"60\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"      \u003cImageView fx:id\u003d\"imageView\" fitHeight\u003d\"50\" fitWidth\u003d\"50\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"        \u003cImage url\u003d\"@/images/profile.png\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"      \u003cVBox minWidth\u003d\"480\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"          \u003cInsets left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"          \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"          \u003cLabel fx:id\u003d\"lastContacted\" styleClass\u003d\"cell_grey_label\" text\u003d\"\\$lastContacted\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"        \u003cFlowPane fx:id\u003d\"policies\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joelwongjy"},"content":"            \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"joelwongjy"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joelwongjy"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"joelwongjy"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joelwongjy":20,"-":29}},{"path":"src/main/resources/view/ClientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"  \u003cHBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    \u003cLabel fx:id\u003d\"clientCount\" styleClass\u003d\"client-list-count\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"    \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"    \u003cLabel fx:id\u003d\"sortMethod\" styleClass\u003d\"client-list-sort\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"      \u003cInsets left\u003d\"10\" bottom\u003d\"8\" right\u003d\"25\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"  \u003cListView fx:id\u003d\"clientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joelwongjy":13,"sheimoria":1,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"@font-face {","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"    font-family: Lato;","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"    src: url(\u0027Lato-Regular.ttf\u0027);","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"@font-face {","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"    font-family: Lato Bold;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"    src: url(\u0027Lato-Bold.ttf\u0027);","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"@font-face {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    font-family: Lato Black;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"    src: url(\u0027Lato-Black.ttf\u0027);","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"@font-face {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    font-family: Lato Light;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"    src: url(\u0027Lato-Light.ttf\u0027);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"joelwongjy"},"content":"    -fx-base: #FAF9FA;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"joelwongjy"},"content":"    -fx-control-inner-background: #FAF9FA;","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #FAF9FA;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":104,"author":{"gitId":"joelwongjy"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 10 0 10 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-width: 0 0 3 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #FAF9FA;","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"joelwongjy"},"content":".list-cell:filled:hover {","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"joelwongjy"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent #86868b transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent #3872dd transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent #3872dd transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"joelwongjy"},"content":".cell_grey_label {","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"joelwongjy"},"content":".client-list-count {","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Bold\";","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"joelwongjy"},"content":".client-list-sort {","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #3872dd;","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":182,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Light\";","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent #EBEAEE transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"joelwongjy"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2022-03-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"joelwongjy"},"content":".scroll-pane {","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":265,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #ECECEC;","lastModifiedDate":"2022-03-13"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 12 10 12 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":304,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato\";","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #3872dd;","lastModifiedDate":"2022-03-13"},{"lineNumber":307,"author":{"gitId":"joelwongjy"},"content":"    -fx-prompt-text-fill: #3872dd;","lastModifiedDate":"2022-03-13"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"sheimoria"},"content":"#filterField, #clientListPanel, #clientWebpage {","lastModifiedDate":"2022-03-17"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":314,"author":{"gitId":"joelwongjy"},"content":"#resultDisplay {","lastModifiedDate":"2022-03-13"},{"lineNumber":315,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-width: 0 0 3 0;","lastModifiedDate":"2022-03-13"},{"lineNumber":316,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-color: transparent transparent #ECECEC transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":317,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":318,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"myc37"},"content":"#policies {","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":329,"author":{"gitId":"myc37"},"content":"#policies .label {","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":331,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #3872dd;","lastModifiedDate":"2022-03-13"},{"lineNumber":332,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 3 8 3 8;","lastModifiedDate":"2022-03-31"},{"lineNumber":333,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-radius: 14;","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-radius: 14;","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":338,"author":{"gitId":"joelwongjy"},"content":"#preferences .keyLabel {","lastModifiedDate":"2022-03-31"},{"lineNumber":339,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #3975ea;","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: #e9f3fe;","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 3 8 3 8;","lastModifiedDate":"2022-03-31"},{"lineNumber":342,"author":{"gitId":"joelwongjy"},"content":"    -fx-border-radius: 14;","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-radius: 14;","lastModifiedDate":"2022-03-31"},{"lineNumber":344,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2022-03-31"},{"lineNumber":345,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":346,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":347,"author":{"gitId":"joelwongjy"},"content":".heading {","lastModifiedDate":"2022-03-13"},{"lineNumber":348,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \"Lato Bold\";","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-13"},{"lineNumber":351,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":352,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":353,"author":{"gitId":"joelwongjy"},"content":".clientDetail {","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 0 0 12 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #1d1d1f;","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"joelwongjy"},"content":"    -fx-pref-width: 360pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"joelwongjy"},"content":".clientSubtitle {","lastModifiedDate":"2022-03-25"},{"lineNumber":362,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"joelwongjy"},"content":"    -fx-wrap-text: true !important;","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"joelwongjy"},"content":".clientSubheading {","lastModifiedDate":"2022-03-25"},{"lineNumber":370,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-family: \u0027Lato\u0027;","lastModifiedDate":"2022-03-25"},{"lineNumber":371,"author":{"gitId":"joelwongjy"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-03-25"},{"lineNumber":372,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: #ADABBC !important;","lastModifiedDate":"2022-03-25"},{"lineNumber":373,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":375,"author":{"gitId":"joelwongjy"},"content":".right-panel {","lastModifiedDate":"2022-03-13"},{"lineNumber":376,"author":{"gitId":"joelwongjy"},"content":"    -fx-padding: 0 10 0 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"joelwongjy":135,"sheimoria":1,"myc37":2,"-":239}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"    -fx-background: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joelwongjy":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"         title\u003d\"onlyFAs\" minWidth\u003d\"1000\" minHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"    \u003cImage url\u003d\"@/images/onlyfas_32.png\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleTutorial\" text\u003d\"Tutorial\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"          \u003cVBox minWidth\u003d\"600\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"joelwongjy"},"content":"            \u003cStackPane maxWidth\u003d\"900\" VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"joelwongjy"},"content":"                \u003cInsets left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"joelwongjy"},"content":"                       minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\" maxWidth\u003d\"900\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"            \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"              \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"joelwongjy"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"joelwongjy"},"content":"          \u003cHBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"joelwongjy"},"content":"            \u003cVBox fx:id\u003d\"meetingList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"joelwongjy"},"content":"              \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" maxWidth\u003d\"900\" prefWidth\u003d\"900\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"joelwongjy"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"joelwongjy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"joelwongjy":15,"sheimoria":4,"raynerljm":4,"-":51}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"      \u003cLabel fx:id\u003d\"startDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDateTime\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"      \u003cLabel fx:id\u003d\"endDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDateTime\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"raynerljm":33}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"\u003cVBox styleClass\u003d\"right-panel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"  \u003cLabel fx:id\u003d\"meetingsHeader\" styleClass\u003d\"heading\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"      \u003cInsets bottom\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"  \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"joelwongjy":8,"raynerljm":7}},{"path":"src/main/resources/view/PolicyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"                \u003cLabel fx:id\u003d\"policyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"            \u003cLabel fx:id\u003d\"policyManager\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"            \u003cLabel fx:id\u003d\"premium\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joelwongjy":34}},{"path":"src/main/resources/view/PreferenceRow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"\u003cHBox spacing\u003d\"10\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"preferences\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"        \u003cInsets left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"    \u003cLabel fx:id\u003d\"key\" styleClass\u003d\"keyLabel\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"    \u003cLabel fx:id\u003d\"value\" styleClass\u003d\"valueLabel\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"joelwongjy":14}},{"path":"src/main/resources/view/TutorialWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"#nextButton, #tutorialMessage {","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"#nextButton {","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"#nextButton:hover {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"#nextButton:armed {","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"#tutorialMessageContainer {","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"joelwongjy":19}},{"path":"src/main/resources/view/TutorialWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joelwongjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"joelwongjy"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"joelwongjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"joelwongjy"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Tutorial\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"joelwongjy"},"content":"         minWidth\u003d\"600\" minHeight\u003d\"200\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"joelwongjy"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"joelwongjy"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"joelwongjy"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"joelwongjy"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"joelwongjy"},"content":"        \u003cURL value\u003d\"@TutorialWindow.css\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"joelwongjy"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"joelwongjy"},"content":"      \u003cVBox fx:id\u003d\"tutorialMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"joelwongjy"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"joelwongjy"},"content":"            \u003cLabel fx:id\u003d\"tutorialMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"joelwongjy"},"content":"          \u003cVBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"joelwongjy"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" bottom\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"joelwongjy"},"content":"          \u003c/VBox.margin\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"joelwongjy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"joelwongjy"},"content":"        \u003cButton fx:id\u003d\"nextButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#next\" text\u003d\"Next\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"joelwongjy"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"           \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"joelwongjy"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"joelwongjy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"joelwongjy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"joelwongjy":38}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        final Index fifthClientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        assertTrue(fifthClientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        assertTrue(fifthClientIndex.equals(fifthClientIndex));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        assertFalse(fifthClientIndex.equals(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        assertFalse(fifthClientIndex.equals(5.0f));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        assertFalse(fifthClientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"sheimoria":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"myc37"},"content":"        String deleteCommand \u003d \"deleteClient 9\";","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"myc37"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sheimoria":8,"myc37":2,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        assertCommandSuccess(new AddCommand(validClient), model,","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validClient), expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(new AddCommand(clientInList), model, AddCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sheimoria":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        ModelStubAcceptingClientAdded modelStub \u003d new ModelStubAcceptingClientAdded();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        CommandResult commandResult \u003d new AddCommand(validClient).execute(modelStub);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validClient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        AddCommand addCommand \u003d new AddCommand(validClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"        ModelStub modelStub \u003d new ModelStubWithClient(validClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CLIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        Client bob \u003d new ClientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"sheimoria"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"        public void deleteClient(Client target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"sheimoria"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"sheimoria"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"sheimoria"},"content":"        public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"myc37"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"joelwongjy"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"myc37"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"myc37"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"myc37"},"content":"        public void updateSortedClientList(Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"myc37"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"myc37"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"joelwongjy"},"content":"        public Client getDisplayedClient() {","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"joelwongjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"joelwongjy"},"content":"        public void updateDisplayedClient(Client client) {","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"joelwongjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"raynerljm"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"raynerljm"},"content":"        public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"raynerljm"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"raynerljm"},"content":"        public void sortMeetings() {","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":194,"author":{"gitId":"raynerljm"},"content":"        public boolean isOverlapping(Meeting meeting) {","lastModifiedDate":"2022-03-08"},{"lineNumber":195,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-08"},{"lineNumber":196,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":197,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"raynerljm"},"content":"        public boolean isOverlappingExcept(Meeting meeting, Meeting exceptedMeeting) {","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"raynerljm"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"raynerljm"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"joelwongjy"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate, boolean isShowAll) {","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"raynerljm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"joelwongjy"},"content":"        public boolean isSorted() {","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"joelwongjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"joelwongjy"},"content":"        public void setIsSorted(boolean isSorted) {","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"joelwongjy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"joelwongjy"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"joelwongjy"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"joelwongjy"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"joelwongjy"},"content":"        public boolean isShowAllMeetings() {","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"sheimoria"},"content":"     * A Model stub that contains a single client.","lastModifiedDate":"2022-03-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"sheimoria"},"content":"    private class ModelStubWithClient extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"sheimoria"},"content":"        private final Client client;","lastModifiedDate":"2022-03-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"sheimoria"},"content":"        ModelStubWithClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"sheimoria"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":237,"author":{"gitId":"sheimoria"},"content":"            this.client \u003d client;","lastModifiedDate":"2022-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"sheimoria"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":242,"author":{"gitId":"sheimoria"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":243,"author":{"gitId":"sheimoria"},"content":"            return this.client.isSameClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"sheimoria"},"content":"     * A Model stub that always accept the client being added.","lastModifiedDate":"2022-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"sheimoria"},"content":"    private class ModelStubAcceptingClientAdded extends ModelStub {","lastModifiedDate":"2022-03-17"},{"lineNumber":251,"author":{"gitId":"sheimoria"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"sheimoria"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":255,"author":{"gitId":"sheimoria"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":256,"author":{"gitId":"sheimoria"},"content":"            return clientsAdded.stream().anyMatch(client::isSameClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"sheimoria"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":261,"author":{"gitId":"sheimoria"},"content":"            requireNonNull(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":262,"author":{"gitId":"sheimoria"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"sheimoria":41,"joelwongjy":25,"myc37":10,"raynerljm":40,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sheimoria":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false, null, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"joelwongjy"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joelwongjy"},"content":"                null, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"joelwongjy"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joelwongjy"},"content":"                null, null)));","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"joelwongjy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joelwongjy"},"content":"                null, null).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"joelwongjy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"joelwongjy"},"content":"                null, null).hashCode());","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"joelwongjy":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"    public static final EditCommand.EditClientDescriptor DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"    public static final EditCommand.EditClientDescriptor DESC_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        DESC_AMY \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"myc37"},"content":"                .build();","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"        DESC_BOB \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"myc37"},"content":"                .build();","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"sheimoria"},"content":"     * - the address book, filtered client list and selected client in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"        List\u003cClient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"     * Updates {@code model}\u0027s filtered list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sheimoria":17,"myc37":2,"-":103}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CLIENT_SUCCESS, clientToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sheimoria":28,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/EditClientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"public class EditClientDescriptorTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptorWithSameValues \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"        editedAmy \u003d new EditClientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"sheimoria":8,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(editedClient).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"myc37"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastClient, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        expectedModel.setClient(lastClient, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, new EditClientDescriptor());","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"        Client editedClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"        Client clientInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"        Client editedClient \u003d new ClientBuilder(clientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CLIENT_SUCCESS, editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"    public void execute_duplicateClientUnfilteredList_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"        Client firstClient \u003d model.getFilteredClientList().get(INDEX_FIRST_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(firstClient).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CLIENT, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"    public void execute_duplicateClientFilteredList_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"        // edit client in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND_CLIENT.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CLIENT,","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"                new EditClientDescriptorBuilder(clientInList).build());","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"    public void execute_invalidClientIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"    public void execute_invalidClientIndexFilteredList_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"sheimoria"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"sheimoria"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"sheimoria"},"content":"                new EditClientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"sheimoria"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CLIENT, DESC_AMY);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor copyDescriptor \u003d new EditClientDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"sheimoria"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CLIENT, copyDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"sheimoria"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CLIENT, DESC_AMY)));","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"sheimoria"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CLIENT, DESC_BOB)));","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"sheimoria":57,"myc37":2,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"                false, null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"joelwongjy":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.CARL;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ELLE;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.FIONA;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"    public void execute_zeroKeywords_noClientFound() {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"    public void execute_multipleKeywords_multipleClientsFound() {","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sheimoria":15,"-":68}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"joelwongjy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false,","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joelwongjy"},"content":"                null, null);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"joelwongjy":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sheimoria":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"        Client expectedClient \u003d new ClientBuilder(BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2022-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2022-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedClient));","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"myc37"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(BOB)","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":67,"author":{"gitId":"myc37"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"myc37"},"content":"                new AddCommand(expectedClientMultipleTags));","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"        // no email, no address, zero tags","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withEmail().withAddress().build();","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY,","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"                new AddCommand(expectedClient));","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"myc37"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"myc37"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-04-05"},{"lineNumber":104,"author":{"gitId":"myc37"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"myc37"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-04-05"},{"lineNumber":108,"author":{"gitId":"myc37"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-04-05"},{"lineNumber":112,"author":{"gitId":"myc37"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"myc37"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"sheimoria":11,"myc37":19,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ClientUtil.getAddCommand(client));","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        assertEquals(new AddCommand(client), command);","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CLIENT.getOneBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_CLIENT), command);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder(client).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"                + INDEX_FIRST_CLIENT.getOneBased() + \" \" + ClientUtil.getEditClientDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CLIENT, descriptor), command);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"sheimoria":16,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CLIENT));","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"sheimoria":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.EditClientDescriptorBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        Index targetIndex \u003d INDEX_SECOND_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"myc37"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"myc37"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"myc37"},"content":"                .build();","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"        Index targetIndex \u003d INDEX_THIRD_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"sheimoria"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"myc37"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-05"},{"lineNumber":150,"author":{"gitId":"myc37"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"myc37"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"sheimoria"},"content":"        Index targetIndex \u003d INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"sheimoria"},"content":"        EditClientDescriptor descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"sheimoria":23,"myc37":6,"-":147}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"sheimoria":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        assertEquals(INDEX_FIRST_CLIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"sheimoria":7,"-":123}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newClients);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        assertFalse(addressBook.hasClient(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"        assertTrue(addressBook.hasClient(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"myc37"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"        assertTrue(addressBook.hasClient(editedAlice));","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"     * A stub ReadOnlyAddressBook whose clients list can violate interface constraints.","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients) {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"            return clients;","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"raynerljm"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"raynerljm"},"content":"            return meetings;","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"sheimoria":30,"myc37":2,"raynerljm":4,"-":73}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"sheimoria"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"sheimoria":16,"-":116}},{"path":"src/test/java/seedu/address/model/client/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheimoria":1,"-":35}},{"path":"src/test/java/seedu/address/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"myc37"},"content":"// import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-04-05"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"public class ClientTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"    //    @Test","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"    //    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"myc37"},"content":"    //        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"myc37"},"content":"    //        assertThrows(UnsupportedOperationException.class, () -\u003e client.getTags().remove(0));","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"myc37"},"content":"    //    }","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    public void isSameClient() {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"        assertTrue(ALICE.isSameClient(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"        assertFalse(ALICE.isSameClient(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        assertTrue(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"        assertFalse(ALICE.isSameClient(editedAlice));","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        Client editedBob \u003d new ClientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        editedBob \u003d new ClientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        assertFalse(BOB.isSameClient(editedBob));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        Client aliceCopy \u003d new ClientBuilder(ALICE).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"        editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"sheimoria":22,"myc37":7,"-":57}},{"path":"src/test/java/seedu/address/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheimoria":1,"-":67}},{"path":"src/test/java/seedu/address/model/client/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        assertTrue(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        assertFalse(predicate.test(new ClientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sheimoria":10,"-":65}},{"path":"src/test/java/seedu/address/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheimoria":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"sheimoria":1,"-":39}},{"path":"src/test/java/seedu/address/model/client/UniqueClientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.model.client;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"public class UniqueClientListTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    private final UniqueClientList uniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    public void contains_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.contains(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    public void contains_clientNotInList_returnsFalse() {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        assertFalse(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"    public void contains_clientInList_returnsTrue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"        assertTrue(uniqueClientList.contains(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"    public void contains_clientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        assertTrue(uniqueClientList.contains(editedAlice));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"    public void add_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.add(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"    public void add_duplicateClient_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.add(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"    public void setClient_nullTargetClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(null, ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"    public void setClient_nullEditedClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClient(ALICE, null));","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"    public void setClient_targetClientNotInList_throwsClientNotFoundException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.setClient(ALICE, ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    public void setClient_editedClientIsSameClient_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.setClient(ALICE, ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"        expectedUniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"    public void setClient_editedClientHasSameIdentity_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"myc37"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.setClient(ALICE, editedAlice);","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"        expectedUniqueClientList.add(editedAlice);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"    public void setClient_editedClientHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.setClient(ALICE, BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"sheimoria"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"    public void setClient_editedClientHasNonUniqueIdentity_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClient(ALICE, BOB));","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"    public void remove_nullClient_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.remove(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"    public void remove_clientDoesNotExist_throwsClientNotFoundException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"        assertThrows(ClientNotFoundException.class, () -\u003e uniqueClientList.remove(ALICE));","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"sheimoria"},"content":"    public void remove_existingClient_removesClient() {","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.remove(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"sheimoria"},"content":"    public void setClients_nullUniqueClientList_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((UniqueClientList) null));","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"sheimoria"},"content":"    public void setClients_uniqueClientList_replacesOwnListWithProvidedUniqueClientList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"sheimoria"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.setClients(expectedUniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"sheimoria"},"content":"    public void setClients_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"sheimoria"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClientList.setClients((List\u003cClient\u003e) null));","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":146,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"sheimoria"},"content":"    public void setClients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.add(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"sheimoria"},"content":"        List\u003cClient\u003e clientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"sheimoria"},"content":"        uniqueClientList.setClients(clientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"sheimoria"},"content":"        UniqueClientList expectedUniqueClientList \u003d new UniqueClientList();","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"sheimoria"},"content":"        expectedUniqueClientList.add(BOB);","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"sheimoria"},"content":"        assertEquals(expectedUniqueClientList, uniqueClientList);","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"sheimoria"},"content":"    public void setClients_listWithDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"sheimoria"},"content":"        List\u003cClient\u003e listWithDuplicateClients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e uniqueClientList.setClients(listWithDuplicateClients));","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"sheimoria"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"sheimoria"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"sheimoria"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"sheimoria"},"content":"            -\u003e uniqueClientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":165,"myc37":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.storage.JsonAdaptedClient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.BENSON;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"myc37"},"content":"    private static final String INVALID_PREMIUM \u003d \"ten dollars\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"    private static final String VALID_LAST_CONTACTED \u003d BENSON.getLastContacted().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"    private static final List\u003cJsonAdaptedPolicy\u003e VALID_POLICIES \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"            BENSON.getPolicies().asUnmodifiableObservableList().stream().map(JsonAdaptedPolicy::new)","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"zechajw"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"zechajw"},"content":"    private static final JsonAdaptedPreferenceMap VALID_PREFERENCES \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"zechajw"},"content":"            new JsonAdaptedPreferenceMap(BENSON.getPreferenceMap());","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        assertEquals(BENSON, client.toModelType());","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, VALID_POLICIES, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"myc37"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"myc37"},"content":"    public void toModelType_invalidPolicies_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"myc37"},"content":"        List\u003cJsonAdaptedPolicy\u003e invalidPolicies \u003d new ArrayList\u003c\u003e(VALID_POLICIES);","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"myc37"},"content":"        invalidPolicies.add(new JsonAdaptedPolicy(INVALID_NAME, INVALID_NAME, INVALID_NAME, INVALID_PREMIUM));","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"sheimoria"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"myc37"},"content":"                VALID_BIRTHDAY, VALID_LAST_CONTACTED, invalidPolicies, VALID_NOTE, VALID_PREFERENCES);","lastModifiedDate":"2022-04-05"},{"lineNumber":117,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, client::toModelType);","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheimoria":30,"myc37":18,"zechajw":3,"-":68}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.ALICE;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.HOON;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.IDA;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"    public void readAddressBook_invalidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"    public void readAddressBook_invalidAndValidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"        original.addClient(HOON);","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"        original.addClient(IDA);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheimoria":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":"import seedu.address.testutil.TypicalClients;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"            \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"    private static final Path TYPICAL_CLIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClientsAddressBook.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    private static final Path TYPICAL_MEETINGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMeetingsAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    private static final Path INVALID_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMeetingAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"    private static final Path OVERLAPPING_MEETINGS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"            .resolve(\"overlappingMeetingsAddressBook.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    public void toModelType_typicalClientsFile_success() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLIENTS_FILE,","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zechajw"},"content":"        System.out.println(addressBookFromFile);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        AddressBook typicalClientsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        System.out.println(typicalClientsAddressBook);","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        assertEquals(addressBookFromFile, typicalClientsAddressBook);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"    public void toModelType_typicalMeetingsFile_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEETINGS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"        System.out.println(addressBookFromFile);","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"        AddressBook typicalMeetingsAddressBook \u003d TypicalClients.getTypicalAddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        System.out.println(typicalMeetingsAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        assertEquals(addressBookFromFile, typicalMeetingsAddressBook);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"    public void toModelType_invalidMeetingFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEETING_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"    public void toModelType_overlappingMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(OVERLAPPING_MEETINGS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_OVERLAPPING_MEETINGS,","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sheimoria":14,"raynerljm":29,"zechajw":1,"-":36}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withClient(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Note;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.UniquePolicyList;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"public class ClientBuilder {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"21-03-1999\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"    public static final String DEFAULT_LAST_CONTACTED \u003d \"21-03-1999 21:03\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"myc37"},"content":"    public static final String DEFAULT_POLICY_NAME \u003d \"Big Insurance Policy\";","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"myc37"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Big Insurance Company\";","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"    public static final String DEFAULT_POLICY_MANAGER \u003d \"Vijay\";","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"myc37"},"content":"    public static final String DEFAULT_PREMIUM \u003d \"100\";","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"zechajw"},"content":"    public static final String DEFAULT_NOTE \u003d \"Test Note\";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    private Date birthday;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"    private DateTime lastContacted;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"    private UniquePolicyList policies \u003d new UniquePolicyList();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"zechajw"},"content":"    private Note note;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"        birthday \u003d new Date(DEFAULT_BIRTHDAY);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        lastContacted \u003d new DateTime(DEFAULT_LAST_CONTACTED);","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"myc37"},"content":"        Policy defaultPolicy \u003d new Policy(new Name(DEFAULT_POLICY_NAME), new Name(DEFAULT_COMPANY),","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"myc37"},"content":"                new Name(DEFAULT_POLICY_MANAGER),","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"myc37"},"content":"                new Premium(DEFAULT_PREMIUM));","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"myc37"},"content":"        policies.add(defaultPolicy);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"zechajw"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        birthday \u003d clientToCopy.getBirthday();","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"        lastContacted \u003d clientToCopy.getLastContacted();","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"myc37"},"content":"        policies.setPolicies(clientToCopy.getPolicies());","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"        note \u003d clientToCopy.getNote();","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building to an empty string.","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withAddress() {","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"        this.address \u003d new Address();","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code birthday} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withBirthday(String birthday) {","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"sheimoria"},"content":"        this.birthday \u003d new Date(birthday);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code lastContacted} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withLastContacted(String lastContacted) {","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"sheimoria"},"content":"        this.lastContacted \u003d new DateTime(lastContacted);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building to an empty string.","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withEmail() {","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"sheimoria"},"content":"        this.email \u003d new Email();","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":134,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"myc37"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"sheimoria"},"content":"     * Parses the {@code policies} into a {@code Set\u003cPolicy\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"myc37"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withPolicies(Policy ... policies) {","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"myc37"},"content":"        this.policies \u003d SampleDataUtil.getPolicyList(policies);","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"myc37"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"myc37"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"myc37"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"zechajw"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Note} of the {@code Client} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"zechajw"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"sheimoria"},"content":"    public ClientBuilder withNote(String note) {","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"zechajw"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"zechajw"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"zechajw"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"zechajw"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"sheimoria"},"content":"    public Client build() {","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"myc37"},"content":"        return new Client(name, phone, email, address, birthday, lastContacted);","lastModifiedDate":"2022-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"sheimoria":72,"myc37":23,"zechajw":9,"-":55}},{"path":"src/test/java/seedu/address/testutil/ClientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_CONTACTED;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":" * A utility class for Client.","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"public class ClientUtil {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"     * Returns an add command string for adding the {@code client}.","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"    public static String getAddCommand(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getClientDetails(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"        sb.append(PREFIX_NAME).append(client.getName().fullName).append(\" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        sb.append(PREFIX_PHONE).append(client.getPhone().value).append(\" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"        sb.append(PREFIX_EMAIL).append(client.getEmail().value).append(\" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        sb.append(PREFIX_ADDRESS).append(client.getAddress().value).append(\" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"     * Returns the part of command string for the given {@code EditClientDescriptor}\u0027s details.","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"    public static String getEditClientDescriptorDetails(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday).append(\" \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"        descriptor.getLastContacted().ifPresent(lastContacted -\u003e sb.append(PREFIX_LAST_CONTACTED).append(lastContacted)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"sheimoria":20,"-":32}},{"path":"src/test/java/seedu/address/testutil/EditClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sheimoria"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sheimoria"},"content":"import seedu.address.logic.commands.EditCommand.EditClientDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Address;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Date;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.DateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sheimoria"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sheimoria"},"content":" * A utility class to help with building EditClientDescriptor objects.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sheimoria"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sheimoria"},"content":"public class EditClientDescriptorBuilder {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"    private final EditClientDescriptor descriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder() {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder(EditClientDescriptor descriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"sheimoria"},"content":"        this.descriptor \u003d new EditClientDescriptor(descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"sheimoria"},"content":"     * Returns an {@code EditClientDescriptor} with fields containing {@code client}\u0027s details","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder(Client client) {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"        descriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"        descriptor.setName(client.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sheimoria"},"content":"        descriptor.setPhone(client.getPhone());","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sheimoria"},"content":"        descriptor.setEmail(client.getEmail());","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sheimoria"},"content":"        descriptor.setAddress(client.getAddress());","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"        descriptor.setBirthday(client.getBirthday());","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sheimoria"},"content":"        descriptor.setLastContacted(client.getLastContacted());","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Name} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sheimoria"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Phone} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Email} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"sheimoria"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code Address} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"sheimoria"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code birthday} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"sheimoria"},"content":"        descriptor.setBirthday(new Date(birthday));","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"sheimoria"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"sheimoria"},"content":"     * Sets the {@code lastContacted} of the {@code EditClientDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"sheimoria"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptorBuilder withLastContacted(String lastContacted) {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"sheimoria"},"content":"        descriptor.setLastContacted(new DateTime(lastContacted));","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"sheimoria"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"sheimoria"},"content":"    public EditClientDescriptor build() {","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"sheimoria"},"content":"        return descriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"sheimoria"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"sheimoria"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sheimoria":91}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_START_DATETIME \u003d \"2022-01-01T12:06:52.783166\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_END_DATETIME \u003d \"2022-01-02T12:06:52.783295\";","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_PHONE \u003d \"94351253\";","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_EMAIL \u003d \"alice@example.com\";","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_LABEL \u003d \"Lunch\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_POLICY_NAME \u003d \"Big Insurance Policy\";","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Big Insurance Company\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_POLICY_MANAGER \u003d \"Vijay\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_PREMIUM \u003d \"100\";","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"    public static final String DEFAULT_NOTE \u003d \"Test Note\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    private Client client;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"    private String label;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"        startDateTime \u003d LocalDateTime.parse(DEFAULT_START_DATETIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"        endDateTime \u003d LocalDateTime.parse(DEFAULT_END_DATETIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"        client \u003d new ClientBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"                .withName(DEFAULT_NAME)","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"                .withPhone(DEFAULT_PHONE)","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"                .withEmail(DEFAULT_EMAIL)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"                .withAddress((DEFAULT_ADDRESS))","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"                .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"        label \u003d DEFAULT_LABEL;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"        startDateTime \u003d meetingToCopy.getStartDateTime();","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        endDateTime \u003d meetingToCopy.getEndDateTime();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"        client \u003d meetingToCopy.getClient();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"        label \u003d meetingToCopy.getLabel();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"     * Sets the {@code startDateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder withStartDateTime(String startDateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"raynerljm"},"content":"        this.startDateTime \u003d LocalDateTime.parse(startDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"raynerljm"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"raynerljm"},"content":"     * Sets the {@code endDateTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder withEndDateTime(String endDateTime) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"raynerljm"},"content":"        this.endDateTime \u003d LocalDateTime.parse(endDateTime);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"raynerljm"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"     * Sets the {@code Client} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder withClient(Client client) {","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"raynerljm"},"content":"        this.client \u003d client;","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"raynerljm"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"raynerljm"},"content":"     * Sets the {@code label} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"raynerljm"},"content":"    public MeetingBuilder withLabel(String label) {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"raynerljm"},"content":"        this.label \u003d label;","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"raynerljm"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"raynerljm"},"content":"    public Meeting build() {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"raynerljm"},"content":"        return new Meeting(startDateTime, endDateTime, client, label);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"raynerljm":93}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"sheimoria"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"sheimoria"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"sheimoria"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"sheimoria"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"sheimoria"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"sheimoria"},"content":"    public static Client getClient(Model model, Index index) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sheimoria":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sheimoria"},"content":"import seedu.address.model.client.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Policy;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"myc37"},"content":"import seedu.address.model.policy.Premium;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"sheimoria"},"content":" * A utility class containing a list of {@code Client} objects to be used in tests.","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"sheimoria"},"content":"public class TypicalClients {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"sheimoria"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"myc37"},"content":"            .build();","lastModifiedDate":"2022-04-05"},{"lineNumber":31,"author":{"gitId":"sheimoria"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sheimoria"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withBirthday(\"21-03-1999\").withLastContacted(\"21-03-1999 21:03\")","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"myc37"},"content":"            .withPolicies(","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"myc37"},"content":"                    new Policy(","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"myc37"},"content":"                            new Name(\"life insurance\"), new Name(\"insurance company\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"myc37"},"content":"                            new Name(\"Alice\"), new Premium(\"10\")","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"myc37"},"content":"                    ),","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"myc37"},"content":"                    new Policy(","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"myc37"},"content":"                            new Name(\"health insurance\"), new Name(\"insurance company\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"myc37"},"content":"                            new Name(\"Carl\"), new Premium(\"15\"))","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"myc37"},"content":"                    )","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"zechajw"},"content":"            .withNote(\"Test Note\")","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"myc37"},"content":"            .build();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"sheimoria"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"sheimoria"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"myc37"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2022-04-05"},{"lineNumber":49,"author":{"gitId":"sheimoria"},"content":"    public static final Client ELLE \u003d new ClientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"sheimoria"},"content":"    public static final Client FIONA \u003d new ClientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"sheimoria"},"content":"    public static final Client GEORGE \u003d new ClientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"sheimoria"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"sheimoria"},"content":"    public static final Client IDA \u003d new ClientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"sheimoria"},"content":"    // Manually added - Client\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"sheimoria"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"myc37"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"sheimoria"},"content":"    public static final Client BOB \u003d new ClientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"myc37"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"sheimoria"},"content":"    private TypicalClients() {} // prevents instantiation","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"raynerljm"},"content":"     * Returns an {@code AddressBook} with all the typical clients and meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"sheimoria"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"sheimoria"},"content":"            ab.addClient(client);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"sheimoria"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"sheimoria":21,"myc37":16,"raynerljm":2,"zechajw":1,"-":48}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"sheimoria"},"content":"    public static final Index INDEX_FIRST_CLIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sheimoria"},"content":"    public static final Index INDEX_SECOND_CLIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sheimoria"},"content":"    public static final Index INDEX_THIRD_CLIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"sheimoria":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"raynerljm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"raynerljm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"raynerljm"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"raynerljm"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"raynerljm"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"raynerljm"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"raynerljm"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"raynerljm"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"raynerljm"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"raynerljm"},"content":"    public static final Meeting WITH_ALICE \u003d new MeetingBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"raynerljm"},"content":"            .withStartDateTime(\"2022-01-01T12:06:52.783166\")","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"raynerljm"},"content":"            .withEndDateTime(\"2022-01-02T12:06:52.783295\")","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"raynerljm"},"content":"            .withClient(new ClientBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"raynerljm"},"content":"                    .withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"raynerljm"},"content":"                    .withPhone(\"94351253\")","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"raynerljm"},"content":"                    .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"raynerljm"},"content":"                    .withEmail(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"raynerljm"},"content":"                    .build())","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"raynerljm"},"content":"            .withLabel(\"Lunch\")","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"raynerljm"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"raynerljm"},"content":"    public static final Meeting WITH_BENSON \u003d new MeetingBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"raynerljm"},"content":"            .withStartDateTime(\"2022-01-03T12:07:01.722322\")","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"raynerljm"},"content":"            .withEndDateTime(\"2022-01-04T12:07:01.722430\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"raynerljm"},"content":"            .withClient(new ClientBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"raynerljm"},"content":"                    .withName(\"Benson Meier\")","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"raynerljm"},"content":"                    .withPhone(\"98765432\")","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"raynerljm"},"content":"                    .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"raynerljm"},"content":"                    .withEmail(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"raynerljm"},"content":"                    .build())","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"raynerljm"},"content":"            .withLabel(\"\")","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"raynerljm"},"content":"            .build();","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"raynerljm"},"content":"    private TypicalMeetings() {} // prevents instantiation","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"raynerljm"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"raynerljm"},"content":"     * Returns an {@code AddressBook} with all the typical clients and meetings.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"raynerljm"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"raynerljm"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"raynerljm"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"raynerljm"},"content":"        for (Client client : TypicalClients.getTypicalClients()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"raynerljm"},"content":"            ab.addClient(client);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"raynerljm"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"raynerljm"},"content":"        return ab;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"raynerljm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"raynerljm"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"raynerljm"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WITH_ALICE, WITH_BENSON));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"raynerljm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"raynerljm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"raynerljm":58}}]
