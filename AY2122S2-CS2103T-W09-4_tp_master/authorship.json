[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W09-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"* **TAPA** allows TAs to better manage their student’s contact and progress, especially for those who are teaching multiple classes/modules at the same time. It is optimised for use on CLI.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"  Usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  * Check out **[TAPA\u0027s User Guide](https://github.com/AY2122S2-CS2103T-W09-4/tp/blob/master/docs/UserGuide.md)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"* The project is a software project for a desktop application that manages student contact details and progress.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"* It is named `Teaching Assistant\u0027s Personal Assistant` (`TAPA` for short) because it helps TAs manage their students\u0027 contacts and progress.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* For the detailed documentation of this project, see **[TAPA\u0027s page on Github](https://github.com/AY2122S2-CS2103T-W09-4/tp)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":9,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"### Brandon Kheng","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"\u003cimg src\u003d\"images/brelkh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"[[github](https://github.com/brelkh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"### Benjamin Koh Wei Jie","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"\u003cimg src\u003d\"images/benjykoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"[[github](http://github.com/benjykoh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"[[portfolio](team/benjykoh.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"### Jet Tan","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"\u003cimg src\u003d\"images/medajet.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"[[github](http://github.com/medajet)]","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"[[portfolio](team/medajet.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"### Saravanan Anuja Harish","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"\u003cimg src\u003d\"images/harish-coding.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"[[github](http://github.com/harish-coding)]","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"### Terng Yan Long","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"\u003cimg src\u003d\"images/korochii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"[[github](http://github.com/korochii)]","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"[[portfolio](team/korochii.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Benjykoh":6,"Korochii":5,"brelkh":4,"medajet":5,"-":35,"Harish-coding":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"**Target user profile**: Teaching Assistants who","lastModifiedDate":"2022-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"* has a need to manage a significant number of students (especially across multiple modules)","lastModifiedDate":"2022-02-23"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"**Value proposition**:  better manage the student’s contact and progress,","lastModifiedDate":"2022-02-23"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"especially for those who are teaching multiple classes/modules at the same time.","lastModifiedDate":"2022-02-23"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"It is optimised for use on CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                | I want to …​                                                                        | So that I can…​                                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"| -------- | --------------------------------------------------------- | -------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |","lastModifiedDate":"2022-02-23"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | add students to TAPA                                                                   | know which students are taking my classes                                                     |","lastModifiedDate":"2022-02-23"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | delete a specific student from TAPA                                                    | remove student who has withdrawn from the module during the semester                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | list students alphabetically                                                           | print students in a list as their names would appear on the official class list               |","lastModifiedDate":"2022-02-23"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | save existing data to hard drive                                                       | access the data again when I reopen the app                                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | see all the tasks that a student currently have                                        | observe his/her progress                                                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | delete all students from TAPA                                                          | remove students that were taught in previous semesters and are no longer relevant             |","lastModifiedDate":"2022-02-23"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | mark/unmark students’ tasks according to the completion status                         | update his/her progress                                                                       |","lastModifiedDate":"2022-02-23"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | see students’ contact details (such as email address)                                  | contact them if needed                                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | find a student                                                                         | check details of a specific student                                                           |","lastModifiedDate":"2022-02-23"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | assign tasks to a specific student                                                     | allocate and track a task that is given to the student                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | display the possible actions that  I can take, or do                                   | have a quick reference without the need of reading a user guide                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | edit the details of the students                                                       | fix any errors that occurred during the insertion of student details                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant who is teaching in multiple semesters  | archive the existing data                                                              | save a copy on the local machine before undergoing a complete deletion of data                |","lastModifiedDate":"2022-02-23"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | tag students                                                                           | know what modules they are taking                                                             |","lastModifiedDate":"2022-02-23"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | delete multiple students from TAPA                                                     | remove students that are no longer being taught, without needing to delete them individually  |","lastModifiedDate":"2022-02-23"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | display student progress                                                               | locate a person easily                                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | filter students by their tags                                                          | view the progress of students in each separate tag (different class/module)                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | update the student’s tags                                                              | edit when the student drop/take a new module                                                  |","lastModifiedDate":"2022-02-23"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | define my own tasks for each module                                                    | customise the tasks to each module                                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | assign tasks to multiple students                                                      | allocate tasks to students without having to individually assign them                         |","lastModifiedDate":"2022-02-23"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | track attendance                                                                       | mark attendance for modules that require student attendance                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see modules I’m teaching at a glance                                                   | remind myself of what needs to be prepared for classes                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | sort students by their progress/grading in each assignment/number of classes attended  | see how the class is performing                                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see student’s timetable                                                                | find a good time to arrange a consult with them                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | type in chain commands                                                                 | execute multiple different commands quickly                                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | send emails from the command line                                                      | send emails to students with specific tags quickly                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is used to CLI commands            | customise commands                                                                     | execute commands quickly                                                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | undo the most recent command entered                                                   | revert any unwanted changes (such as deleting student) without much trouble                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | customise task details such as deadlines                                               | track upcoming deadlines more easily                                                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | view grades scored by students in each assignment                                      | understand which topics they are finding difficult                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | edit an assignment name/deadline                                                       | update the name/deadline of an assignment in case of future changes or extensions             |","lastModifiedDate":"2022-02-23"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | be able to highlight or feature certain students                                       | know which students are performing the best or need more help                                 |","lastModifiedDate":"2022-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"(For all use cases below, the **System** is the `TAPA` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-23"},{"lineNumber":316,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"**Use case: UC01 - Add a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":318,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":319,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":320,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"1. User requests to add a specific student.","lastModifiedDate":"2022-02-23"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"2. TAPA shows the updated list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":323,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":324,"author":{"gitId":"Korochii"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":325,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":326,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":327,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":328,"author":{"gitId":"Korochii"},"content":"* 1a. A student with the same matriculation number already exist.","lastModifiedDate":"2022-02-23"},{"lineNumber":329,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":330,"author":{"gitId":"Korochii"},"content":"    * 1a1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":331,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":332,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":333,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":334,"author":{"gitId":"Korochii"},"content":"* 1b. The matriculation number of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":335,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":336,"author":{"gitId":"Korochii"},"content":"    * 1b1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":339,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":340,"author":{"gitId":"Korochii"},"content":"* 1c. The name of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":341,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":342,"author":{"gitId":"Korochii"},"content":"    * 1c1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":343,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":344,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":345,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":346,"author":{"gitId":"Korochii"},"content":"* 1d. The module code that the student is currently taking is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":347,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":348,"author":{"gitId":"Korochii"},"content":"    * 1d1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":349,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":350,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":351,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":352,"author":{"gitId":"Korochii"},"content":"**Use case: UC02 - List all students**","lastModifiedDate":"2022-02-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":357,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":358,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":359,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":360,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":361,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":362,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":363,"author":{"gitId":"Korochii"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":365,"author":{"gitId":"Korochii"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":366,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":367,"author":{"gitId":"Korochii"},"content":"**Use case: UC03 - Delete a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":371,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":372,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":373,"author":{"gitId":"Korochii"},"content":"3. User requests to delete a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":374,"author":{"gitId":"Korochii"},"content":"4. TAPA deletes the students.","lastModifiedDate":"2022-02-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":387,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":388,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":389,"author":{"gitId":"Korochii"},"content":"      ","lastModifiedDate":"2022-02-23"},{"lineNumber":390,"author":{"gitId":"medajet"},"content":"* 3b. The given student id is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":391,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":392,"author":{"gitId":"medajet"},"content":"    * 3b1. TAPA shows an error message.","lastModifiedDate":"2022-03-13"},{"lineNumber":393,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":394,"author":{"gitId":"medajet"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-13"},{"lineNumber":395,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":396,"author":{"gitId":"Korochii"},"content":"**Use case: UC04 - Edit a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":397,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":398,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":399,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":400,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":401,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":402,"author":{"gitId":"Korochii"},"content":"3. User requests edits to the supplied details of a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":403,"author":{"gitId":"Korochii"},"content":"4. TAPA updates the details of the student with the supplied details.","lastModifiedDate":"2022-02-23"},{"lineNumber":404,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":405,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":406,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":415,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":416,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":417,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":418,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":419,"author":{"gitId":"Korochii"},"content":"* 3b. The given field is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":420,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":421,"author":{"gitId":"Korochii"},"content":"    * 3b1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":422,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":423,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":424,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":425,"author":{"gitId":"Korochii"},"content":"* 3c. The new matriculation number specified is already in the database.","lastModifiedDate":"2022-02-23"},{"lineNumber":426,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":427,"author":{"gitId":"Korochii"},"content":"    * 3c1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"Korochii"},"content":"3.  Usage should be more efficient than a regular contact management application for a user who types fast in English text.","lastModifiedDate":"2022-02-23"},{"lineNumber":438,"author":{"gitId":"Korochii"},"content":"4.  Should be usable by a novice who has never used a contact management application before.","lastModifiedDate":"2022-02-23"},{"lineNumber":439,"author":{"gitId":"Korochii"},"content":"5.  The system should respond within 3 seconds.","lastModifiedDate":"2022-02-23"},{"lineNumber":440,"author":{"gitId":"Korochii"},"content":"6.  The student\u0027s data should only be stored locally.","lastModifiedDate":"2022-02-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"Korochii"},"content":"* **Module**: A specific class that a student is taking","lastModifiedDate":"2022-02-23"},{"lineNumber":448,"author":{"gitId":"Korochii"},"content":"* **Tag**: A category that the student belong to (usually denotes the module that is currently being taken)","lastModifiedDate":"2022-02-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Korochii":128,"medajet":6,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"TAPA (Teaching Assistant\u0027s Personal Assistant) is a desktop app that allows TAs to better manage their student’s progress,","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"especially for those","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"who are teaching multiple classes/modules at the same time. It is optimised for use on a CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"1. Ensure you have [Java `11`](https://www.oracle.com/java/technologies/downloads/#java11) or above installed in your Computer.","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"1. Download the latest `TAPA.jar` from [here](https://github.com/AY2122S2-CS2103T-W09-4/tp/releases).","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"   * **`add`**`i/A0123456Z n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu` : Adds a contact named `John` to TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"   * **`delete`**`3` : Deletes the 3rd entry in TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"   * **`manual`**`add` : Display the user manual of the command `add`.","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"### Adding a student: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"Adds a student to TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"Format: `add i/STUDENT_ID n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [h/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS]​`","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"* The student’s matriculation number, name as well as module code are compulsory fields.","lastModifiedDate":"2022-02-23"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"* The phone number, telegram handle, and email address fields are optional and can be excluded.","lastModifiedDate":"2022-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"Example:","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"* `add i/AXXXXXXXR n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    * A student named John is added to TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"### Deleting a student: `delete`","lastModifiedDate":"2022-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"Deletes a student from TAPA.","lastModifiedDate":"2022-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"Format: `delete STUDENT_INDEX` (or) `delete i/STUDENT_ID`","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"* The student corresponding to the index or matriculation number (specified after the `delete` command) will be removed from TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of students in TAPA, or there is no student with the specified matriculation number.","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"Example:","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"* `delete 10`","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"    * A student named John (whose list index is “10”) is deleted from TAPA.","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"* `delete i/A0123456Z`","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"    * A student named John whose matriculation number is \"A0123456Z\" is deleted from TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"### Finding a student: `find`","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"medajet"},"content":"Allows the user to look up the details of a particular student.","lastModifiedDate":"2022-02-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"Format: `find n/STUDENT_NAME` (or) `find i/STUDENT_ID`","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"medajet"},"content":"* The student whose name or student id is specified after the `find` command will appear in the resulting list.","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":107,"author":{"gitId":"medajet"},"content":"Example:","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"medajet"},"content":"* `find n/John`","lastModifiedDate":"2022-02-25"},{"lineNumber":109,"author":{"gitId":"medajet"},"content":"    * Displays the particulars of the students whose names include John.","lastModifiedDate":"2022-02-25"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"* `find i/AXXXXXXXR`","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"medajet"},"content":"    * Displays the particulars of the student with student ID AXXXXXXXR.","lastModifiedDate":"2022-02-25"},{"lineNumber":112,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"### Checking all the tasks that a student has: `task`","lastModifiedDate":"2022-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"Displays all the tasks that are allocated to a particular student.","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"Format: `task i/STUDENT_ID`","lastModifiedDate":"2022-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"* The completed and uncompleted tasks are separated into 2 different sections.","lastModifiedDate":"2022-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"Example:","lastModifiedDate":"2022-02-23"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"* `task i/AXXXXXXXR`","lastModifiedDate":"2022-03-01"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"    * Lists out the tasks that student (AXXXXXXXR) has.","lastModifiedDate":"2022-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"### Marking an undone task as done for a student: `mark`","lastModifiedDate":"2022-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":127,"author":{"gitId":"Benjykoh"},"content":"Marks a specific undone task as done for a particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":129,"author":{"gitId":"Benjykoh"},"content":"Format : `mark i/STUDENT_ID UNDONE_TASK_INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":131,"author":{"gitId":"Benjykoh"},"content":"* The undone task corresponding to the index or the particular student will be marked as done in the TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":132,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of tasks for that particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":133,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the task with that specified index for the particular student is already marked as done.","lastModifiedDate":"2022-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":135,"author":{"gitId":"Benjykoh"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":136,"author":{"gitId":"Benjykoh"},"content":"* `mark i/AXXXXXXXR 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":137,"author":{"gitId":"Benjykoh"},"content":"    * Marks the first undone task for the student with student ID AXXXXXXXR as done.","lastModifiedDate":"2022-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":139,"author":{"gitId":"brelkh"},"content":"### Marking a done task as undone for a student: `unmark`","lastModifiedDate":"2022-03-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":141,"author":{"gitId":"Benjykoh"},"content":"Marks a specific done task as undone for a particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":143,"author":{"gitId":"Benjykoh"},"content":"Format : `unmark i/STUDENT_ID DONE_TASK_INDEX`","lastModifiedDate":"2022-03-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":145,"author":{"gitId":"Benjykoh"},"content":"* The done task corresponding to the index for the particular student will be marked as undone in the TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":146,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of tasks for that particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":147,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the task with that specified index for the particular student is already marked as undone.","lastModifiedDate":"2022-03-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":149,"author":{"gitId":"Benjykoh"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":150,"author":{"gitId":"Benjykoh"},"content":"* `unmark i/AXXXXXXXR 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":151,"author":{"gitId":"Benjykoh"},"content":"    * Marks the first done task for the student with student ID AXXXXXXXR as undone.","lastModifiedDate":"2022-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":153,"author":{"gitId":"brelkh"},"content":"### Editing a student\u0027s information: `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":155,"author":{"gitId":"brelkh"},"content":"Edits a student\u0027s information in TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"Format: `edit STUDENT_INDEX [i/STUDENT_ID] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] [h/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS]​`","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"* The index of the student to be edited is a compulsory field.","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"* The student’s matriculation number, name, module code, phone number, telegram handle, and email address fields are optional and can be excluded.","lastModifiedDate":"2022-03-01"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of students in TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"* `edit 10 m/CS2103T p/98765432 t/johnnn e/e0123456z@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":165,"author":{"gitId":"brelkh"},"content":"    * A student (whose list index is “10”) has their module, phone number, telegram handle and email address edited.","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":167,"author":{"gitId":"brelkh"},"content":"### Deleting all students: `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":168,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":169,"author":{"gitId":"brelkh"},"content":"Clears all students from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":173,"author":{"gitId":"brelkh"},"content":"* All students and their corresponding details will be removed from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":174,"author":{"gitId":"brelkh"},"content":"* A message will be displayed if TAPA is already empty and there are no students to be removed.","lastModifiedDate":"2022-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":176,"author":{"gitId":"brelkh"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":177,"author":{"gitId":"brelkh"},"content":"* `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":178,"author":{"gitId":"brelkh"},"content":"    * All students cleared from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"### Archiving details in the address book: `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"Saves a copy of the details currently saved in the address book into a separate file.","lastModifiedDate":"2022-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"Format: `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"* A copy of the details currently saved in the address book will be saved to a separate file.","lastModifiedDate":"2022-02-23"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"* The file name will be the date and time of the archive operation.","lastModifiedDate":"2022-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"### Listing the student details: `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"Displays all the students enrolled in a list.","lastModifiedDate":"2022-03-01"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"Format: `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"* Displays the students from the list of students in alphabetical order.","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"* The students are indexed as 1, 2, 3, ......","lastModifiedDate":"2022-03-01"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"* `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"    * Displays all the enrolled students in alphabetical order.","lastModifiedDate":"2022-03-01"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"### Assigning tasks to a particular student: `assign`","lastModifiedDate":"2022-03-01"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"Format: `assign i/STUDENT_ID tn/TASK_NAME`","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"* Assigns a task to a particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"Example:","lastModifiedDate":"2022-03-01"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"* `assign i/AXXXXXXXR tn/assignment 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"    * Assigns assignment 1 to student with id AXXXXXXXR.","lastModifiedDate":"2022-03-01"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"Benjykoh"},"content":"### Displaying manual for a command: `manual`","lastModifiedDate":"2022-03-01"},{"lineNumber":214,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"Display the format for a specified command and a short description for a particular command.","lastModifiedDate":"2022-03-01"},{"lineNumber":216,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":217,"author":{"gitId":"Benjykoh"},"content":"Format: `manual [COMMAND_NAME]`","lastModifiedDate":"2022-03-01"},{"lineNumber":218,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":219,"author":{"gitId":"Benjykoh"},"content":"* The format of the command corresponding to the command name will be displayed, along with a short description.","lastModifiedDate":"2022-03-01"},{"lineNumber":220,"author":{"gitId":"Benjykoh"},"content":"* If there are no inputs for the command name, all the available commands will be displayed.","lastModifiedDate":"2022-03-01"},{"lineNumber":221,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the user input a command name that is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":222,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":223,"author":{"gitId":"Benjykoh"},"content":"Example","lastModifiedDate":"2022-03-01"},{"lineNumber":224,"author":{"gitId":"Benjykoh"},"content":"* `manual add`","lastModifiedDate":"2022-03-01"},{"lineNumber":225,"author":{"gitId":"Benjykoh"},"content":"    * Display the format for the command add, and briefly describes the command.","lastModifiedDate":"2022-03-01"},{"lineNumber":226,"author":{"gitId":"Benjykoh"},"content":"* `manual`","lastModifiedDate":"2022-03-01"},{"lineNumber":227,"author":{"gitId":"Benjykoh"},"content":"    * Display all available commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":228,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":229,"author":{"gitId":"Korochii"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-03-01"},{"lineNumber":230,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":231,"author":{"gitId":"Korochii"},"content":"Shows a pop-up window explaining how to access the user guide.","lastModifiedDate":"2022-03-01"},{"lineNumber":232,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"Korochii"},"content":"Format: `help`","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"**Q**: What command can I use to view a list of available commands?\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"**A**: Use the command “manual” to view the list of commands used within TAPA. Alternatively, refer to the Command Summary section below.","lastModifiedDate":"2022-03-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Action      | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"------------|------------------","lastModifiedDate":"2022-02-23"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"**Add**     | `add i/MATRICULATION_NO n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [h/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] ` \u003cbr\u003e e.g., `add i/AXXXXXXXR n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":257,"author":{"gitId":"medajet"},"content":"**Delete**  | `delete STUDENT_INDEX` (or) `delete i/STUDENT_ID` \u003cbr\u003e e.g., `delete 10`, `delete i/AXXXXXXXR`","lastModifiedDate":"2022-03-13"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"**Find**    | `find n/STUDENT_NAME` (or) `find i/STUDENT_ID` \u003cbr\u003e e.g., `find n/john`, `find i/AXXXXXXXR`","lastModifiedDate":"2022-03-01"},{"lineNumber":259,"author":{"gitId":"Benjykoh"},"content":"**Manual**  | `manual COMMAND_NAME` \u003cbr\u003e e.g., `manual add`","lastModifiedDate":"2022-03-01"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"**Exit**    | `exit`","lastModifiedDate":"2022-02-23"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"**Task**    | `task i/STUDENT_ID` \u003cbr\u003e e.g., `task i/AXXXXXXXR`","lastModifiedDate":"2022-03-01"},{"lineNumber":262,"author":{"gitId":"Benjykoh"},"content":"**Mark**    | `mark i/STUDENT_ID UNDONE_TASK_INDEX` \u003cbr\u003e e.g., `mark i/AXXXXXXXR 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":263,"author":{"gitId":"Benjykoh"},"content":"**Unmark**  | `unmark i/STUDENT_ID DONE_TASK_INDEX` \u003cbr\u003e e.g., `unmark i/AXXXXXXXR 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":264,"author":{"gitId":"Harish-coding"},"content":"**list**    | `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"**Assign**  | `assign i/STUDENT_ID tn/TASK_NAME` \u003cbr\u003e e.g., `task i/AXXXXXXXR tn/assignment 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"**Edit**    | `edit STUDENT_INDEX [i/MATRICULATION_NO] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] ` \u003cbr\u003e e.g., `edit 10 m/CS2103T p/98765432 t/johnnn e/e0123456@nus.edu.sg`","lastModifiedDate":"2022-03-01"},{"lineNumber":267,"author":{"gitId":"brelkh"},"content":"**Clear**   | `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"**Archive** | `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"**Help**    | `help`","lastModifiedDate":"2022-03-01"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":271,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":272,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Benjykoh":35,"Korochii":46,"brelkh":24,"medajet":23,"-":122,"Harish-coding":22}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"brelkh"},"content":"    content: \"TAPA\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brelkh":1,"-":294}},{"path":"docs/team/benjykoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"title: Benjamin Koh Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbenjykoh\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Benjykoh":39}},{"path":"docs/team/brelkh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"title: Brandon Kheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    * What it does:","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    * Justification:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    * Highlights:","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    * Credits:*{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbrelkh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    * PRs reviewed (with non-trivial review comments): **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    * Contributed to forum discussions (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    * Some parts of the history feature I added was adopted by several other classmates (**(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":43}},{"path":"docs/team/harish-coding.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"title: Saravanan Anuja Harish\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dharish-coding\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Harish-coding":39}},{"path":"docs/team/korochii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"title: Terng Yan Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dkorochii\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Korochii":40}},{"path":"docs/team/medajet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"title: Jet Tan Ee Kiat\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"  * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"medajet":39}},{"path":"src/main/java/seedu/address/commons/core/ManualMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":" * Container for user visible messages regarding the manual commands.","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"public class ManualMessages {","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ADD_COMMAND \u003d \"Adds a student to TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: add i/STUDENT_ID n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [h/TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"            + \"[e/EMAIL_ADDRESS] \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: add i/A6942069R n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_DELETE_COMMAND \u003d \"Deletes a student from TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: delete STUDENT_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: delete 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_FIND_COMMAND \u003d \"Allows the user to look up the details of a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: find n/STUDENT_NAME (or) find i/STUDENT_ID \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: find n/John (or) find i/AXXXXXXXR\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_EDIT_COMMAND \u003d \"Edits a student\u0027s information in TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : edit STUDENT_INDEX [i/STUDENT_ID] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"            + \"[h/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: edit 10 m/CS2103T p/98765432 t/johnnn e/e0123456z@u.nus.edu\";","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_CLEAR_COMMAND \u003d \"Clears all students from TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : clear \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: clear\";","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_LIST_COMMAND \u003d \"Displays all the students enrolled in a list. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : list \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_MANUAL_COMMAND \u003d \"Display the format for a specified command and a short\"","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"            + \" description for a particular command. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : manual [COMMAND_NAME] \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: manual add \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"            + \"Kind of weird that you have to use \u0027manual\u0027... to find out what \u0027manual\u0027 does... :( \"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"            + \"Trying to find a bug?\";","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_HELP_COMMAND \u003d \"Shows a pop-up window explaining how to access the user \"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"            + \"guide. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : help \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: help\";","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_EXIT_COMMAND \u003d \"Exits the program. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : exit \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: exit\";","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_TASK_COMMAND \u003d \"Displays all the tasks that are allocated to a \"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"            + \"particular student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: task i/STUDENT_ID \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: task i/A6942069R\";","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    /* These commands have yet to be implemented. Will add them back once commands have been implemented.","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_MARK_COMMAND \u003d \"Marks a specific undone task as done for a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : mark i/STUDENT_ID UNDONE_TASK_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: mark i/A6942069R 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_UNMARK_COMMAND \u003d \"Marks a specific done task as undone for a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : unmark i/STUDENT_ID DONE_TASK_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: unmark i/A6942069R 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ARCHIVE_COMMAND \u003d \"Saves a copy of the details currently saved in the \"","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"            + \"address book into a separate file. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : archive \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: archive\";","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ASSIGN_COMMAND \u003d \"Assigns a task to a particular student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : assign i/STUDENT_ID tn/TASK_NAME \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: assign i/A6942069R tn/Watch Lecture\";","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"    */","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ALL_COMMANDS \u003d \"Here are all the commands: \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"            + \"1. add \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"            + \"2. delete \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"            + \"3. find \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"            + \"4. task \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"            + \"5. mark \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"            + \"6. unmark \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"            + \"7. edit \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"            + \"8. clear \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"            + \"9. archive \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"            + \"10. list \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"            + \"11. assign \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"            + \"12. manual \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"            + \"13. help \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"            + \"14. exit \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"            + \"Use \u0027manual [COMMAND_NAME] to display the format and a short description for the specified command\";","lastModifiedDate":"2022-03-05"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_UNKNOWN_COMMANDS \u003d \"Unknown command!\";","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":96,"Korochii":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_NONEXISTENT_STUDENTID \u003d \"There is no person with the specified matriculation \"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"            + \"number!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"medajet":2,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE \"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_ADDRESS]\\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"A0123456Z \"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"CS2103T \"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"johnny \"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            + PREFIX_EMAIL + \"e0123456@u.nus.edu \";","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":12,"brelkh":1,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"import seedu.address.storage.JsonSerializableAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" * Saves a copy of the stored data, into a separate json file.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Saves a copy of the stored data, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"into a separate json file\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_ARCHIVE_SUCCESS \u003d \"File saved at: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CREATE_FAILURE \u003d \"Error in creating file!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_WRITE_FAILURE \u003d \"Error in writing to file!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        // Extract the current path and address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        Path currentPath \u003d model.getAddressBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        ReadOnlyAddressBook currentAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        // Generate the new path according to current date and time.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd_HH.mm.ss.SSSSSS\");","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        Path parentPath \u003d currentPath.getParent();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        String dateTime \u003d LocalDateTime.now().format(formatter);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        Path suffix \u003d Paths.get(dateTime + \".json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        Path newPath \u003d parentPath.resolve(suffix);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        // Create a new .json file based on the new path above.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            FileUtil.createIfMissing(newPath);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_CREATE_FAILURE);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        // Write to the new file that we have created.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"            JsonUtil.saveJsonFile(new JsonSerializableAddressBook(currentAddressBook), newPath);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_WRITE_FAILURE);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        return new CommandResult(MESSAGE_ARCHIVE_SUCCESS + newPath.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":64}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" * Assigns a task to a student in TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns a tasks to a student. \"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_TASK_NAME + \"TASK_NAME\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_ID + \"A0123456Z \"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_TASK_NAME + \"assignment 1\";","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task Assigned: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task is already assigned to a specified person.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no person with the given studentId\";","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    private final Task task;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student ID of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    public AssignCommand(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"            model.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        } catch (DuplicateTaskException dte) {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"        } catch (PersonNotFoundException pnfe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        } finally {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task + \", to student with ID: \" + studentId));","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Harish-coding":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list \"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"            + \"or matriculation number.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"            + \"Parameters: INDEX (must be a positive integer) or STUDENT_ID\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"            + \" or \" + COMMAND_WORD + \" \" + PREFIX_ID + \"A0123456Z\\n\";","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"    private final StudentId targetId;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"     * Creates a DeleteCommand to delete the specified {@code Person} using the specfied index.","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"        this.targetId \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"     * Creates a DeleteCommand to delete the specified {@code Person} using the specfied student id.","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"    public DeleteCommand(StudentId targetId) {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"        this.targetId \u003d targetId;","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"        if (targetIndex !\u003d null) { // index was used for the command","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"        } else { // student id was used for the command","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"            assert targetId !\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"            StudentIdContainsKeywordsPredicate pred \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"                    new StudentIdContainsKeywordsPredicate(Collections.singletonList(targetId.toString()));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(pred);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"            if (model.getFilteredPersonList().size() \u003e 0) { // person with specified id exists","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"                Person personToDelete \u003d lastShownList.get(Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"                throw new CommandException(Messages.MESSAGE_NONEXISTENT_STUDENTID);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"            boolean isInstanceOf \u003d other instanceof DeleteCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"            if (!isInstanceOf) { // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"            DeleteCommand commandToCompare \u003d (DeleteCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"            if (this.targetId \u003d\u003d null \u0026\u0026 this.targetIndex !\u003d null) { // only targetIndex present","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"                return targetIndex.equals(commandToCompare.targetIndex); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"medajet"},"content":"            } else if (this.targetIndex \u003d\u003d null \u0026\u0026 this.targetId !\u003d null) { // only targetId present","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"                return targetId.equals(commandToCompare.targetId); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"medajet":54,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        // @Brandon: Delete updatedAddress/Tags if not needed, adjust fields according to Person constructor","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"        // Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"        // Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"        // @Brandon: null is a placeholder here (to be updated when you start implementing edit)","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        return new Person(null, null, null, null, null, null);","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Korochii":5,"-":222}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain \"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"            + \"the specified search term or matriculation number and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"STUDENT_NAME \" + \"or \" + PREFIX_ID + \"STUDENT_ID \\n\"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John \" + \"or \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"            + PREFIX_ID + \"A0123456Z \\n\";","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"    private final StudentIdContainsKeywordsPredicate idPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"     * Creates a FindCommand to find the specified {@code Person} using the person\u0027s name.","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"        this.namePredicate \u003d predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"        this.idPredicate \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"     * Creates a FindCommand to find the specified {@code Person} using the person\u0027s student id.","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"    public FindCommand(StudentIdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"        this.idPredicate \u003d predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"        this.namePredicate \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"        if (namePredicate !\u003d null) { // student name was used for the command","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"        } else { // student id was used for the command","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(idPredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"            boolean isInstanceOf \u003d other instanceof FindCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"            if (!isInstanceOf) { // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"            FindCommand commandToCompare \u003d (FindCommand) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"            if (this.namePredicate \u003d\u003d null \u0026\u0026 this.idPredicate !\u003d null) { // only idPredicate present","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"                return idPredicate.equals(commandToCompare.idPredicate); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"            } else if (this.idPredicate \u003d\u003d null \u0026\u0026 this.namePredicate !\u003d null) { // only namePredicate present","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"                return namePredicate.equals(commandToCompare.namePredicate); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"medajet":44,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"        model.sortFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":24,"Harish-coding":1}},{"path":"src/main/java/seedu/address/logic/commands/ManualCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.ManualMessages;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":" * Display the format for a specified command and a short description for a particular command.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"public class ManualCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"    public static final String COMMAND_WORD \u003d \"manual\";","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"    private final String commandName;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"    public ManualCommand(String commandName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"        switch (commandName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"        case (\"\"):","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ALL_COMMANDS);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ADD_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_DELETE_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_FIND_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_EDIT_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_CLEAR_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_LIST_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"        case ManualCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_MANUAL_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_HELP_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_EXIT_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_TASK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        /* These commands have yet to be implemented. Will add them back once commands have been implemented.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_MARK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_UNMARK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ARCHIVE_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ASSIGN_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"         */","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(ManualMessages.MANUAL_MESSAGE_UNKNOWN_COMMANDS);","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":78,"Korochii":2}},{"path":"src/main/java/seedu/address/logic/commands/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * Displays the list of task that a particular student currently has.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + \": Displays all the tasks that are allocated to a particular student. \"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"A0123456Z\";","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the tasks that %1$s has:\\n\\n\" + \"%2$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_EMPTY_TASKLIST \u003d \"No task assigned to this student.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            + \"Perhaps you might want to assign a task using the \u0027assign\u0027 command?\";","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no student with the specified Student ID!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * Constructs a new TaskCommand.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     * @param studentId the student ID of the student to display the tasks of.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public TaskCommand(StudentId studentId) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        // Checks if a student with the specified studentId exist.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        assert studentId !\u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        StudentIdContainsKeywordsPredicate pred \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(studentId.toString()));","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        model.updateFilteredPersonList(pred);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) { // Student with specified studentId does not exist","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        // There should only be a single student with this studentId since studentId is a UNIQUE field.","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        Person targetStudent \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        TaskList targetTaskList \u003d targetStudent.getTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        // Resets model so that it displays all students (since we have already extracted the Person of interest).","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        // Empty or non-existent taskList","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        if (targetTaskList \u003d\u003d null || targetTaskList.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_EMPTY_TASKLIST);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        // Categorises the tasks into two new TaskList, depending on the completion status.","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        TaskList incompleteTasks \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        TaskList completedTasks \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        for (Task i : targetTaskList.getTaskList()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            if (i.isTaskComplete()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                completedTasks.addTask(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"                incompleteTasks.addTask(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        if (incompleteTasks.isEmpty()) { // This means that all tasks are completed.","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"                    \"Completed tasks:\\n\" + completedTasks));","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        } else if (completedTasks.isEmpty()) { // This means that all tasks are incomplete.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"                    \"Incomplete tasks:\\n\" + incompleteTasks));","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"        } else { // Mixture of different types of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"                    \"Incomplete tasks:\\n\" + incompleteTasks + \"\\n\" + \"Completed tasks:\\n\" + completedTasks));","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                || (other instanceof TaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 studentId.equals(((TaskCommand) other).studentId)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Korochii":103}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE,","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL);","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        // Check if compulsory fields are present in the user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        ModuleCode module \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currPhone \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        if (currPhone.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            phone \u003d ParserUtil.parsePhone(currPhone.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currTelegramHandle \u003d argMultimap.getValue(PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d ParserUtil.parseTelegramHandle(currTelegramHandle.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currEmail \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        if (currEmail.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"            email \u003d ParserUtil.parseEmail(currEmail.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        Person person \u003d new Person(studentId, name, module, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Korochii":39,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.ManualCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"        case ManualCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"            return new ManualCommandParser().parse(arguments);","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            return new ArchiveCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"            return new TaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjykoh":4,"Korochii":8,"-":76,"Harish-coding":4}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":" * Parses input arguments and creates a new AssignCommand object.","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * @param args String to parse.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * @return AssignCommand to execute.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        // Check if fields are present in the user input.","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_TASK_NAME)","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        Optional\u003cString\u003e currStudentId \u003d argMultimap.getValue(PREFIX_ID);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        StudentId studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        if (currStudentId.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"            studentId \u003d null;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"            studentId \u003d ParserUtil.parseStudentId(currStudentId.get());","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        Optional\u003cString\u003e currTask \u003d argMultimap.getValue(PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"        Task task;","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        if (currTask.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"            task \u003d null;","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"            task \u003d ParserUtil.parseTask(currTask.get());","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        return new AssignCommand(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Harish-coding":68}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_MODULE_CODE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\"); // @Brandon: Delete this field","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\"); // @Brandon: Delete this field","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    public static final Prefix PREFIX_TASK_NAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Korochii":5,"-":12,"Harish-coding":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied neither index nor id","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID) \u0026\u0026 !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"            // supplied both index and id","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID)) { // supplied id only","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"            StudentId id \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"            deleteCommand \u003d new DeleteCommand(id);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"        } else { // supplied index only","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"                deleteCommand \u003d new DeleteCommand(index);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"        return deleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"medajet":29,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"        FindCommand findCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID);","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID) // user inputted both name and id","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) { // name was used","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"            String[] nameKeywords \u003d name.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"            findCommand \u003d new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID)) { // student id was used","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"            String[] idKeywords \u003d studentId.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"            findCommand \u003d new FindCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"        return findCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"medajet":33,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ManualCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.ManualCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":" * Parses input arguments and creates a new ManualCommand object","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"public class ManualCommandParser implements Parser\u003cManualCommand\u003e {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"     * Parses the given {@code String} of arguments in the context of the ManualCommand","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"     * and returns a ManualCommand object for execution.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"    public ManualCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        return new ManualCommand(trimmedArgs);","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":20}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        String trimmedStudentId \u003d studentId.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(trimmedStudentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"        return new StudentId(trimmedStudentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String moduleCode} into an {@code ModuleCode}.","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"        String trimmedModuleCode \u003d moduleCode.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String telegramHandle} into an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"    public static Address parseAddress(String address) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"    public static Tag parseTag(String tag) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"     * Parses a {@code String task} into a {@code Task}.","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"     * @throws ParseException if the given {@code task} is invalid.","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"        String trimmedTask \u003d task.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"        if (!Task.isValidTaskName(trimmedTask)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"        return new Task(trimmedTask);","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Korochii":64,"-":105,"Harish-coding":16}},{"path":"src/main/java/seedu/address/logic/parser/TaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":" * Parses input arguments and creates a new TaskCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"public class TaskCommandParser implements Parser\u003cTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * and returns a TaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public TaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        TaskCommand taskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ID)) { // studentId was used","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            taskCommand \u003d new TaskCommand(studentId);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        return taskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Korochii":44}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code task} to {@code Person} with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        persons.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"     * Sorts the list of persons in alphabetical order by their name.","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    public void sortPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"        persons.sortList();","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":120,"Harish-coding":22}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code Task} to {@code person} with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"     * A person with {@code studentId} must exist in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * The {@code task} should be unique and not a duplicate of already assigned task.","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    void assignTaskToPerson(StudentId studentId, Task task);","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    /** Sorts the list of persons in alphabetical order by their names */","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    void sortFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"Harish-coding":12}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"        addressBook.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"    public void sortFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"        addressBook.sortPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":150,"Harish-coding":14}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class Address { //TODO: Delete this class once it is not needed","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the email is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"-":70}},{"path":"src/main/java/seedu/address/model/person/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a module (in the form of a code) that a student is currently taking in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class ModuleCode {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module code should only contain alphanumeric characters\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]*\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code ModuleCode}","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * @param moduleCode A valid moduleCode that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the module code is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":52}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * The input (person\u0027s name) will converted to \"title case\" when creating a Name object.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        fullName \u003d Name.convertToTitleCase(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     * Converts the given name to title case.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"     * @param name the name of the person.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     * @return the persons name in title case.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    private static String convertToTitleCase(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        String delimiter \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        int firstCharIdx \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        int secondCharIdx \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        int onlyOneChar \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"            return name;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        // Solution adapted from https://www.baeldung.com/java-string-title-case.","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        return Arrays.stream(name.split(delimiter))","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"                .map(x -\u003e x.length() !\u003d onlyOneChar","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"                     ? (x.substring(firstCharIdx, secondCharIdx).toUpperCase()","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"                         + x.substring(secondCharIdx).toLowerCase())","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"                     : x.substring(firstCharIdx, secondCharIdx).toUpperCase())","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"                .collect(Collectors.joining(delimiter));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the name is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":4,"-":57,"Harish-coding":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     * Constructs a new Person.","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * Only the studentId, name, moduleCode are compulsory fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public Person(StudentId studentId, Name name, ModuleCode moduleCode, Phone phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"                  TelegramHandle telegramHandle, Email email) {","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        requireAllNonNull(studentId, name, moduleCode); // Compulsory fields","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     * Constructs a new Person, with an existing taskList.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     * Only the studentId, name, moduleCode are compulsory fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    public Person(StudentId studentId, Name name, ModuleCode moduleCode, Phone phone,","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"                  TelegramHandle telegramHandle, Email email, TaskList taskList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, name, moduleCode); // Compulsory fields","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        return studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        return taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     * Adds a {@code task} to list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"     * Removes the task at {@code index} from the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"        taskList.removeTask(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        taskList.markTaskAsComplete(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsNotComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"        taskList.markTaskAsNotComplete(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"     * Checks if the {@code task} is already present in the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is already present ;false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskAlreadyPresent(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"        return taskList.isTaskAlreadyPresent(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"     * Returns true if both persons have the same student id.","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"     * Returns a copy of the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"     * @return a copy of the person object.","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"    public Person getCopy() {","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"        return new Person(getStudentId(), getName(), getModuleCode(), getPhone(),","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"                getTelegramHandle(), getEmail(), getTaskList());","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"        return otherPerson.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getModuleCode().equals(getModuleCode())","lastModifiedDate":"2022-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2022-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 otherPerson.getTaskList().equals(getTaskList());","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"        return Objects.hash(studentId, name, moduleCode, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"        builder.append(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"                .append(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"                .append(\"; Module Code: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"                .append(getModuleCode());","lastModifiedDate":"2022-02-24"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"        if (currentPhone !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Phone Number: \").append(currentPhone);","lastModifiedDate":"2022-02-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"        if (currentTelegramHandle !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Telegram Handle: @\").append(currentTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"        if (currentEmail !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Email: \").append(currentEmail);","lastModifiedDate":"2022-02-24"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"        TaskList currentTaskList \u003d getTaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"        if (currentTaskList !\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"            builder.append(\"; Tasks: \").append(currentTaskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":47,"-":101,"Harish-coding":67}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the phone number is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"-":52}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a Student\u0027s matriculation number in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class StudentId {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Matriculation number should only contain alphanumeric \"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"            + \"characters and should not be blank\";","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public final String id;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code StudentId}","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @param id A valid id that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public StudentId(String id) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        return id;","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        return id.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":51,"medajet":3}},{"path":"src/main/java/seedu/address/model/person/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":" * Tests that a {@code Person}\u0027s {@code Student ID} matches any of the keywords given.","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"public class StudentIdContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStudentId().id, keyword));","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"medajet":31}},{"path":"src/main/java/seedu/address/model/person/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * Represents a Task assigned to a person.","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * Guarantees: Task Name is present and not null, the task is either complete or not.","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"public class Task {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"            \"Task name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    /*","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private final String taskName;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * Default constructor, to be used only by {@code JsonAdaptedPerson}.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public Task() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        this.taskName \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     * @param taskName a valid taskName.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        checkArgument(isValidTaskName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        this.taskName \u003d convertToTitleCase(taskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * Converts the given name to title case.","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     * @param name the name of the person.","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     * @return the persons name in title case.","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    private static String convertToTitleCase(String name) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        String delimiter \u003d \" \";","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        int firstCharIdx \u003d 0;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        int secondCharIdx \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        int onlyOneChar \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"            return name;","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        // Solution adapted from https://www.baeldung.com/java-string-title-case.","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        return Arrays.stream(name.split(delimiter))","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"                .map(x -\u003e x.length() !\u003d onlyOneChar","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"                        ? (x.substring(firstCharIdx, secondCharIdx).toUpperCase()","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"                        + x.substring(secondCharIdx).toLowerCase())","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"                        : x.substring(firstCharIdx, secondCharIdx).toUpperCase())","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"                .collect(Collectors.joining(delimiter));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"     * Returns true if a given string is a valid task name.","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"     * @return a boolean value (true/false) depending if the task name is valid.","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    public void markComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    public void markNotComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     * Gets the name of the task.","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     * @return the task name","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"        return taskName;","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether the student has completed this task.","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is complete; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return isComplete;","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether the given argument equals {@code taskName}.","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param otherTaskName the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task name is similar to that of the current instance; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskNameEqual(String otherTaskName) {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        return taskName.equalsIgnoreCase(otherTaskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"        return taskName;","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"        return this \u003d\u003d other // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"                || (other instanceof Task","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 getTaskName().equals(((Task) other).getTaskName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Korochii":8,"Harish-coding":129}},{"path":"src/main/java/seedu/address/model/person/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" * Maintains the list of tasks assigned to a student.","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"public class TaskList {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"     * Constructs a {@code TaskList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * Retrieves the taskList.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * @return the taskList that is in the form of an ArrayList.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        return taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * Adds a task to list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     * Adds all tasks from an existing taskList to the list of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the target TaskList to be copied from.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public void addAllTask(TaskList taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        this.taskList.addAll(taskList.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"     * Removes the task at {@code index} from the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        taskList.get(index).markComplete();","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsNotComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        taskList.get(index).markNotComplete();","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"     * Checks if the {@code task} is already present in the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is already present ;false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskAlreadyPresent(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"        return taskList.stream().map(x -\u003e x.isTaskNameEqual(task.getTaskName())).anyMatch(y -\u003e y);","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"     * @return the number of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"        return taskList.size();","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether there are any tasks in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the there are no tasks; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"        String taskStr \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"        int idxNum \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        String separate \u003d \". \";","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"            taskStr +\u003d idxNum + separate + task + \"\\n\";","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"            idxNum++;","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"        return taskStr;","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 taskList.equals(((TaskList) other).taskList));","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Korochii":18,"Harish-coding":104}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * Represents a Students\u0027s telegram handle in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"public class TelegramHandle {","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    // Telegram handle has a limit of 5 to 32 characters excluding the @symbol at the front.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handles should contain 5 to 32 alphanumeric characters.\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]{5,32}\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param telegramHandle A valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * Returns if a given string is a valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 telegramHandle.equals(((TelegramHandle) other).telegramHandle)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        return telegramHandle.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":57}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code task} to a person with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        boolean isPersonFound \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"            if (currPerson.getStudentId().equals(studentId)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"                isPersonFound \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"                if (!currPerson.isTaskAlreadyPresent(task)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"                    Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"                    updatedPerson.addTask(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"                    setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"                } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"                    throw new DuplicateTaskException();","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        if (!isPersonFound) {","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"     * Sorts the list of persons in ascending order of their names.","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"    public void sortList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"        internalList.sort(new SortAlphabetically());","lastModifiedDate":"2022-03-09"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"     * SortAlphabetically implements a comparator class, to sort the list of persons in alphabetical order.","lastModifiedDate":"2022-03-09"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"    class SortAlphabetically implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"         * Sorts in ascending order of the names of persons.","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"         *","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"         * @param a the first person.","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"         * @param b the second person.","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"         * @return an int value after comparing the names of the two persons.","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"        public int compare(Person a, Person b) {","lastModifiedDate":"2022-03-09"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"            String personAFullName \u003d a.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"            String personBFullName \u003d b.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"            return personAFullName.compareTo(personBFullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"Harish-coding":57}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * name).","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Harish-coding":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A0000000Z\"), new Name(\"Alex Yeoh\"), new ModuleCode(\"CS2100\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"87438807\"), new TelegramHandle(\"alexxx\"), new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A1111111Z\"), new Name(\"Bernice Yu\"), new ModuleCode(\"CS2101\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"99272758\"), new TelegramHandle(\"bernice\"), new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A2222222Z\"), new Name(\"Charlotte Oliveiro\"), new ModuleCode(\"CS2102\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"                    null, new TelegramHandle(\"charlotte\"), new Email(\"charlotte@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A3333333Z\"), new Name(\"David Li\"), new ModuleCode(\"CS2103\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"91031282\"), null, new Email(\"lidavid@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A4444444Z\"), new Name(\"Irfan Ibrahim\"), new ModuleCode(\"CS2104\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"92492021\"), new TelegramHandle(\"irfan\"), null),","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A5555555Z\"), new Name(\"Roy Balakrishnan\"), new ModuleCode(\"CS2105\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"                    null, null, null)","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Korochii":15,"-":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private final String studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    private final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"studentId\") String studentId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"moduleCode\") String moduleCode, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"taskList\") TaskList taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"            this.taskList.addAllTask(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        moduleCode \u003d source.getModuleCode().moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Phone currPhone \u003d source.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        if (currPhone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            phone \u003d currPhone.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currTelegramHandle \u003d source.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d currTelegramHandle.telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        Email currEmail \u003d source.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        if (currEmail \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"            email \u003d currEmail.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        taskList.addAllTask(source.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(studentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        final Phone modelPhone;","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        final TelegramHandle modelTelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        } else if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        final Email modelEmail;","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        final TaskList modelTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"        for (Task i : taskList.getTaskList()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"            if (!Task.isValidTaskName(i.getTaskName())) {","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"        modelTaskList \u003d taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"        return new Person(modelStudentId, modelName, modelModuleCode,","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"                modelPhone, modelTelegramHandle, modelEmail, modelTaskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Korochii":82,"-":71}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Korochii":1,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w09-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Korochii":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    private Label id; // index of entry","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    private Label studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    private Label telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    private Label tasks;","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        studentId.setText(\"Matriculation No.: \" + person.getStudentId().id);","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        moduleCode.setText(person.getModuleCode().moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d person.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        if (currentPhone \u003d\u003d null || currentPhone.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \" + currentPhone.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d person.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        if (currentTelegramHandle \u003d\u003d null || currentTelegramHandle.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: @\" + currentTelegramHandle.telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d person.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        if (currentEmail \u003d\u003d null || currentEmail.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \" + currentEmail.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        TaskList currentTasks \u003d person.getTaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"        if (currentTasks \u003d\u003d null || currentTasks.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"            tasks.setText(\"Tasks: \");","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"            tasks.setText(\"Tasks: \\n\" + currentTasks.toString());","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Korochii":33,"-":65,"Harish-coding":10}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"moduleCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$moduleCode\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"      \u003cLabel fx:id\u003d\"tasks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tasks \" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Korochii":3,"-":34,"Harish-coding":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"brelkh":2,"-":6}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.util.HashMap;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.util.Map;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import javafx.application.Application;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//public class AppParametersTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        expected.setConfigPath(null);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":58}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class ConfigTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    public void equalsMethod() {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        assertNotNull(defaultConfig);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":27}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.core;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class VersionTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertEquals(19, version.getMajor());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertEquals(10, version.getMinor());","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertEquals(20, version.getPatch());","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // boundary at 0","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        // normal values","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        // big numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        Version one;","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        Version another;","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        // Tests equality","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        // Tests different patch","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        // Tests different minor","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        // Tests different major","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        // Tests high major vs low minor","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        // Tests high patch vs low minor","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        // Tests same major minor different patch","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        // Tests early access vs not early access on same version number","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        Version one;","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        Version another;","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.equals(another));","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//        assertTrue(one.equals(another));","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":135}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.core.index;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//public class IndexTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    public void createOneBasedIndex() {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//        // invalid index","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        // check equality using the same base","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        // convert from one-based index to zero-based index","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void createZeroBasedIndex() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        // invalid index","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // check equality using the same base","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // convert from zero-based index to one-based index","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":60}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//public class AppUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    public void getImage_exitingImage() {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        AppUtil.checkArgument(true);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":36}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.util.Collection;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//public class CollectionUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void requireAllNonNullVarargs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        // no arguments","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        // any non-empty argument list","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        // argument lists with just one null at the beginning","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // argument lists with nulls in the middle","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // argument lists with one null as the last argument","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        // null reference","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    public void requireAllNonNullCollection() {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        // lists containing nulls in the front","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        // lists containing nulls in the middle","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        // lists containing nulls at the end","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        // null reference","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        // empty list","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        // list with all non-null elements","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    public void isAnyNonNull() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        requireAllNonNull(objects);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        requireAllNonNull(collection);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":108}},{"path":"src/test/java/seedu/address/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.Optional;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.util.logging.Level;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.Config;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//public class ConfigUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public Path tempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new Config(), actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    private Config getTypicalConfig() {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        Config config \u003d new Config();","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        config.setLogLevel(Level.INFO);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        return config;","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        Config original \u003d getTypicalConfig();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        original.setLogLevel(Level.FINE);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//                                  : null;","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":116}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class FileUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void isValidPath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        // valid path","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//        // invalid path","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        // null path -\u003e throws NullPointerException","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":23}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.TestUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"// * Tests JSON Read and Write","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//public class JsonUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        serializableTestClass.setTestValues();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":45}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class StringUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        // EP: empty strings","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        // EP: not a number","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        // EP: zero","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        // EP: zero as prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        // EP: signed numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        // EP: numbers with white space","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        // EP: valid numbers, should return true","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//     * Valid equivalence partitions for word:","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//     *   - any word","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//     *   - word containing symbols/numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//     *   - word with leading/trailing spaces","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//     *","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//     *   - empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//     *   - one word","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//     *   - multiple words","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//     *   - sentence with extra spaces","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//     *","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//     * Possible scenarios returning true:","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//     *   - matches first word in sentence","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//     *   - last word in sentence","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//     *   - middle word in sentence","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//     *   - matches multiple words","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//     *","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//     * Possible scenarios returning false:","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//     *   - query word matches part of a sentence word","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//     *   - sentence word matches part of the query word","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//     *","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        // Empty sentence","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        // Matches a partial word only","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        // Matches multiple words in sentence","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//    /*","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//public class LogicManagerTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    public Path temporaryFolder;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    private Logic logic;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        // Execute add command","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//            String expectedMessage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//            super(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private Model model;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public void execute_newPerson_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.function.Predicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//public class AddCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//          () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//    private class ModelStub implements Model {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//     * A Model stub that contains a single person.","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//        private final Person person;","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//        ModelStubWithPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//            requireNonNull(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//            this.person \u003d person;","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"//            requireNonNull(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"//            return this.person.isSamePerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"//     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"//    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"//        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"//            requireNonNull(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"//            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"//            requireNonNull(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"//            personsAdded.add(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"//            return new AddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":195}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//public class CommandResultTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        // different exit value -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    public void hashcode() {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"// * Contains helper methods for testing commands.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//public class CommandTestUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    static {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        } catch (CommandException ce) {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//            Model expectedModel) {","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"// * {@code DeleteCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//public class DeleteCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        showNoPerson(expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//    private void showNoPerson(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":109}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//public class EditCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":173}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class ExitCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void execute_exit_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":20}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//public class FindCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":83}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class HelpCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void execute_help_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":20}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//public class ListCommandTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    private Model model;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private Model expectedModel;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":39}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        // whitespace only preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        // multiple addresses - last address accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        // zero tags","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        // missing name prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        // missing phone prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        // missing email prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        // missing address prefix","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        // all prefixes missing","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        // invalid name","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//        // invalid phone","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        // invalid email","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        // invalid address","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//        // invalid tag","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//        // non-empty preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":141}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//          () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":101}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//public class ArgumentTokenizerTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"  \";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        // Verify the last value is returned","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        // Verify the number of values returned is as expected","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_oneArgument() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        // Preamble present","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        // No preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        // Only two arguments are present","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        // All three arguments are present","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        argsString \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//    public void equalsMethod() {","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//        assertEquals(aaa, aaa);","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":150}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"// * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class CommandParserTestUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        } catch (ParseException pe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//            parser.parse(userInput);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        } catch (ParseException pe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":38}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"// * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"// * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"// * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"// * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"// * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        // no index specified","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        // no field specified","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        // no index and no field specified","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        // negative index","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        // zero index","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//        // name","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//        // phone","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//        // email","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//        // address","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//        // tags","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"//                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"//                  , VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"//        // no other valid values specified","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"//        // other valid values specified","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"//                + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"//                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":212}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//public class FindCommandParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.util.HashSet;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//public class ParserUtilTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        // No whitespaces","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"//    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"//        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"//    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"//    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-03-06"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"Korochii"},"content":"//    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":186,"author":{"gitId":"Korochii"},"content":"//        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"//    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"//        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-03-06"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"//        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-03-06"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.util.Collection;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//public class AddressBookTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public void constructor() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//        @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//            return persons;","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public void constructor() {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":132}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":21}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class AddressTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    public void isValidAddress() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        // null address","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        // invalid addresses","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // valid addresses","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":36}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class EmailTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        String invalidEmail \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    public void isValidEmail() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        // null email","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        // blank email","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // missing parts","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        // invalid parts","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        // valid email","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//          \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        // One keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate predicate","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//          \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        // Multiple keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        // Only one matching keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        // Zero keywords","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        // Non-matching keyword","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":77}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class NameTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    public void isValidName() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        // null name","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        // invalid name","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        // valid name","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//public class PersonTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":91}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class PhoneTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//        String invalidPhone \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    public void isValidPhone() {","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//        // null phone number","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        // invalid phone numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        // valid phone numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//                .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-03-06"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":170}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.model.tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//public class TagTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public void isValidTagName() {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//        // null tag name","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":110}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//                : null;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        // Save in new file and read back","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import java.util.Optional;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//                : null;","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//        return userPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-06"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2022-03-06"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-06"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        /*","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//         */","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        /*","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//         */","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":68}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"// * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"// * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"// *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class AddressBookBuilder {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//    private AddressBook addressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//    public AddressBookBuilder() {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//        addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        addressBook.addPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public AddressBook build() {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        return addressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":34}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"// * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//public class Assert {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)},","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//     * to maintain consistency with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//     *","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//            Executable executable) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import java.util.stream.Stream;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"// * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//public class EditPersonDescriptorBuilder {","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    private EditPersonDescriptor descriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        descriptor.setName(person.getName());","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//     * that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    public EditPersonDescriptor build() {","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//        return descriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import java.util.HashSet;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"// * A utility class to help with building Person objects.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//public class PersonBuilder {","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    private Name name;","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    private Phone phone;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    private Email email;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    private Address address;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder() {","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//        name \u003d personToCopy.getName();","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        email \u003d personToCopy.getEmail();","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        address \u003d personToCopy.getAddress();","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder withName(String name) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//        return this;","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//    public Person build() {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"// * A utility class for Person.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//public class PersonUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        person.getTags().stream().forEach(","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        );","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//            } else {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//            }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//        return sb.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":62}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import java.util.HashMap;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"// * A class used to test serialization and deserialization","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//public class SerializableTestClass {","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//            + \"  }%n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//            + \"}\");","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    private String name;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    public static String getNameTestValue() {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        return NAME_TEST_VALUE;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        return listOfLocalDateTimes;","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//        return mapOfIntegerToString;","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//    public void setTestValues() {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        name \u003d getNameTestValue();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    public String getName() {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        return name;","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        return listOfLocalDateTimes;","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        return mapOfIntegerToString;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":72}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Files;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"// * A utility class for test cases.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//public class TestUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//            throw new RuntimeException(e);","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":55}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"// * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//public class TypicalIndexes {","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"// * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//public class TypicalPersons {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//            .withPhone(\"94351253\")","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    // Manually added","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//            .build();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//            ab.addPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//        return ab;","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":76}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"///**","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"// * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"// * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"// */","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//@DefaultProperty(\"text\")","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//public class TestFxmlObject {","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//    private String text;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//    public TestFxmlObject() {}","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//    public TestFxmlObject(String text) {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//        setText(text);","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    public String getText() {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//        return text;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    public void setText(String text) {","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//        this.text \u003d text;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":35}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"//package seedu.address.ui;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"//import java.net.URL;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"//import javafx.fxml.FXML;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"//import seedu.address.MainApp;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"//public class UiPartTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"//    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"//    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"//    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"//    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"//    @TempDir","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"//    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"//    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"//        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"//        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"//    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"//    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"//        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"//    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"//    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"//    @Test","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"//    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"//    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"//        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"//        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"//        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"//        return testFileUrl;","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"//    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"//     * UiPart used for testing.","lastModifiedDate":"2022-03-06"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"//     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"//     */","lastModifiedDate":"2022-03-06"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"//    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"//        @FXML","lastModifiedDate":"2022-03-06"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"//        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"//        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"//            super(fxmlFileUrl, root);","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"//        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"//            super(fxmlFileName, root);","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"//        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-03-06"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"//            super(fxmlFileUrl);","lastModifiedDate":"2022-03-06"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"//        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-03-06"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"//            super(fxmlFileName);","lastModifiedDate":"2022-03-06"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-03-06"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"//        }","lastModifiedDate":"2022-03-06"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"//    }","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"//","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"//}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":114}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003c?import seedu.address.ui.TestFxmlObject?\u003e--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e--\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":3,"-":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"\u003c!--            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"\u003c!--    \u003ctext\u003eHello World!\u003c/text\u003e--\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"\u003c!--\u003c/fx:root\u003e--\u003e","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":5,"-":1}}]
