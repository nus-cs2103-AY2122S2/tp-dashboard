[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W09-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"* **TAPA** allows TAs to better manage their student’s contact details and progress, especially for TAs who are teaching multiple classes/modules at the same time. It is optimised for use on CLI.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"  Usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  * Check out **[TAPA\u0027s User Guide](https://ay2122s2-cs2103t-w09-4.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"* The project is a software project for a desktop application that manages student contact details and progress.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"* It is named `Teaching Assistant\u0027s Personal Assistant` (`TAPA` for short) because it helps TAs manage their students\u0027 contacts and progress.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* For the detailed documentation of this project, see **[TAPA\u0027s Developer Guide](https://ay2122s2-cs2103t-w09-4.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"* To dive into TAPA\u0027s code, see **[TAPA\u0027s page on Github](https://github.com/AY2122S2-CS2103T-W09-4/tp)**.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":10,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"run {","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"    archiveName \u003d \u0027TAPA.jar\u0027","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Korochii":4,"brelkh":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"### Brandon Kheng","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"\u003cimg src\u003d\"images/brelkh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"[[github](https://github.com/brelkh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"[[portfolio](team/brelkh.md)]","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"* Role: Developer","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"### Benjamin Koh Wei Jie","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"\u003cimg src\u003d\"images/benjykoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"[[github](http://github.com/benjykoh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"[[portfolio](team/benjykoh.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"### Jet Tan","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"\u003cimg src\u003d\"images/medajet.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"[[github](http://github.com/medajet)]","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"[[portfolio](team/medajet.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"### Saravanan Anuja Harish","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"\u003cimg src\u003d\"images/harish-coding.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"[[github](http://github.com/harish-coding)]","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"### Terng Yan Long","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"\u003cimg src\u003d\"images/korochii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"[[github](http://github.com/korochii)]","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"[[portfolio](team/korochii.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Benjykoh":6,"Korochii":5,"brelkh":5,"medajet":5,"-":33,"Harish-coding":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"Refer to TAPA\u0027s [Quick Start Guide](https://ay2122s2-cs2103t-w09-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Benjykoh"},"content":"### Manual Command","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"Benjykoh"},"content":"#### Description","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"The `manual` command displays the format and a short description for a particular command. During the execution of the `manual` command, the user\u0027s input is being parsed in `ManualCommandParser`. After which, a new `ManualCommand` object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"Benjykoh"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"Benjykoh"},"content":"1. Upon receiving the user input, the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"Benjykoh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"Benjykoh"},"content":"3. Since the first word in the user input matches the word \"manual\", `ManualCommandParser#parse(arguments)` will be called. In this case, the arguments refer to the remaining input text after the exclusion of the command word \"manual\".","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A ParseException will be thrown if the argument is invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"Benjykoh"},"content":"4. The supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"Benjykoh"},"content":"5. The `ManualCommandParser` will create a new `ManualCommand` (using the `argument` in Step 4), which will be returned to `LogicManager`.","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"Benjykoh"},"content":"6. The `LogicManager` will call `ManualCommand#execute(Model model)`. If the `argument` is invalid, a `CommandException` will be thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"Benjykoh"},"content":"7. Lastly, the `ManualCommand` will create a new `CommandResult` which will be returned to `LogicManager`.","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"Benjykoh"},"content":"The following sequence diagram shows how the manual command works:","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"Benjykoh"},"content":"![ManualCommandSequenceDiagram](images/ManualCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"brelkh"},"content":"### Add Command","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"brelkh"},"content":"#### Description","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"brelkh"},"content":"The `add` command allows users to add a particular student into TAPA.","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"brelkh"},"content":"Since not all fields are compulsory during the execution of the `add` command,","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"brelkh"},"content":"the user\u0027s input is being parsed in `AddressBookParser`. After which, a new `AddCommand`","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"brelkh"},"content":"object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":189,"author":{"gitId":"brelkh"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"1. Upon receiving the user input,","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"brelkh"},"content":"   the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":193,"author":{"gitId":"brelkh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-23"},{"lineNumber":194,"author":{"gitId":"brelkh"},"content":"3. Since the first word in the user input matches the word \"add\", `AddCommandParser#parse(arguments)` will be called.","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"   In this case, the arguments refer to the remaining input text after the exclusion of the command word (\"add\").","lastModifiedDate":"2022-03-23"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"4. In the `AddCommandParser#parse(arguments)`, the arguments will be tokenized into a `ArgumentMultimap`,","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"   by using `ArgumentTokenizer#tokenize(String argsString, Prefix... prefixes)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"    **Note:** A ParseException will be thrown if the prefix of the compulsory fields are missing.","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":202,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"brelkh"},"content":"5. The `AddCommandParser` will pass the studentId input (found in the `ArgumentMultimap`)","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"   into `ParserUtil#parseStudentId(String studentId)`","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"brelkh"},"content":"   **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"brelkh"},"content":"6. In `ParserUtil#parseStudentId(String studentId)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"brelkh"},"content":"7. `StudentId#isValidId(String studentId)` will then be invoked,","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"brelkh"},"content":"   which checks if the trimmed argument is valid (according to the Regex supplied).","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"brelkh"},"content":"   If the argument is valid, a new `StudentId` object will be created and returned to the `AddCommandParser`.","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"   If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"8. Step 5 to 7 will be repeated for the other compulsory fields (name, moduleCode)","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"   and optional fields (phone, telegramHandle, email), by using their respective parse methods in `ParserUtil`.","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":218,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"![ParserUtilClassDiagram](images/ParserUtilClassDiagram.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":221,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"brelkh"},"content":"   **Note:** If an optional field is not supplied (i.e. not found in the ArgumentMultimap), ","lastModifiedDate":"2022-03-23"},{"lineNumber":224,"author":{"gitId":"brelkh"},"content":"   the extra parsing process in steps 5 to 7 will be skipped. ","lastModifiedDate":"2022-03-23"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"   Instead, the respective object will be created and initialized to `null`.","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"9. The `AddCommandParser` will create a new `Person`.","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"brelkh"},"content":"10. A new `AddCommand` will be created (using the `Person` in Step 9) and returned to the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"brelkh"},"content":"11. The `LogicManager` will then call `AddCommand#execute(Model model)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":231,"author":{"gitId":"brelkh"},"content":"12. In the `AddCommand`, the `model#hasPerson(Person person)` will be invoked. If the `Person` already exist","lastModifiedDate":"2022-03-23"},{"lineNumber":232,"author":{"gitId":"brelkh"},"content":"    in TAPA, a `CommandException` will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":234,"author":{"gitId":"brelkh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":235,"author":{"gitId":"brelkh"},"content":"    **Note:** In TAPA, two Person are equal only if they have the same studentId.","lastModifiedDate":"2022-03-23"},{"lineNumber":236,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-23"},{"lineNumber":237,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"brelkh"},"content":"13. The `AddCommand` will call `model.addPerson(Person person)`, which adds the `Person` into the `AddressBook`.","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"brelkh"},"content":"14. Lastly, the `AddCommand` will create a new `CommandResult`, which will be returned to `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"brelkh"},"content":"The following sequence diagram shows how the add operation works:","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"brelkh"},"content":"![AddCommandSequenceDiagram-1](images/AddCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"brelkh"},"content":"![AddCommandSequenceDiagram-2](images/AddCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"brelkh"},"content":"### Task Command","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"brelkh"},"content":"#### Description","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"brelkh"},"content":"The `task` command allows users to check and view all the tasks belonging to a particular student.","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"brelkh"},"content":"During the execution of the `task` command, the user\u0027s input is being parsed in `AddressBookParser`.","lastModifiedDate":"2022-03-23"},{"lineNumber":253,"author":{"gitId":"brelkh"},"content":"After which, a new `TaskCommand` object will be created, and is subsequently executed by the LogicManager.","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":255,"author":{"gitId":"brelkh"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":256,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":257,"author":{"gitId":"brelkh"},"content":"1. Upon receiving the user input,","lastModifiedDate":"2022-03-23"},{"lineNumber":258,"author":{"gitId":"brelkh"},"content":"   the `LogicManager` starts to parse the given input text using `AdddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":259,"author":{"gitId":"brelkh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-23"},{"lineNumber":260,"author":{"gitId":"brelkh"},"content":"3. Since the first word in the user input matches the word \"task\", `TaskCommandParser#parse(arguments)` will be called.","lastModifiedDate":"2022-03-23"},{"lineNumber":261,"author":{"gitId":"brelkh"},"content":"   In this case, the arguments refer to the remaining input text after the exclusion of the command word (\"task\").","lastModifiedDate":"2022-03-23"},{"lineNumber":262,"author":{"gitId":"brelkh"},"content":"4. In the `TaskCommandParser#parse(arguments)`, the arguments will be tokenized into a `ArgumentMultimap`,","lastModifiedDate":"2022-03-23"},{"lineNumber":263,"author":{"gitId":"brelkh"},"content":"   by using `ArgumentTokenizer#tokenize(String argsString, Prefex... prefixes)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":264,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":266,"author":{"gitId":"brelkh"},"content":"    **Note:** A ParseException will be thrown if the prefix of `StudentId` is missing, as it is a compulsory field.","lastModifiedDate":"2022-03-23"},{"lineNumber":267,"author":{"gitId":"brelkh"},"content":"   \u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"brelkh"},"content":"5. The `TaskCommandParser` will pass the studentId input (found in the `ArgumentMultimap`)","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"brelkh"},"content":"   into `ParserUtil#parseStudentId(String studentId).`","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":272,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"brelkh"},"content":"   **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"brelkh"},"content":"   \u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"brelkh"},"content":"6. In `ParserUtil#parseStudentId(String studentId)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"brelkh"},"content":"7. `StudentId#isValidId(String studentId)` will then be invoked,","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"brelkh"},"content":"   which checks if the trimmed argument is valid (according to the Regex supplied).","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"brelkh"},"content":"   If the argument is valid, a new StudentId object will be created and returned to the `TaskCommandParser`.","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"brelkh"},"content":"   If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"brelkh"},"content":"8. A new `TaskCommand` will be created (using the `StudentId` object created in Step 7) and returned to the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"brelkh"},"content":"9. The `LogicManager` will then call `TaskCommand#execute(Model model)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"brelkh"},"content":"10. In the `TaskCommand`, a `StudentIdContainsKeywordsPredicate` is created using the studentId.","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"brelkh"},"content":"11. The `model#updateFilteredPersonList(predicate)` is then invoked such that the list is filtered by the predicate created.","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"brelkh"},"content":"12. The `model#getFilteredPersonList()` is then called.","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"brelkh"},"content":"    The size of the resulting list determines if there is any `Person` that corresponds to the specified `studentId`.","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"brelkh"},"content":"    If the size is equals to 0, a `CommandException` will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":288,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":289,"author":{"gitId":"brelkh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-23"},{"lineNumber":290,"author":{"gitId":"brelkh"},"content":"    **Note:** The studentId is a UNIQUE field in TAPA.","lastModifiedDate":"2022-03-23"},{"lineNumber":291,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":292,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":293,"author":{"gitId":"brelkh"},"content":"13. The `Person` object in the filtered list is then extracted out using `model#getFilteredPersonList().get(0)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":294,"author":{"gitId":"brelkh"},"content":"14. The `TaskList` belong to this `Person` can then be retrieved using `Person#getTaskList()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"brelkh"},"content":"15. If this `TaskList` is null or empty, a `CommandException` will be thrown.","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"brelkh"},"content":"16. The `TaskCommand` iterates through this `TaskList`, and categorises the tasks into two new `TaskList`","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"brelkh"},"content":"    according to the task\u0027s completion status.","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"brelkh"},"content":"17. Lastly, the `TaskCommand` will create a new `CommandResult` by using the `TaskList` in Step 16.","lastModifiedDate":"2022-03-23"},{"lineNumber":299,"author":{"gitId":"brelkh"},"content":"    This `CommandResult` will then be returned to `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":300,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":301,"author":{"gitId":"brelkh"},"content":"![TaskCommandSequenceDiagram-1](images/TaskCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":302,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":303,"author":{"gitId":"brelkh"},"content":"![TaskCommandSequenceDiagram-2](images/TaskCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":304,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":305,"author":{"gitId":"brelkh"},"content":"![TaskCommandSequenceDiagram-3](images/TaskCommandSequenceDiagram-3.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":307,"author":{"gitId":"brelkh"},"content":"### Find Command","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"brelkh"},"content":"#### Description","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"brelkh"},"content":"The `find` command allows users to add a particular student into TAPA.","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"brelkh"},"content":"Since not all fields are compulsory during the execution of the `find` command,","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"brelkh"},"content":"the user\u0027s input is being parsed in `AddressBookParser`. After which, a new `FindCommand`","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"brelkh"},"content":"object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"brelkh"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"brelkh"},"content":"1. Upon receiving the user input,","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"brelkh"},"content":"   the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"brelkh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"brelkh"},"content":"3. Since the first word in the user input matches the word \"find\", `FindCommandParser#parse(arguments)` will be called.","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"brelkh"},"content":"   In this case, the arguments refer to the remaining input text after the exclusion of the command word (\"find\").","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"brelkh"},"content":"4. In the `FindCommandParser#parse(arguments)`, the arguments will be tokenized into a `ArgumentMultimap`,","lastModifiedDate":"2022-03-24"},{"lineNumber":324,"author":{"gitId":"brelkh"},"content":"   by using `ArgumentTokenizer#tokenize(String argsString, Prefix... prefixes)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":325,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":326,"author":{"gitId":"brelkh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-24"},{"lineNumber":327,"author":{"gitId":"brelkh"},"content":"    **Note:** A ParseException will be thrown if the prefix of the compulsory fields are missing.","lastModifiedDate":"2022-03-24"},{"lineNumber":328,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-24"},{"lineNumber":329,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":330,"author":{"gitId":"brelkh"},"content":"5. The `FindCommandParser` will pass the studentId input (found in the `ArgumentMultimap`)","lastModifiedDate":"2022-03-24"},{"lineNumber":331,"author":{"gitId":"brelkh"},"content":"   into `ParserUtil#parseStudentId(String studentId)`","lastModifiedDate":"2022-03-24"},{"lineNumber":332,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":333,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-24"},{"lineNumber":334,"author":{"gitId":"brelkh"},"content":"   **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":335,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-24"},{"lineNumber":336,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":337,"author":{"gitId":"brelkh"},"content":"6. In `ParserUtil#parseStudentId(String studentId)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":338,"author":{"gitId":"brelkh"},"content":"7. `StudentId#isValidId(String studentId)` will then be invoked,","lastModifiedDate":"2022-03-24"},{"lineNumber":339,"author":{"gitId":"brelkh"},"content":"   which checks if the trimmed argument is valid (according to the Regex supplied).","lastModifiedDate":"2022-03-24"},{"lineNumber":340,"author":{"gitId":"brelkh"},"content":"   If the argument is valid, a new `StudentId` object will be created and returned to the `AddCommandParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":341,"author":{"gitId":"brelkh"},"content":"   If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-24"},{"lineNumber":342,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":343,"author":{"gitId":"brelkh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-24"},{"lineNumber":344,"author":{"gitId":"brelkh"},"content":"   **Note:** The above description for Steps 5 to 7 is specifically for when studentId is used as the input field.","lastModifiedDate":"2022-03-24"},{"lineNumber":345,"author":{"gitId":"brelkh"},"content":"   Depending on the type of input field used (studentId, name, moduleCode), Steps 5 to 7 will ","lastModifiedDate":"2022-03-24"},{"lineNumber":346,"author":{"gitId":"brelkh"},"content":"   be executed using the parse methods in `ParserUtil` that are specific to the field.","lastModifiedDate":"2022-03-24"},{"lineNumber":347,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e ","lastModifiedDate":"2022-03-24"},{"lineNumber":348,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":349,"author":{"gitId":"brelkh"},"content":"![ParserUtilClassDiagram](images/ParserUtilClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":350,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":351,"author":{"gitId":"brelkh"},"content":"8. The `FindCommandParser` will create a new `Predicate`.","lastModifiedDate":"2022-03-24"},{"lineNumber":352,"author":{"gitId":"brelkh"},"content":"9. A new `FindCommand` will be created (using the `Predicate` in Step 8) and returned to the `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":353,"author":{"gitId":"brelkh"},"content":"10. The `LogicManager` will then call `FindCommand#execute(Model model)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":354,"author":{"gitId":"brelkh"},"content":"11. In the `FindCommand`, the `model#updateFilteredPersonList(Predicate\u003cPerson\u003e predicate)` will be invoked, which","lastModifiedDate":"2022-03-24"},{"lineNumber":355,"author":{"gitId":"brelkh"},"content":"    updates the filter of the person list to filter by the given `Predicate`.","lastModifiedDate":"2022-03-24"},{"lineNumber":356,"author":{"gitId":"brelkh"},"content":"12. Lastly, the `FindCommand` will create a new `CommandResult`, which will be returned to `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":357,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":358,"author":{"gitId":"brelkh"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2022-03-24"},{"lineNumber":359,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"brelkh"},"content":"![FindCommandSequenceDiagram-1](images/FindCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"brelkh"},"content":"![FindCommandSequenceDiagram-2](images/FindCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"Benjykoh"},"content":"### Mark Command","lastModifiedDate":"2022-03-21"},{"lineNumber":365,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":366,"author":{"gitId":"Benjykoh"},"content":"#### Description","lastModifiedDate":"2022-03-21"},{"lineNumber":367,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":368,"author":{"gitId":"Korochii"},"content":"The `mark` command marks a specific undone task as done for a particular student. During the execution of the `mark` command, the user\u0027s input is being parsed in `AddressBookParser`. After which, a new `MarkCommand` object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":369,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":370,"author":{"gitId":"Benjykoh"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":371,"author":{"gitId":"Benjykoh"},"content":"1. Upon receiving the user input, the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":372,"author":{"gitId":"Benjykoh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-21"},{"lineNumber":373,"author":{"gitId":"Benjykoh"},"content":"3. Since the first word in the user input matches the word \"mark\", `MarkCommandParser#parse(arguments)` will be called. In this case, the arguments refer to the remaining input text after the exclusion of the command word \"mark\".","lastModifiedDate":"2022-03-22"},{"lineNumber":374,"author":{"gitId":"Benjykoh"},"content":"4. In the `AddressBookParser#parseCommand(arguments)`, the arguments will be tokenized into a `ArgumentMultiMap`, by `using ArgumentTokenizer#tokenize(String argsString, Prefix... prefixes)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":375,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":376,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A ParseException will be thrown if the prefix of the compulsory fields are missing or if the arguments are invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":377,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":378,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":379,"author":{"gitId":"Benjykoh"},"content":"5. The `MarkCommandParser` will pass the studentId input (found in the `ArgumentMultiMap`) into `ParserUtil#parseStudentId(String studentId)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":380,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":381,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-22"},{"lineNumber":382,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":383,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":384,"author":{"gitId":"Benjykoh"},"content":"6. In `ParserUtil#parseStudentId(String studentId)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":385,"author":{"gitId":"Benjykoh"},"content":"7. `StudentId#isValidId(String studentId)` will then be invoked, which checks if the trimmed argument is valid (according to the Regex supplied). If the argument is valid, a new `StudentId` object will be created and returned to the `MarkCommandParser`. If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":386,"author":{"gitId":"Benjykoh"},"content":"8. The `MarkCommandParser` will pass the index input (found in the `ArgumentMultiMap`) into `ParserUtil#parseIndex(Index index)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":387,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":388,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-22"},{"lineNumber":389,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":390,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":391,"author":{"gitId":"Benjykoh"},"content":"9. In `ParserUtil#parseStudentId(Index index)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":392,"author":{"gitId":"Benjykoh"},"content":"10. `Index#isValidId(Index index)` will then be invoked, which checks if the trimmed argument is valid (according to the Regex supplied). If the argument is valid, a new `Index` object will be created and returned to the `MarkCommandParser`. If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":393,"author":{"gitId":"Benjykoh"},"content":"11. The `MarkCommandParser` will create a new `MarkCommand` object using the `StudentId` and `Index` created in Step 7 and 10 respectively.","lastModifiedDate":"2022-03-22"},{"lineNumber":394,"author":{"gitId":"Benjykoh"},"content":"12. The `LogicManager` will then call `MarkCommand#execute(Model model)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":395,"author":{"gitId":"Benjykoh"},"content":"13. The `MarkCommand` will call `model#markTaskOfPerson(Student studentId, Index index)`, which marks the task (corresponding to the supplied index) of the given student as done.","lastModifiedDate":"2022-03-22"},{"lineNumber":396,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":397,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A CommandException will be thrown if the supplied index or studentId is invalid, or if the task is already marked as completed.","lastModifiedDate":"2022-03-22"},{"lineNumber":398,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":399,"author":{"gitId":"Benjykoh"},"content":"    ","lastModifiedDate":"2022-03-22"},{"lineNumber":400,"author":{"gitId":"Benjykoh"},"content":"14. Lastly, the `MarkCommand` will create a new `CommandResult`, which will be returned to `LogicManager`","lastModifiedDate":"2022-03-22"},{"lineNumber":401,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":402,"author":{"gitId":"Benjykoh"},"content":"The following sequence diagrams shows how the mark command works:","lastModifiedDate":"2022-03-22"},{"lineNumber":403,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":404,"author":{"gitId":"Benjykoh"},"content":"![MarkCommandSequenceDiagram](images/MarkCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":405,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":406,"author":{"gitId":"Benjykoh"},"content":"![MarkCommandSequenceDiagram](images/MarkCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":407,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":408,"author":{"gitId":"Benjykoh"},"content":"### Unmark Command","lastModifiedDate":"2022-03-21"},{"lineNumber":409,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":410,"author":{"gitId":"Benjykoh"},"content":"#### Description","lastModifiedDate":"2022-03-21"},{"lineNumber":411,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":412,"author":{"gitId":"Korochii"},"content":"The `unmark` command marks a specific done task as undone for a particular student. During the execution of the `unmark` command, the user\u0027s input is being parsed in `AddressBookParser`. After which, a new `UnmarkCommand` object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":413,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":414,"author":{"gitId":"Benjykoh"},"content":"#### Implementation","lastModifiedDate":"2022-03-21"},{"lineNumber":415,"author":{"gitId":"Benjykoh"},"content":"1. Upon receiving the user input, the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":416,"author":{"gitId":"Benjykoh"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-21"},{"lineNumber":417,"author":{"gitId":"Benjykoh"},"content":"3. Since the first word in the user input matches the word \"unmark\", `UnmarkCommandParser#parse(arguments)` will be called. In this case, the arguments refer to the remaining input text after the exclusion of the command word \"unmark\".","lastModifiedDate":"2022-03-22"},{"lineNumber":418,"author":{"gitId":"Benjykoh"},"content":"4. In the `AddressBookParser#parseCommand(arguments)`, the arguments will be tokenized into a `ArgumentMultiMap`, by `using ArgumentTokenizer#tokenize(String argsString, Prefix... prefixes)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":419,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":420,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A ParseException will be thrown if the prefix of the compulsory fields are missing or if the arguments are invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":421,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":422,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":423,"author":{"gitId":"Benjykoh"},"content":"5. The `UnmarkCommandParser` will pass the studentId input (found in the `ArgumentMultiMap`) into `ParserUtil#parseStudentId(String studentId)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":424,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":425,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-22"},{"lineNumber":426,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":427,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":428,"author":{"gitId":"Benjykoh"},"content":"6. In `ParserUtil#parseStudentId(String studentId)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":429,"author":{"gitId":"Benjykoh"},"content":"7. `StudentId#isValidId(String studentId)` will then be invoked, which checks if the trimmed argument is valid (according to the Regex supplied). If the argument is valid, a new `StudentId` object will be created and returned to the `UnmarkCommandParser`. If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":430,"author":{"gitId":"Benjykoh"},"content":"8. The `UnmarkCommandParser` will pass the index input (found in the `ArgumentMultiMap`) into `ParserUtil#parseIndex(Index index)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":431,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":432,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-22"},{"lineNumber":433,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":434,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":435,"author":{"gitId":"Benjykoh"},"content":"9. In `ParserUtil#parseStudentId(Index index)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-22"},{"lineNumber":436,"author":{"gitId":"Benjykoh"},"content":"10. `Index#isValidId(Index index)` will then be invoked, which checks if the trimmed argument is valid (according to the Regex supplied). If the argument is valid, a new `Index` object will be created and returned to the `UnmarkCommandParser`. If the argument is not valid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-22"},{"lineNumber":437,"author":{"gitId":"Benjykoh"},"content":"11. The `UnmarkCommandParser` will create a new `UnmarkCommand` object using the `StudentId` and `Index` created in Step 7 and 10 respectively.","lastModifiedDate":"2022-03-22"},{"lineNumber":438,"author":{"gitId":"Benjykoh"},"content":"12. The `LogicManager` will then call `UnmarkCommand#execute(Model model)`.","lastModifiedDate":"2022-03-22"},{"lineNumber":439,"author":{"gitId":"Benjykoh"},"content":"13. The `UnmarkCommand` will call `model#unmarkTaskOfPerson(Student studentId, Index index)`, which marks the task (corresponding to the supplied index) of the given student as undone.","lastModifiedDate":"2022-03-22"},{"lineNumber":440,"author":{"gitId":"Benjykoh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-22"},{"lineNumber":441,"author":{"gitId":"Benjykoh"},"content":"    **Note:** A CommandException will be thrown if the supplied index or studentId is invalid, or if the task is already marked as not complete.","lastModifiedDate":"2022-03-22"},{"lineNumber":442,"author":{"gitId":"Benjykoh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":443,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":444,"author":{"gitId":"Benjykoh"},"content":"14. Lastly, the `UnmarkCommand` will create a new `CommandResult`, which will be returned to `LogicManager`","lastModifiedDate":"2022-03-22"},{"lineNumber":445,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":446,"author":{"gitId":"Benjykoh"},"content":"The following sequence diagrams shows how the unmark command works:","lastModifiedDate":"2022-03-22"},{"lineNumber":447,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":448,"author":{"gitId":"Benjykoh"},"content":"![UnmarkCommandSequenceDiagram](images/UnmarkCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":449,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":450,"author":{"gitId":"Benjykoh"},"content":"![UnmarkCommandSequenceDiagram](images/UnmarkCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":451,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":452,"author":{"gitId":"brelkh"},"content":"### Clear Command","lastModifiedDate":"2022-03-23"},{"lineNumber":453,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":454,"author":{"gitId":"brelkh"},"content":"#### Description","lastModifiedDate":"2022-03-23"},{"lineNumber":455,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":456,"author":{"gitId":"brelkh"},"content":"The `clear` command deletes all students currently stored in TAPA. During the execution of the `clear` command, a new `ClearCommand` object will be created, and is executed by the `LogicManager`. The `MainWindow` changes the `commandBox` to only recognise a followup `confirm` command. If the user executes a `confirm` command, a new `ConfirmClearCommand` object is created and executed by the `LogicManager`. Subsequently, `ModelManager` clears the students currently stored in TAPA.","lastModifiedDate":"2022-03-23"},{"lineNumber":457,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":458,"author":{"gitId":"brelkh"},"content":"#### Implementation","lastModifiedDate":"2022-03-23"},{"lineNumber":459,"author":{"gitId":"brelkh"},"content":"1. Upon receiving the user input, the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-23"},{"lineNumber":460,"author":{"gitId":"brelkh"},"content":"2. A new `ClearCommand` is created by `AddressBookParser` and returned to the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":461,"author":{"gitId":"brelkh"},"content":"3. The `LogicManager` will then call `ClearCommand#execute(Model model)`, which returns a new `CommandResult` object (with its `isClearRequest` field set to `true`) to the `LogicManager`","lastModifiedDate":"2022-03-23"},{"lineNumber":462,"author":{"gitId":"brelkh"},"content":"4. The `CommandResult` (with its `isClearRequest` field set to `true`) is then returned to the `MainWindow`.","lastModifiedDate":"2022-03-23"},{"lineNumber":463,"author":{"gitId":"brelkh"},"content":"5. To confirm the user\u0027s decision to clear TAPA, the `MainWindow` executes `MainWindow#handleClearRequest()` which updates the `CommandBox` to only recognise a `confirm` input for the next command.","lastModifiedDate":"2022-03-23"},{"lineNumber":464,"author":{"gitId":"brelkh"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"brelkh"},"content":"    **Note:** A CommandException will be thrown if the user inputs anything other than `confirm` for the next input. The `CommandBox` then returns to accepting all commands as described in the user guide.","lastModifiedDate":"2022-03-23"},{"lineNumber":466,"author":{"gitId":"brelkh"},"content":"    \u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":467,"author":{"gitId":"brelkh"},"content":"6. If the user inputs `confirm`, `LogicManager` parses the given input text using `AddressBookParser#parseCommand()` and a new `ConfirmClearCommand` is created and returned to the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":468,"author":{"gitId":"brelkh"},"content":"7. The `LogicManager` will then call `ConfirmClearCommand#execute(Model model)`.","lastModifiedDate":"2022-03-23"},{"lineNumber":469,"author":{"gitId":"brelkh"},"content":"8. In the `ConfirmClearCommand`, `model.setAddressBook(new AddressBook())` is invoked, resetting the current list of students stored in TAPA to an empty list.","lastModifiedDate":"2022-03-23"},{"lineNumber":470,"author":{"gitId":"brelkh"},"content":"9. Lastly, the `ConfirmClearCommand` will create a new `CommandResult`, which will be returned to the `LogicManager`.","lastModifiedDate":"2022-03-23"},{"lineNumber":471,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":472,"author":{"gitId":"Korochii"},"content":"### Archive Command","lastModifiedDate":"2022-03-24"},{"lineNumber":473,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":474,"author":{"gitId":"Korochii"},"content":"#### Description","lastModifiedDate":"2022-03-24"},{"lineNumber":475,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":476,"author":{"gitId":"Korochii"},"content":"The `archive` command allows users to save the current state of the data in TAPA,","lastModifiedDate":"2022-03-24"},{"lineNumber":477,"author":{"gitId":"Korochii"},"content":"into a separate `.json` file. This newly created file can be found in the same","lastModifiedDate":"2022-03-24"},{"lineNumber":478,"author":{"gitId":"Korochii"},"content":"folder as the original data file (in `/data`). In addition, it will have a file name","lastModifiedDate":"2022-03-24"},{"lineNumber":479,"author":{"gitId":"Korochii"},"content":"that corresponds to the date and time (up to 6 significant figures) in which the","lastModifiedDate":"2022-03-24"},{"lineNumber":480,"author":{"gitId":"Korochii"},"content":"command is being called. This ensures that files created will have a unique file name","lastModifiedDate":"2022-03-24"},{"lineNumber":481,"author":{"gitId":"Korochii"},"content":"in most cases.","lastModifiedDate":"2022-03-24"},{"lineNumber":482,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":483,"author":{"gitId":"Korochii"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":484,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":485,"author":{"gitId":"Korochii"},"content":"1. Upon receiving the user input,","lastModifiedDate":"2022-03-24"},{"lineNumber":486,"author":{"gitId":"Korochii"},"content":"   the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":487,"author":{"gitId":"Korochii"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-24"},{"lineNumber":488,"author":{"gitId":"Korochii"},"content":"3. Since the first word in the user input matches the word \"archive\", `ArchiveCommand()` will be called.","lastModifiedDate":"2022-03-24"},{"lineNumber":489,"author":{"gitId":"Korochii"},"content":"4. As `ArchiveCommand` utilizes the default constructor, it simply returns a new `ArchiveCommand` object to","lastModifiedDate":"2022-03-24"},{"lineNumber":490,"author":{"gitId":"Korochii"},"content":"   the `AddressBookParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":491,"author":{"gitId":"Korochii"},"content":"5. This `ArchiveCommand` object will then be subsequently returned to the `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":492,"author":{"gitId":"Korochii"},"content":"6. The `LogicManager` calls `ArchiveCommand#execute(Model model)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":493,"author":{"gitId":"Korochii"},"content":"7. In `ArchiveCommand`, the `Path` to the existing `AddressBook` is extracted, ","lastModifiedDate":"2022-03-24"},{"lineNumber":494,"author":{"gitId":"Korochii"},"content":"   by calling `model#getAddressBookFilePath()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":495,"author":{"gitId":"Korochii"},"content":"8. Similarly, the existing `AddressBook` is also extracted, by calling `model#getAddressBook()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":496,"author":{"gitId":"Korochii"},"content":"9. With the help of the `DateTimeFormatter` and `LocalDateTime` in the Java 8 Date Time API, ","lastModifiedDate":"2022-03-24"},{"lineNumber":497,"author":{"gitId":"Korochii"},"content":"   the file name and path of the new `.json` data file can be obtained.","lastModifiedDate":"2022-03-24"},{"lineNumber":498,"author":{"gitId":"Korochii"},"content":"10. The new `.json` data file can now be created, using `FileUtil.createIfMissing(newPath)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":499,"author":{"gitId":"Korochii"},"content":"    A `CommandException` will be thrown if `ArchiveCommand` fails to create this file.","lastModifiedDate":"2022-03-24"},{"lineNumber":500,"author":{"gitId":"Korochii"},"content":"11. The current copy of the `AddressBook` can be \"copied\" into a new `JsonSerializableAddressBook`,","lastModifiedDate":"2022-03-24"},{"lineNumber":501,"author":{"gitId":"Korochii"},"content":"    which will be used to populate the new `.json` data file that was created ","lastModifiedDate":"2022-03-24"},{"lineNumber":502,"author":{"gitId":"Korochii"},"content":"    (by utilizing `JsonUtil#saveJsonFile(T JsonFile, Path path)`).","lastModifiedDate":"2022-03-24"},{"lineNumber":503,"author":{"gitId":"Korochii"},"content":"    A `CommandException` will be thrown if `ArchiveCommand` fails to populate the data file.","lastModifiedDate":"2022-03-24"},{"lineNumber":504,"author":{"gitId":"Korochii"},"content":"12. Lastly, the `ArchiveCommand` will create a new `CommandResult`, which will then be returned to `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":505,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":506,"author":{"gitId":"Korochii"},"content":"![ArchiveCommandSequenceDiagram](images/ArchiveCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":507,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":508,"author":{"gitId":"Korochii"},"content":"### Progress Command","lastModifiedDate":"2022-03-24"},{"lineNumber":509,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":510,"author":{"gitId":"Korochii"},"content":"#### Description","lastModifiedDate":"2022-03-24"},{"lineNumber":511,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":512,"author":{"gitId":"Korochii"},"content":"The `progress` command allows users to view the completion status of all students who are taking a particular","lastModifiedDate":"2022-03-24"},{"lineNumber":513,"author":{"gitId":"Korochii"},"content":"module and are assigned to a particular task.","lastModifiedDate":"2022-03-24"},{"lineNumber":514,"author":{"gitId":"Korochii"},"content":"During the execution of the `progress` command, the user\u0027s input is being parsed in `AddressBookParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":515,"author":{"gitId":"Korochii"},"content":"After which, a new `ProgressCommand` object will be created, and is subsequently executed by the `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":516,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":517,"author":{"gitId":"Korochii"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":518,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":519,"author":{"gitId":"Korochii"},"content":"1. Upon receiving the user input,","lastModifiedDate":"2022-03-24"},{"lineNumber":520,"author":{"gitId":"Korochii"},"content":"   the `LogicManager` starts to parse the given input text using `AddressBookParser#parseCommand()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":521,"author":{"gitId":"Korochii"},"content":"2. The `AddressBookParser` invokes the respective `Parser` based on the first word of the input text.","lastModifiedDate":"2022-03-24"},{"lineNumber":522,"author":{"gitId":"Korochii"},"content":"3. Since the first word in the user input matches the word \"progress\", ","lastModifiedDate":"2022-03-24"},{"lineNumber":523,"author":{"gitId":"Korochii"},"content":"   `ProgressCommandParser#parse(arguments)` will be called.","lastModifiedDate":"2022-03-24"},{"lineNumber":524,"author":{"gitId":"Korochii"},"content":"   In this case, the arguments refer to the remaining input text after the exclusion of the command word (\"progress\").","lastModifiedDate":"2022-03-24"},{"lineNumber":525,"author":{"gitId":"Korochii"},"content":"4. In the `ProgressCommandParser#parse(arguments)`, the arguments will be tokenized into a `ArgumentMultimap`,","lastModifiedDate":"2022-03-24"},{"lineNumber":526,"author":{"gitId":"Korochii"},"content":"   by using `ArgumentTokenizer#tokenize(String argsString, Prefix... prefixes)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":527,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":528,"author":{"gitId":"Korochii"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-24"},{"lineNumber":529,"author":{"gitId":"Korochii"},"content":"      **Note:** A ParseException will be thrown if the prefix of the compulsory fields are missing.","lastModifiedDate":"2022-03-24"},{"lineNumber":530,"author":{"gitId":"Korochii"},"content":"   \u003c/div\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":531,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":532,"author":{"gitId":"Korochii"},"content":"5. The `ProgressCommandParser` will pass the moduleCode input (found in the `ArgumentMultimap`)","lastModifiedDate":"2022-03-24"},{"lineNumber":533,"author":{"gitId":"Korochii"},"content":"   into `ParserUtil#parseModuleCode(String moduleCode)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":534,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":535,"author":{"gitId":"Korochii"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2022-03-24"},{"lineNumber":536,"author":{"gitId":"Korochii"},"content":"     **Note:** A NullException will be thrown if the supplied string argument is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":537,"author":{"gitId":"Korochii"},"content":"   \u003c/div\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":538,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":539,"author":{"gitId":"Korochii"},"content":"6. In `ParserUtil#parseModuleCode(String moduleCode)`, the supplied argument will be trimmed using `String#trim()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":540,"author":{"gitId":"Korochii"},"content":"7. `ModuleCode#isValidModuleCode(String moduleCode)` will then be invoked, which checks if the trimmed argument is","lastModifiedDate":"2022-03-24"},{"lineNumber":541,"author":{"gitId":"Korochii"},"content":"   valid (according to the Regex supplied).","lastModifiedDate":"2022-03-24"},{"lineNumber":542,"author":{"gitId":"Korochii"},"content":"   If the argument is valid, a new `ModuleCode` object will be created and returned to the `ProgressCommandParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":543,"author":{"gitId":"Korochii"},"content":"   If the argument is invalid, a `ParseException` will be thrown.","lastModifiedDate":"2022-03-24"},{"lineNumber":544,"author":{"gitId":"Korochii"},"content":"8. Steps 5 to 7 will be repeated for the \"task name\" field, by using its respective parse methods in `ParserUtil`.","lastModifiedDate":"2022-03-24"},{"lineNumber":545,"author":{"gitId":"Korochii"},"content":"9. A new `ProgressCommand` will be created (using the parsed `ModuleCode` and `Task` objects) ","lastModifiedDate":"2022-03-24"},{"lineNumber":546,"author":{"gitId":"Korochii"},"content":"   and returned to the `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":547,"author":{"gitId":"Korochii"},"content":"10. The `LogicManager` will then call `ProgressCommand#execute(Model model)`.","lastModifiedDate":"2022-03-24"},{"lineNumber":548,"author":{"gitId":"Korochii"},"content":"11. In the `ProgressCommand`, the `model#checkProgress(ModuleCode moduleCode, Task task)` will be invoked.","lastModifiedDate":"2022-03-24"},{"lineNumber":549,"author":{"gitId":"Korochii"},"content":"    This method iterates through each `Person` object. If the `Person` has the same `ModuleCode` and `Task`","lastModifiedDate":"2022-03-24"},{"lineNumber":550,"author":{"gitId":"Korochii"},"content":"    assigned to him/her, the `Person` object and the completion status ","lastModifiedDate":"2022-03-24"},{"lineNumber":551,"author":{"gitId":"Korochii"},"content":"    (either completed/incomplete, denoted by a boolean value) will be added to a `LinkedHashMap\u003cPerson, boolean\u003e`.","lastModifiedDate":"2022-03-24"},{"lineNumber":552,"author":{"gitId":"Korochii"},"content":"12. If the resulting `LinkedHashMap` is null or empty, a `CommandException` will be thrown.","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"Korochii"},"content":"13. This `LinkedHashMap` will be used to generate the output string.","lastModifiedDate":"2022-03-24"},{"lineNumber":554,"author":{"gitId":"Korochii"},"content":"14. The output string will be used in creating a new `CommandResult` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"Korochii"},"content":"15. Lastly, the `CommandResult` object will be returned to `LogicManager`.","lastModifiedDate":"2022-03-24"},{"lineNumber":556,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":557,"author":{"gitId":"Korochii"},"content":"![ProgressCommandSequenceDiagram-1](images/ProgressCommandSequenceDiagram-1.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":558,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":559,"author":{"gitId":"Korochii"},"content":"![ProgressCommandSequenceDiagram-2](images/ProgressCommandSequenceDiagram-2.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":561,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":650,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":651,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":652,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":653,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"Korochii"},"content":"**Target user profile**: Teaching Assistants who","lastModifiedDate":"2022-02-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"Korochii"},"content":"* has a need to manage a significant number of students (especially across multiple modules)","lastModifiedDate":"2022-02-23"},{"lineNumber":664,"author":{"gitId":"Korochii"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-02-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":667,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"Korochii"},"content":"**Value proposition**:  better manage the student’s contact and progress,","lastModifiedDate":"2022-02-23"},{"lineNumber":670,"author":{"gitId":"Korochii"},"content":"especially for those who are teaching multiple classes/modules at the same time.","lastModifiedDate":"2022-02-23"},{"lineNumber":671,"author":{"gitId":"Korochii"},"content":"It is optimised for use on CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":672,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                | I want to …​                                                                        | So that I can…​                                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"Benjykoh"},"content":"| -------- | --------------------------------------------------------- | -------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-19"},{"lineNumber":681,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | add students to TAPA                                                                   | know which students are taking my classes                                                                 |","lastModifiedDate":"2022-02-23"},{"lineNumber":682,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | delete a specific student from TAPA                                                    | remove student who has withdrawn from the module during the semester                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":683,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | list students alphabetically                                                           | print students in a list as their names would appear on the official class list                           |","lastModifiedDate":"2022-02-23"},{"lineNumber":684,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | tag students                                                                           | know what modules they are taking                                                                         |","lastModifiedDate":"2022-03-18"},{"lineNumber":685,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | filter students by their tags                                                          | view the progress of students in each separate tag (different class/module)                               |","lastModifiedDate":"2022-03-18"},{"lineNumber":686,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | define my own tasks for each module                                                    | customise the tasks to each module                                                                        |","lastModifiedDate":"2022-03-18"},{"lineNumber":687,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | undo the most recent command entered                                                   | revert any unwanted changes (such as deleting student) without much trouble                               |","lastModifiedDate":"2022-03-18"},{"lineNumber":688,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | delete a task given to a student                                                       | remove tasks that has incorrect information or has been assigned wrongly                                  |","lastModifiedDate":"2022-03-18"},{"lineNumber":689,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | list the students who have/have not completed a specific task                          | track the completion status of a specific task                                                            |","lastModifiedDate":"2022-03-18"},{"lineNumber":690,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant                                        | assign tasks to a specific student                                                     | allocate and track a task that is given to the student                                                    |","lastModifiedDate":"2022-03-18"},{"lineNumber":691,"author":{"gitId":"Benjykoh"},"content":"| `* * *`  | Teaching Assistant who is teaching in multiple semesters  | archive the existing data                                                              | save a copy on the local machine before undergoing a complete deletion of data                            |","lastModifiedDate":"2022-03-18"},{"lineNumber":692,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | see all the tasks that a student currently has                                         | observe his/her progress                                                                                  |","lastModifiedDate":"2022-03-18"},{"lineNumber":693,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | save existing data to hard drive                                                       | access the data again when I reopen the app                                                               |","lastModifiedDate":"2022-03-18"},{"lineNumber":694,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | delete all students from TAPA                                                          | remove students that were taught in previous semesters and are no longer relevant                         |","lastModifiedDate":"2022-02-23"},{"lineNumber":695,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | mark/unmark students’ tasks according to the completion status                         | update his/her progress                                                                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":696,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | see students’ contact details (such as email address)                                  | contact them if needed                                                                                    |","lastModifiedDate":"2022-02-23"},{"lineNumber":697,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | find a student                                                                         | check details of a specific student                                                                       |","lastModifiedDate":"2022-02-23"},{"lineNumber":698,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | display the possible actions that  I can take, or do                                   | have a quick reference without the need of reading a user guide                                           |","lastModifiedDate":"2022-02-23"},{"lineNumber":699,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | edit the details of the students                                                       | fix any errors that occurred during the insertion of student details                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":700,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | delete multiple students from TAPA                                                     | remove students that are no longer being taught, without needing to delete them individually              |","lastModifiedDate":"2022-03-18"},{"lineNumber":701,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | display student progress                                                               | see who is lagging behind                                                                                 |","lastModifiedDate":"2022-03-18"},{"lineNumber":702,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | update the student’s tags                                                              | edit when the student drop/take a new module                                                              |","lastModifiedDate":"2022-03-18"},{"lineNumber":703,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | sort students by their progress (based on the number of tasks completed)               | see how the class is performing                                                                           |","lastModifiedDate":"2022-03-18"},{"lineNumber":704,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | edit details of a task given to a student                                              | update the details of an assignment in case of future changes/extensions                                  |","lastModifiedDate":"2022-03-18"},{"lineNumber":705,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | assign tasks to multiple students                                                      | allocate tasks to students without having to individually assign them                                     |","lastModifiedDate":"2022-03-18"},{"lineNumber":706,"author":{"gitId":"Benjykoh"},"content":"| `* *`    | Teaching Assistant                                        | delete tasks assigned to multiple students                                             | remove any task that has incorrect information without having to individually delete it from each student |","lastModifiedDate":"2022-03-19"},{"lineNumber":707,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | track attendance                                                                       | mark attendance for modules that require student attendance                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":708,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see modules I’m teaching at a glance                                                   | remind myself of what needs to be prepared for classes                                                    |","lastModifiedDate":"2022-02-23"},{"lineNumber":709,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see student’s timetable                                                                | find a good time to arrange a consult with them                                                           |","lastModifiedDate":"2022-02-23"},{"lineNumber":710,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | type in chain commands                                                                 | execute multiple different commands quickly                                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":711,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | send emails from the command line                                                      | send emails to students with specific tags quickly                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":712,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is used to CLI commands            | customise commands                                                                     | execute commands quickly                                                                                  |","lastModifiedDate":"2022-02-23"},{"lineNumber":713,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | view grades scored by students in each assignment                                      | understand which topics they are finding difficult                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":714,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | be able to highlight or feature certain students                                       | know which students are performing the best or need more help                                             |","lastModifiedDate":"2022-02-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"Korochii"},"content":"(For all use cases below, the **System** is the `TAPA` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-23"},{"lineNumber":721,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":722,"author":{"gitId":"Korochii"},"content":"**Use case: UC01 - Add a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":723,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":724,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":725,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":726,"author":{"gitId":"Korochii"},"content":"1. User requests to add a specific student.","lastModifiedDate":"2022-02-23"},{"lineNumber":727,"author":{"gitId":"Korochii"},"content":"2. TAPA shows the updated list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":728,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":729,"author":{"gitId":"Korochii"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":730,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":731,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":732,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":733,"author":{"gitId":"Korochii"},"content":"* 1a. A student with the same matriculation number already exist.","lastModifiedDate":"2022-02-23"},{"lineNumber":734,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":735,"author":{"gitId":"Korochii"},"content":"    * 1a1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":736,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":737,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":738,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":739,"author":{"gitId":"Korochii"},"content":"* 1b. The matriculation number of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":740,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":741,"author":{"gitId":"Korochii"},"content":"    * 1b1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":744,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":745,"author":{"gitId":"Korochii"},"content":"* 1c. The name of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":746,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":747,"author":{"gitId":"Korochii"},"content":"    * 1c1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":748,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":749,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":750,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":751,"author":{"gitId":"Korochii"},"content":"* 1d. The module code that the student is currently taking is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":752,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":753,"author":{"gitId":"Korochii"},"content":"    * 1d1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":754,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":755,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":756,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":757,"author":{"gitId":"Korochii"},"content":"**Use case: UC02 - List all students**","lastModifiedDate":"2022-02-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":762,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":763,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":764,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":765,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":766,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":767,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":768,"author":{"gitId":"Korochii"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":769,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":770,"author":{"gitId":"Korochii"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":772,"author":{"gitId":"Korochii"},"content":"**Use case: UC03 - Delete a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":776,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":777,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":778,"author":{"gitId":"Korochii"},"content":"3. User requests to delete a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":779,"author":{"gitId":"Korochii"},"content":"4. TAPA deletes the students.","lastModifiedDate":"2022-02-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":792,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":793,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":794,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":795,"author":{"gitId":"medajet"},"content":"* 3b. The given student id is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":796,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":797,"author":{"gitId":"medajet"},"content":"    * 3b1. TAPA shows an error message.","lastModifiedDate":"2022-03-13"},{"lineNumber":798,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":799,"author":{"gitId":"medajet"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-03-13"},{"lineNumber":800,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":801,"author":{"gitId":"Korochii"},"content":"**Use case: UC04 - Edit a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":802,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":803,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":804,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":805,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":806,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":807,"author":{"gitId":"Korochii"},"content":"3. User requests edits to the supplied details of a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":808,"author":{"gitId":"Korochii"},"content":"4. TAPA updates the details of the student with the supplied details.","lastModifiedDate":"2022-02-23"},{"lineNumber":809,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":810,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":811,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":820,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":821,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":822,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":823,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":824,"author":{"gitId":"Korochii"},"content":"* 3b. The given field is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":825,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":826,"author":{"gitId":"Korochii"},"content":"    * 3b1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":827,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":828,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":829,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":830,"author":{"gitId":"Korochii"},"content":"* 3c. The new matriculation number specified is already in the database.","lastModifiedDate":"2022-02-23"},{"lineNumber":831,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":832,"author":{"gitId":"Korochii"},"content":"    * 3c1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"Korochii"},"content":"3.  Usage should be more efficient than a regular contact management application for a user who types fast in English text.","lastModifiedDate":"2022-02-23"},{"lineNumber":843,"author":{"gitId":"Korochii"},"content":"4.  Should be usable by a novice who has never used a contact management application before.","lastModifiedDate":"2022-02-23"},{"lineNumber":844,"author":{"gitId":"Korochii"},"content":"5.  The system should respond within 3 seconds.","lastModifiedDate":"2022-02-23"},{"lineNumber":845,"author":{"gitId":"Korochii"},"content":"6.  The student\u0027s data should only be stored locally.","lastModifiedDate":"2022-02-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"Korochii"},"content":"* **Module**: A specific class that a student is taking","lastModifiedDate":"2022-02-23"},{"lineNumber":853,"author":{"gitId":"Korochii"},"content":"* **Tag**: A category that the student belong to (usually denotes the module that is currently being taken)","lastModifiedDate":"2022-02-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Benjykoh":126,"Korochii":204,"brelkh":205,"medajet":6,"-":365}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"## Note on this setting up guide","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"This file was relevant for AB3. As AB3 has been evolved into TAPA, this guide is no longer relevant for our project.","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"Previously, this guide was linked to in the AB3 DG (\"Setting up, getting started\" section). Now, the link has been","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"updated to forward readers of our DG to TAPA\u0027s [_UG Quick Start Section_](https://ay2122s2-cs2103t-w09-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"brelkh":6,"-":55}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"TAPA (Teaching Assistant\u0027s Personal Assistant) is a desktop app that allows TAs to better manage their student’s progress,","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"especially for those","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"who are teaching multiple classes/modules at the same time. It is optimised for use on a CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"1. Ensure you have [Java `11`](https://www.oracle.com/java/technologies/downloads/#java11) or above installed in your Computer.","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"1. Download the latest `TAPA.jar` from [here](https://github.com/AY2122S2-CS2103T-W09-4/tp/releases).","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TAPA.","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"   * **`add`**`i/A0123456Z n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu` : Adds a student named `John` to TAPA.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"   * **`delete`**`3` : Deletes the 3rd entry in TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"   * **`manual`**`add` : Display the user manual for the command `add`.","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"### Adding a student: `add`","lastModifiedDate":"2022-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"Adds a student to TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"**Format**: `add i/STUDENT_ID n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS]​`","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"* The student’s matriculation number, name as well as module code are compulsory fields.","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"* The phone number, telegram handle, and email address fields are optional and can be excluded.","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"* `add i/AXXXXXXXR n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    * A student named John is added to TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"### Deleting a student: `delete`","lastModifiedDate":"2022-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"Deletes a student from TAPA.","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"**Format**: `delete STUDENT_INDEX...` (or) `delete i/STUDENT_ID`","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"* The student corresponding to the index or matriculation number (specified after the `delete` command) will be removed from TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of students in TAPA, or there is no student with the specified matriculation number.","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"* Multiple indices can be inputted in order to delete multiple students.","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"* `delete 10`","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"    * A student named John (whose list index is “10”) is deleted from TAPA.","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"medajet"},"content":"* `delete 10 20`","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"medajet"},"content":"    * The students named John and Mary (whose list indices are “10” and “20”) are deleted from TAPA.","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"* `delete i/A0123456Z`","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"    * A student named John whose matriculation number is \"A0123456Z\" is deleted from TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"medajet"},"content":"### Deleting all students taking a particular module: `deleteModule`","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"Deletes all students taking a particular module from TAPA.","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"medajet"},"content":"**Format**: `deleteModule m/MODULE_CODE`","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"medajet"},"content":"* All students who are taking the module with the module code specified after the `deleteModule` command will be removed from TAPA.","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"medajet"},"content":"* An error message will be displayed to the user if there are no students taking the specified module.","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"medajet"},"content":"**Example**:","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"medajet"},"content":"* `deleteModule m/CS2100`","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"medajet"},"content":"    * All students who are specified as taking CS2100 are deleted from TAPA.","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"medajet"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"medajet"},"content":"### Finding a student: `find`","lastModifiedDate":"2022-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":125,"author":{"gitId":"medajet"},"content":"Allows the user to look up the details of a particular student.","lastModifiedDate":"2022-02-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":127,"author":{"gitId":"Benjykoh"},"content":"**Format**: `find n/STUDENT_NAME` (or) `find i/STUDENT_ID` (or) `find m/MODULE_CODE`","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":129,"author":{"gitId":"medajet"},"content":"* The student whose name, student id or module code is specified after the `find` command will appear in the resulting list.","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"medajet"},"content":"* `find n/John`","lastModifiedDate":"2022-02-25"},{"lineNumber":133,"author":{"gitId":"medajet"},"content":"    * Displays the particulars of the students whose names include John.","lastModifiedDate":"2022-02-25"},{"lineNumber":134,"author":{"gitId":"medajet"},"content":"* `find i/AXXXXXXXR`","lastModifiedDate":"2022-02-25"},{"lineNumber":135,"author":{"gitId":"medajet"},"content":"    * Displays the particulars of the student with student ID AXXXXXXXR.","lastModifiedDate":"2022-02-25"},{"lineNumber":136,"author":{"gitId":"medajet"},"content":"* `find m/CS2103T`","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"medajet"},"content":"    * Displays the particulars of the student with module code CS2103T. Also works for module codes with varying lengths.","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"brelkh"},"content":"### Checking all the tasks that a student has: `task`","lastModifiedDate":"2022-03-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"Displays all the tasks that are allocated to a particular student.","lastModifiedDate":"2022-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"Benjykoh"},"content":"**Format**: `task i/STUDENT_ID`","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"* The completed and uncompleted tasks are separated into 2 different sections.","lastModifiedDate":"2022-02-23"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"* An error message will be displayed to the user if there is no student with the specified matriculation number.","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"* `task i/AXXXXXXXR`","lastModifiedDate":"2022-03-01"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"    * Lists out the tasks that student (AXXXXXXXR) has.","lastModifiedDate":"2022-03-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"### Marking an undone task as done for a student: `mark`","lastModifiedDate":"2022-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":158,"author":{"gitId":"Benjykoh"},"content":"Marks a specific undone task as done for a particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":160,"author":{"gitId":"Benjykoh"},"content":"**Format**: `mark i/STUDENT_ID idx/UNDONE_TASK_INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":162,"author":{"gitId":"Benjykoh"},"content":"* The undone task corresponding to the index or the particular student will be marked as done in the TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":163,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of tasks for that particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":164,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the task with that specified index for the particular student is already marked as done.","lastModifiedDate":"2022-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":166,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"Benjykoh"},"content":"* `mark i/AXXXXXXXR idx/1`","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"Benjykoh"},"content":"    * Marks the first undone task for the student with student ID AXXXXXXXR as done.","lastModifiedDate":"2022-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":170,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"brelkh"},"content":"### Marking a done task as undone for a student: `unmark`","lastModifiedDate":"2022-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":174,"author":{"gitId":"Benjykoh"},"content":"Marks a specific done task as undone for a particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":176,"author":{"gitId":"Benjykoh"},"content":"**Format**: `unmark i/STUDENT_ID idx/DONE_TASK_INDEX`","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":178,"author":{"gitId":"Benjykoh"},"content":"* The done task corresponding to the index for the particular student will be marked as undone in the TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":179,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of tasks for that particular student.","lastModifiedDate":"2022-03-01"},{"lineNumber":180,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the task with that specified index for the particular student is already marked as undone.","lastModifiedDate":"2022-03-01"},{"lineNumber":181,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":182,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"Benjykoh"},"content":"* `unmark i/AXXXXXXXR idx/1`","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"Benjykoh"},"content":"    * Marks the first done task for the student with student ID AXXXXXXXR as undone.","lastModifiedDate":"2022-03-01"},{"lineNumber":185,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":186,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"brelkh"},"content":"### Editing a student\u0027s information: `edit`","lastModifiedDate":"2022-03-01"},{"lineNumber":189,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":190,"author":{"gitId":"brelkh"},"content":"Edits a student\u0027s information in TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"**Format**: `edit STUDENT_INDEX [i/STUDENT_ID] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS]​`","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":194,"author":{"gitId":"brelkh"},"content":"* The index of the student to be edited is a compulsory field.","lastModifiedDate":"2022-03-01"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"* The student’s matriculation number, name, module code, phone number, telegram handle, and email address fields are optional and can be excluded.","lastModifiedDate":"2022-03-01"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of students in TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":198,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"* `edit 10 m/CS2103T p/98765432 t/johnnn e/e0123456z@u.nus.edu`","lastModifiedDate":"2022-03-01"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"    * A student (whose list index is “10”) has their module, phone number, telegram handle and email address edited.","lastModifiedDate":"2022-03-01"},{"lineNumber":201,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":202,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"### Deleting all students: `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":205,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":206,"author":{"gitId":"brelkh"},"content":"Clears all students from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":207,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":208,"author":{"gitId":"Benjykoh"},"content":"**Format**: `clear`","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":210,"author":{"gitId":"brelkh"},"content":"* All students and their corresponding details will be removed from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":211,"author":{"gitId":"brelkh"},"content":"* A message will be displayed if TAPA is already empty and there are no students to be removed.","lastModifiedDate":"2022-03-01"},{"lineNumber":212,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":213,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"* `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"    * All students cleared from TAPA.","lastModifiedDate":"2022-03-01"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":217,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"### Archiving details in the address book: `archive`","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"Saves a copy of the details currently saved in TAPA into a separate file.","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Benjykoh"},"content":"**Format**: `archive`","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"* A copy of the details currently saved in TAPA will be saved to a separate file.","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"* The file name will be the date and time of the archive operation.","lastModifiedDate":"2022-02-23"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"* This file will be saved in the same directory as the original `.json` data file.","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"### Listing the student details: `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"Displays all the students enrolled in a list.","lastModifiedDate":"2022-03-01"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":235,"author":{"gitId":"Benjykoh"},"content":"**Format**: `list`","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":237,"author":{"gitId":"Harish-coding"},"content":"* Displays the students from the list of students in alphabetical order.","lastModifiedDate":"2022-03-01"},{"lineNumber":238,"author":{"gitId":"Harish-coding"},"content":"* The students are indexed as 1, 2, 3, ......","lastModifiedDate":"2022-03-01"},{"lineNumber":239,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":240,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"Harish-coding"},"content":"* `list`","lastModifiedDate":"2022-03-01"},{"lineNumber":242,"author":{"gitId":"Harish-coding"},"content":"    * Displays all the enrolled students in alphabetical order.","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":244,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"Harish-coding"},"content":"### Assigning tasks to a particular student: `assign`","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":248,"author":{"gitId":"Korochii"},"content":"Assigns a task to a particular student.","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":250,"author":{"gitId":"Benjykoh"},"content":"**Format**: `assign i/STUDENT_ID tn/TASK_NAME` (or) `assign m/MODULE_CODE tn/TASK_NAME`","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":252,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"* `assign i/AXXXXXXXR tn/assignment 1`","lastModifiedDate":"2022-03-01"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"    * Assigns assignment 1 to student with id AXXXXXXXR.","lastModifiedDate":"2022-03-01"},{"lineNumber":255,"author":{"gitId":"Benjykoh"},"content":"* `assign m/CS2103T tn/assignment 1`","lastModifiedDate":"2022-03-21"},{"lineNumber":256,"author":{"gitId":"Benjykoh"},"content":"    * Assigns assignment 1 to students taking module CS2103T.","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":258,"author":{"gitId":"brelkh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":260,"author":{"gitId":"Harish-coding"},"content":"### Deleting previously assigned task: `deleteTask`","lastModifiedDate":"2022-03-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":262,"author":{"gitId":"Harish-coding"},"content":"Deletes a task from a particular student\u0027s list of tasks.","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":264,"author":{"gitId":"Benjykoh"},"content":"**Format**: `deleteTask i/STUDENT_ID idx/INDEX` (or) `deleteTask m/MODULE_CODE tn/TASK_NAME`","lastModifiedDate":"2022-03-31"},{"lineNumber":265,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":266,"author":{"gitId":"Harish-coding"},"content":"* An error message will be displayed to the user if the specified index is a negative number or larger than the number of tasks for that particular student.","lastModifiedDate":"2022-03-27"},{"lineNumber":267,"author":{"gitId":"Harish-coding"},"content":"* An error message will be displayed if the student with the given student ID does not exist.","lastModifiedDate":"2022-03-27"},{"lineNumber":268,"author":{"gitId":"Harish-coding"},"content":"* An error message will be displayed if none of the students taking the module had previously been assigned the task with the given task name.","lastModifiedDate":"2022-03-27"},{"lineNumber":269,"author":{"gitId":"Harish-coding"},"content":"* An error message will be displayed if none of the students are taking a module with the given module code.","lastModifiedDate":"2022-03-27"},{"lineNumber":270,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":271,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"Harish-coding"},"content":"* `deleteTask i/AXXXXXXXR idx/3`","lastModifiedDate":"2022-03-27"},{"lineNumber":273,"author":{"gitId":"Harish-coding"},"content":"    * Deletes task at index 3 from the student\u0027s list of assigned task, provided that a task exists at that index.","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"Harish-coding"},"content":"* `deleteTask m/cs2030 tn/Assignment 1`","lastModifiedDate":"2022-03-27"},{"lineNumber":275,"author":{"gitId":"Harish-coding"},"content":"    * Deletes Assignment 1 that was previously assigned to any of the students taking CS2030 module.","lastModifiedDate":"2022-03-27"},{"lineNumber":276,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":277,"author":{"gitId":"brelkh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"### Viewing the completion status of a particular task: `progress`","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"Displays a list of students who are taking the specified module, and have been assigned with a particular task.","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"The completion status of each student in the list will be displayed as well.","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"Benjykoh"},"content":"**Format**: `progress m/MODULE_CODE tn/TASK_NAME`","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"* The module code and task name are compulsory fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"* `progress m/CS2103T tn/assignment 1`","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"    * Displays all students who are taking \"CS2103T\" and have been assigned with \"assignment 1\".","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"    * For each student in the output list, a \"tick\" symbol signifies that he/she has already","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"      completed the assigned task.","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"    * On the other hand, a \"cross\" symbol signifies that the student has not complete the assigned task.","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"Harish-coding"},"content":"    ","lastModifiedDate":"2022-03-01"},{"lineNumber":295,"author":{"gitId":"brelkh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":296,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":297,"author":{"gitId":"Benjykoh"},"content":"### View the list of students by the number of undone tasks in descending order: `sort`","lastModifiedDate":"2022-03-31"},{"lineNumber":298,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"Benjykoh"},"content":"Sorts and displays the students in TAPA by the number of undone tasks in **descending** order.","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":301,"author":{"gitId":"Benjykoh"},"content":"**Format**: `sort`","lastModifiedDate":"2022-03-31"},{"lineNumber":302,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":303,"author":{"gitId":"Benjykoh"},"content":"* Displays the students from the list of students by the number of undone tasks in **descending** order","lastModifiedDate":"2022-03-31"},{"lineNumber":304,"author":{"gitId":"Benjykoh"},"content":"* The students are indexed as 1, 2, 3, ......","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":306,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"Benjykoh"},"content":"* `sort`","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"Benjykoh"},"content":"    * Displays all the enrolled students by the number of undone tasks in **descending** order","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":310,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":311,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":312,"author":{"gitId":"Benjykoh"},"content":"### Displaying manual for a command: `manual`","lastModifiedDate":"2022-03-01"},{"lineNumber":313,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":314,"author":{"gitId":"brelkh"},"content":"Display the format for a specified command and a short description for a particular command.","lastModifiedDate":"2022-03-01"},{"lineNumber":315,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":316,"author":{"gitId":"Benjykoh"},"content":"**Format**: `manual [COMMAND_NAME]`","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":318,"author":{"gitId":"Benjykoh"},"content":"* The format of the command corresponding to the command name will be displayed, along with a short description.","lastModifiedDate":"2022-03-01"},{"lineNumber":319,"author":{"gitId":"Benjykoh"},"content":"* If there are no inputs for the command name, all the available commands will be displayed.","lastModifiedDate":"2022-03-01"},{"lineNumber":320,"author":{"gitId":"Benjykoh"},"content":"* An error message will be displayed to the user if the user input a command name that is invalid.","lastModifiedDate":"2022-03-01"},{"lineNumber":321,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"Benjykoh"},"content":"**Example**:","lastModifiedDate":"2022-03-31"},{"lineNumber":323,"author":{"gitId":"Benjykoh"},"content":"* `manual add`","lastModifiedDate":"2022-03-01"},{"lineNumber":324,"author":{"gitId":"Benjykoh"},"content":"    * Display the format for the command add, and briefly describes the command.","lastModifiedDate":"2022-03-01"},{"lineNumber":325,"author":{"gitId":"Benjykoh"},"content":"* `manual`","lastModifiedDate":"2022-03-01"},{"lineNumber":326,"author":{"gitId":"Benjykoh"},"content":"    * Display all available commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":327,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":328,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":329,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":330,"author":{"gitId":"Korochii"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-03-01"},{"lineNumber":331,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":332,"author":{"gitId":"Korochii"},"content":"Shows a pop-up window explaining how to access the user guide.","lastModifiedDate":"2022-03-01"},{"lineNumber":333,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":334,"author":{"gitId":"Benjykoh"},"content":"**Format**: `help`","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":336,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"Benjykoh"},"content":"**Format**: `exit`","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Benjykoh"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"Benjykoh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"Korochii"},"content":"**Q**: What command can I use to view a list of available commands?\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":352,"author":{"gitId":"Korochii"},"content":"**A**: Use the command “manual” to view the list of commands used within TAPA. Alternatively, refer to the Command Summary section below.","lastModifiedDate":"2022-03-01"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"Benjykoh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"Benjykoh"},"content":"Action              | Command Format with Examples","lastModifiedDate":"2022-03-31"},{"lineNumber":360,"author":{"gitId":"Benjykoh"},"content":"--------------------|------------------","lastModifiedDate":"2022-03-31"},{"lineNumber":361,"author":{"gitId":"Korochii"},"content":"**Add**             | `add i/MATRICULATION_NO n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] ` \u003cbr\u003e Example: `add i/AXXXXXXXR n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu`","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"brelkh"},"content":"**Delete**          | `delete STUDENT_INDEX...` (or) `delete i/STUDENT_ID` \u003cbr\u003e Example: `delete 10` (or) `delete 10 20` (or) `delete i/AXXXXXXXR`","lastModifiedDate":"2022-03-27"},{"lineNumber":363,"author":{"gitId":"medajet"},"content":"**Delete Module**   | `deleteModule m/MODULE_CODE` \u003cbr\u003e Example: `deleteModule m/CS2100`","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"brelkh"},"content":"**Find**            | `find n/STUDENT_NAME` (or) `find i/STUDENT_ID` (or) `find m/MODULE_CODE` \u003cbr\u003e Example: `find n/john` (or) `find i/AXXXXXXXR` (or) `find m/CS2103T`","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"brelkh"},"content":"**Task**            | `task i/STUDENT_ID` \u003cbr\u003e Example: `task i/AXXXXXXXR`","lastModifiedDate":"2022-03-27"},{"lineNumber":366,"author":{"gitId":"brelkh"},"content":"**Mark**            | `mark i/STUDENT_ID idx/UNDONE_TASK_INDEX` \u003cbr\u003e Example: `mark i/AXXXXXXXR idx/1`","lastModifiedDate":"2022-03-27"},{"lineNumber":367,"author":{"gitId":"brelkh"},"content":"**Unmark**          | `unmark i/STUDENT_ID idx/DONE_TASK_INDEX` \u003cbr\u003e Example: `unmark i/AXXXXXXXR idx/1`","lastModifiedDate":"2022-03-27"},{"lineNumber":368,"author":{"gitId":"Harish-coding"},"content":"**Delete Task**     | `deleteTask i/STUDENT_ID idx/INDEX` (or) `deleteTask m/MODULE_CODE tn/TASK_NAME` \u003cbr\u003e Example: `deleteTask i/AXXXXXXXR idx/3` (or) `deleteTask m/CS2030 tn/Assignment 1`  ","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"brelkh"},"content":"**Edit**            | `edit STUDENT_INDEX [i/MATRICULATION_NO] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] ` \u003cbr\u003e Example: `edit 10 m/CS2103T p/98765432 t/johnnn e/e0123456@nus.edu.sg`","lastModifiedDate":"2022-03-27"},{"lineNumber":370,"author":{"gitId":"brelkh"},"content":"**Clear**           | `clear`","lastModifiedDate":"2022-03-01"},{"lineNumber":371,"author":{"gitId":"Korochii"},"content":"**Archive**         | `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":372,"author":{"gitId":"Korochii"},"content":"**List**            | `list`","lastModifiedDate":"2022-03-27"},{"lineNumber":373,"author":{"gitId":"brelkh"},"content":"**Assign**          | `assign i/STUDENT_ID tn/TASK_NAME` (or) `assign m/MODULE_CODE tn/TASK_NAME` \u003cbr\u003e Example: `task i/AXXXXXXXR tn/assignment 1` (or) `assign m/CS2103T tn/assignment 2`","lastModifiedDate":"2022-03-27"},{"lineNumber":374,"author":{"gitId":"brelkh"},"content":"**Progress**        | `progress m/MODULE_CODE tn/TASK_NAME` \u003cbr\u003e Example: `progress m/CS2103T tn/assignment 1`","lastModifiedDate":"2022-03-27"},{"lineNumber":375,"author":{"gitId":"Benjykoh"},"content":"**Sort**            | `sort`","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"brelkh"},"content":"**Manual**          | `manual [COMMAND_NAME]` \u003cbr\u003e Example: `manual` (or) `manual add`","lastModifiedDate":"2022-03-27"},{"lineNumber":377,"author":{"gitId":"Korochii"},"content":"**Help**            | `help`","lastModifiedDate":"2022-03-01"},{"lineNumber":378,"author":{"gitId":"Korochii"},"content":"**Exit**            | `exit`","lastModifiedDate":"2022-03-27"},{"lineNumber":379,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":380,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":381,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":382,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Benjykoh":99,"Korochii":54,"brelkh":46,"medajet":30,"-":120,"Harish-coding":33}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"brelkh"},"content":"    content: \"TAPA\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brelkh":1,"-":294}},{"path":"docs/diagrams/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"title AddCommand\\n","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"participant \"person:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"create AddCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"activate AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e AddCommandParser : parse(arguments)","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"activate AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"ArgumentTokenizer --\u003e AddCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"ref over AddCommandParser: Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e Person","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"activate Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"Person --\u003e AddCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"create AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"activate AddCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"deactivate AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"AddCommandParser --\u003e AddressBookParser -- LOGIC_COLOR: AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"AddressBookParser --\u003e LogicManager -- LOGIC_COLOR: AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e AddCommand ++ LOGIC_COLOR: execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"AddCommand -\u003e Model ++ MODEL_COLOR: hasPerson(person)","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"AddCommand -\u003e Model ++ MODEL_COLOR: addPerson(person)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"AddCommand -\u003e Model ++ MODEL_COLOR: sortFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"AddCommand -\u003e Model ++ MODEL_COLOR: updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"AddCommand --\u003e LogicManager -- LOGIC_COLOR: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"participant \"studentId:StudentId\" as StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"participant \"name:Name\" as Name MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"participant \"moduleCode:ModuleCode\" as ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"participant \"phone:Phone\" as Phone MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"participant \"telegramHandle:TelegramHandle\" as TelegramHandle MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"participant \"email:Email\" as Email MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"mainframe sd Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseStudentId(studentId)","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"create StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"activate StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"StudentId --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"deactivate StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e AddCommandParser -- MODEL_COLOR: studentId","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseName(name)","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"create Name","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e Name","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"activate Name MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"Name --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"deactivate Name","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e AddCommandParser -- MODEL_COLOR: name","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseModuleCode(moduleCode)","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"create ModuleCode","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e ModuleCode","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"activate ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"ModuleCode --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"deactivate ModuleCode","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e AddCommandParser -- LOGIC_COLOR: moduleCode","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"opt user inputs phone","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"    AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parsePhone(phone)","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"    create Phone","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"    ParserUtil -\u003e Phone","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"    activate Phone MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"    Phone --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"    deactivate Phone","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"    ParserUtil --\u003e AddCommandParser -- LOGIC_COLOR: phone","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"opt user inputs telegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"    AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseTelegramHandle(telegramHandle)","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"    create TelegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"    ParserUtil -\u003e TelegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"    activate TelegramHandle MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"    TelegramHandle --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"    deactivate TelegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"    ParserUtil --\u003e AddCommandParser -- LOGIC_COLOR: telegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"opt user inputs email","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"    AddCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseEmail(email)","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"    create Email","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"    ParserUtil -\u003e Email","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"    activate Email MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"    Email --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"    deactivate Email","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"    ParserUtil --\u003e AddCommandParser -- LOGIC_COLOR: email","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"end","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Korochii":148}},{"path":"docs/diagrams/ArchiveCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"title ArchiveCommand\\n","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"participant \":ArchiveCommand\" as ArchiveCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"box \"Storage\" STORAGE_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"participant \":JsonSerializableAddressBook\" as JsonSerializableAddressBook STORAGE_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"create ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"activate ArchiveCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"ArchiveCommand --\u003e AddressBookParser : ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"AddressBookParser --\u003e LogicManager --: ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e ArchiveCommand ++ LOGIC_COLOR: execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e Model ++ MODEL_COLOR: getAddressBookFilePath()","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"Model --\u003e ArchiveCommand -- MODEL_COLOR: currentPath","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e Model ++ MODEL_COLOR: getAddressBook()","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"Model --\u003e ArchiveCommand -- MODEL_COLOR: currentAddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e ArchiveCommand : Generate new path","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e ArchiveCommand : Create new .json file","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"create JsonSerializableAddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e JsonSerializableAddressBook: JsonSerializableAddressBook(currentAddressBook)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"activate JsonSerializableAddressBook STORAGE_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"JsonSerializableAddressBook --\u003e ArchiveCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"deactivate JsonSerializableAddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e ArchiveCommand : Write to new .json file","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"ArchiveCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"CommandResult --\u003e ArchiveCommand : commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"ArchiveCommand --\u003e LogicManager -- : commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Korochii":62}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"title FindCommand\\n","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"participant \"predicate:Predicate\" as Predicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"create FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"activate FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"AddressBookParser -\u003e FindCommandParser : parse(arguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"activate FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"FindCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"ArgumentTokenizer --\u003e FindCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"ref over FindCommandParser: Parsing inputted field","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"create Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"FindCommandParser -\u003e Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"activate Predicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"Predicate --\u003e FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"deactivate Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"create FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"activate FindCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"deactivate FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"FindCommandParser --\u003e AddressBookParser -- LOGIC_COLOR: FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"AddressBookParser --\u003e LogicManager -- LOGIC_COLOR: FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"LogicManager -\u003e FindCommand ++ LOGIC_COLOR: execute(model)","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"FindCommand -\u003e Model ++ MODEL_COLOR: updateFilteredPersonList(predicate)","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"FindCommand --\u003e LogicManager -- LOGIC_COLOR: commandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"@enduml","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"medajet"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"medajet"},"content":"participant \"studentId:StudentId\" as StudentId MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"participant \"name:Name\" as Name MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"participant \"moduleCode:ModuleCode\" as ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"mainframe sd Parsing inputted field","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"alt user inputs studentId","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"    FindCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseStudentId(studentId)","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"    create StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"    ParserUtil -\u003e StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"    activate StudentId MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"medajet"},"content":"    StudentId --\u003e ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"    deactivate StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"    ParserUtil --\u003e FindCommandParser -- MODEL_COLOR: studentId","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"else user inputs name","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"    FindCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseName(name)","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"medajet"},"content":"    create Name","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"    ParserUtil -\u003e Name","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"    activate Name MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"medajet"},"content":"    Name --\u003e ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"medajet"},"content":"    deactivate Name","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"    ParserUtil --\u003e FindCommandParser -- MODEL_COLOR: name","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"medajet"},"content":"else user inputs moduleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"medajet"},"content":"    FindCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseModuleCode(moduleCode)","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"medajet"},"content":"    create ModuleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"medajet"},"content":"    ParserUtil -\u003e ModuleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"medajet"},"content":"    activate ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"    ModuleCode --\u003e ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"medajet"},"content":"    deactivate ModuleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"medajet"},"content":"    ParserUtil --\u003e FindCommandParser -- LOGIC_COLOR: moduleCode","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"medajet"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"medajet"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"medajet":114}},{"path":"docs/diagrams/ManualCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"@startuml","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"title ManualCommand\\n","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"participant \":ManualCommandParser\" as ManualCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"participant \"command:ManualCommand\" as ManualCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e AddressBookParser: parseCommand(commandText)","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"create ManualCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e ManualCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"activate ManualCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"ManualCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"deactivate ManualCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e ManualCommandParser: parse(arguments)","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"activate ManualCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"create ManualCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"ManualCommandParser -\u003e ManualCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"activate ManualCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"ManualCommand --\u003e ManualCommandParser --","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"deactivate ManualCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"ManualCommandParser --\u003e AddressBookParser --","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"deactivate ManualCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser --\u003e LogicManager --","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e ManualCommand: execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"activate ManualCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"create CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"ManualCommand -\u003e CommandResult :","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"CommandResult --\u003e ManualCommand --:","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"ManualCommand --\u003e LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"deactivate ManualCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"@enduml","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Benjykoh":56}},{"path":"docs/diagrams/MarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"@startuml","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"title MarkCommand\\n","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"participant \":MarkCommand\" as MarkCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"participant \"person:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"create MarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e MarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"activate MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e MarkCommandParser : parse(arguments)","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"activate MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"ArgumentTokenizer --\u003e MarkCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"ref over MarkCommandParser: Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser -\u003e Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"activate Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"Person --\u003e MarkCommandParser --:","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"create MarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser -\u003e MarkCommand ++ LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"MarkCommand --\u003e MarkCommandParser --:","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser --\u003e AddressBookParser --: MarkCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"deactivate MarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser --\u003e LogicManager --: MarkCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e MarkCommand LOGIC_COLOR : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"activate MarkCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"MarkCommand -\u003e Model ++ MODEL_COLOR: markTaskOfPerson(studentId, index)","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"Model --\u003e MarkCommand --","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"create CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"MarkCommand -\u003e CommandResult ++ LOGIC_COLOR:","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"CommandResult --\u003e MarkCommand --:","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"MarkCommand --\u003e LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"deactivate MarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"@enduml","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"participant \":MarkCommandParser\" as MarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"participant \"studentId:StudentId\" as StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"participant \"index:Index\" as Index MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"mainframe sd Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseStudentId(studentId)","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"create StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"ParserUtil -\u003e StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"activate StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"StudentId --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"deactivate StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"ParserUtil --\u003e MarkCommandParser -- MODEL_COLOR: studentId","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"MarkCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseIndex(index)","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"create Index","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"ParserUtil -\u003e Index","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"activate Index MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"Index --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"deactivate Index","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"ParserUtil --\u003e MarkCommandParser -- MODEL_COLOR: index","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Benjykoh":114}},{"path":"docs/diagrams/ParserUtilClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"skinparam classAttributeFontColor BackgroundColor","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"show members","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"class ParserUtil {","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    +{static} MESSAGE_INVALID_INDEX: String","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    +{static} parseIndex(String oneBasedIndex): Index","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    +{static} parseName(String name): Name","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    +{static} parsePhone(String phone): Phone","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    +{static} parseEmail(String email): Email","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    +{static} parseStudentId(String studentId): StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    +{static} parseModuleCode(String moduleCode): ModuleCode","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    +{static} parseTelegramHandle(String telegramHandle): TelegramHandle","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    +{static} parseTask(String task): Task","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Korochii":19}},{"path":"docs/diagrams/ProgressCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"title ProgressCommand\\n","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"participant \":ProgressCommandParser\" as ProgressCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"participant \":ProgressCommand\" as ProgressCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"create ProgressCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e ProgressCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"activate ProgressCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"deactivate ProgressCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e ProgressCommandParser : parse(arguments)","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"activate ProgressCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"ArgumentTokenizer --\u003e ProgressCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"ref over ProgressCommandParser: Parsing each field","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"create ProgressCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser -\u003e ProgressCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"activate ProgressCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"ProgressCommand --\u003e ProgressCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"deactivate ProgressCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser --\u003e AddressBookParser -- LOGIC_COLOR: ProgressCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"AddressBookParser --\u003e LogicManager -- LOGIC_COLOR: ProgressCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e ProgressCommand ++ LOGIC_COLOR: execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"ProgressCommand -\u003e Model ++ MODEL_COLOR: checkProgress(moduleCode, task)","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"Model --\u003e ProgressCommand -- MODEL_COLOR: LinkedHashMap\u003cPerson, Boolean\u003e possiblePairings","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"ProgressCommand -\u003e ProgressCommand: Create result string using possiblePairings","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"ProgressCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"CommandResult --\u003e ProgressCommand: commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"ProgressCommand --\u003e LogicManager -- LOGIC_COLOR: commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"participant \":ProgressCommandParser\" as ProgressCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"participant \"moduleCode:ModuleCode\" as ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"participant \"task:Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"mainframe sd Parsing each field","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseModuleCode(moduleCode)","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"create ModuleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e ModuleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"activate ModuleCode MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"ModuleCode --\u003e ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"deactivate ModuleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e ProgressCommandParser -- LOGIC_COLOR: moduleCode","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"ProgressCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseTask(task)","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"create Task","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e Task","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"activate Task MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"Task --\u003e ParserUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"deactivate Task","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e ProgressCommandParser -- LOGIC_COLOR: task","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Korochii":96}},{"path":"docs/diagrams/TaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"title TaskCommand\\n","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"participant \"taskCommand:TaskCommand\" as TaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"participant \"pred:StudentIdContainsKeywordsPredicate\" as Predicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"participant \"targetStudent:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"ref over LogicManager: Produce taskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e TaskCommand ++ LOGIC_COLOR: execute(model)","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"create Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"activate Predicate MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"Predicate --\u003e TaskCommand: pred","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"deactivate Predicate","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e Model ++ MODEL_COLOR: updateFilteredPersonList(pred)","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e Model ++ MODEL_COLOR: getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"Model --\u003e TaskCommand MODEL_COLOR: targetStudent:Person","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e Person ++ MODEL_COLOR: getTaskList()","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"Person --\u003e TaskCommand -- MODEL_COLOR: targetTaskList:TaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"ref over TaskCommand: Categorise each task in targetTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e Model ++ MODEL_COLOR: updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"deactivate Model","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"create CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"activate CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"CommandResult --\u003e TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"note right: The CompletedTaskList and IncompleteTaskList\\ncreated in \"Categorise each task in targetTaskList\"\\n will be used in initialising commandResult.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"TaskCommand --\u003e LogicManager -- LOGIC_COLOR: commandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"participant \":TaskCommandParser\" as TaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"participant \"taskCommand:TaskCommand\" as TaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"participant \"studentId:StudentId\" as StudentId MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"mainframe sd Produce taskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"create TaskCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e TaskCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"activate TaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"TaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"deactivate TaskCommandParser","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"AddressBookParser -\u003e TaskCommandParser : parse(arguments)","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"activate TaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"TaskCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"ArgumentTokenizer --\u003e TaskCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"TaskCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseStudentId(studentId)","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"create StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"ParserUtil -\u003e StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"activate StudentId MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"StudentId --\u003e ParserUtil","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"deactivate StudentId","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"ParserUtil --\u003e TaskCommandParser -- MODEL_COLOR: studentId","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"create TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"TaskCommandParser -\u003e TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"activate TaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"TaskCommand --\u003e TaskCommandParser: taskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"deactivate TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"TaskCommandParser --\u003e AddressBookParser -- LOGIC_COLOR: taskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"AddressBookParser --\u003e LogicManager -- LOGIC_COLOR: taskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"!include style.puml","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"participant \"taskCommand:TaskCommand\" as TaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"participant \"targetTaskList:TaskList\" as TargetTaskList MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"participant \"completed:TaskList\" as CompletedTaskList MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"participant \"incomplete:TaskList\" as IncompleteTaskList MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"end box","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"mainframe sd Categorise each task in targetTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"create CompletedTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e CompletedTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"activate CompletedTaskList MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"CompletedTaskList --\u003e TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"deactivate CompletedTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"create IncompleteTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e IncompleteTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"activate IncompleteTaskList MODEL_COLOR","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"IncompleteTaskList --\u003e TaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"deactivate IncompleteTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e TargetTaskList ++ MODEL_COLOR: getTaskList()","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"TargetTaskList --\u003e TaskCommand --: tempList","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"loop for all Tasks in tempList","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"alt task is completed","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e CompletedTaskList ++ MODEL_COLOR: addTask(task)","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"deactivate CompletedTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"else","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"TaskCommand -\u003e IncompleteTaskList ++ MODEL_COLOR: addTask(task)","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"deactivate IncompleteTaskList","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"end","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"end loop","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Korochii":148}},{"path":"docs/diagrams/UnmarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"@startuml","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"title UnmarkCommand\\n","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"participant \":UnmarkCommandParser\" as UnmarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"participant \":UnmarkCommand\" as UnmarkCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"participant \"person:Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"activate LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"activate AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"create UnmarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e UnmarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"activate UnmarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"deactivate UnmarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser -\u003e UnmarkCommandParser : parse(arguments)","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"activate UnmarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser -\u003e ArgumentTokenizer ++ LOGIC_COLOR: tokenize(argsString, prefixes)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"ArgumentTokenizer --\u003e UnmarkCommandParser -- LOGIC_COLOR: argMultimap","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"ref over UnmarkCommandParser: Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"create Person","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser -\u003e Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"activate Person MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"Person --\u003e UnmarkCommandParser --:","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"deactivate Person","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"create UnmarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser -\u003e UnmarkCommand ++ LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommand --\u003e UnmarkCommandParser --:","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"deactivate UnmarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser --\u003e AddressBookParser --: UnmarkCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"deactivate UnmarkCommandParser","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"AddressBookParser --\u003e LogicManager --: UnmarkCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"LogicManager -\u003e UnmarkCommand LOGIC_COLOR : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"activate UnmarkCommand LOGIC_COLOR","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommand -\u003e Model ++ MODEL_COLOR: unmarkTaskOfPerson(studentId, index)","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"Model --\u003e UnmarkCommand --","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"create CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommand -\u003e CommandResult ++ LOGIC_COLOR:","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"CommandResult --\u003e UnmarkCommand --:","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommand --\u003e LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"deactivate UnmarkCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"[\u003c--LogicManager --: commandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"@enduml","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"box \"Logic\" LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"participant \":UnmarkCommandParser\" as UnmarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"box \"Model\" MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"participant \"studentId:StudentId\" as StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"participant \"index:Index\" as Index MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"mainframe sd Parsing each field","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseStudentId(studentId)","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"create StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"ParserUtil -\u003e StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"activate StudentId MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"StudentId --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"deactivate StudentId","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"ParserUtil --\u003e UnmarkCommandParser -- MODEL_COLOR: studentId","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"UnmarkCommandParser -\u003e ParserUtil ++ LOGIC_COLOR: parseIndex(index)","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"create Index","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"ParserUtil -\u003e Index","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"activate Index MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"Index --\u003e ParserUtil","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"deactivate Index","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"ParserUtil --\u003e UnmarkCommandParser -- MODEL_COLOR: index","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"Benjykoh":114}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"title: TAPA","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W09-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W09-4/tp/branch/master/graph/badge.svg?token\u003dCDP6XU44SQ)](https://codecov.io/gh/AY2122S2-CS2103T-W09-4/tp)","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"**TAPA (Teaching Assistant\u0027s Personal Assistant) is a desktop application for TAs to better manage their students and keep track of their progress.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"* If you are interested in using TAPA, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"* If you are interested about developing TAPA, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brelkh":5,"-":14}},{"path":"docs/team/benjykoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"title: Benjamin Koh Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbenjykoh\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"  * to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Benjykoh":39}},{"path":"docs/team/brelkh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"title: Brandon Kheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    * What it does:","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    * Justification:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    * Highlights:","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    * Credits:*{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbrelkh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    * PRs reviewed (with non-trivial review comments): **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    * Contributed to forum discussions (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    * Some parts of the history feature I added was adopted by several other classmates (**(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":43}},{"path":"docs/team/harish-coding.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"title: Saravanan Anuja Harish\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dharish-coding\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"        * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"        * to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    * to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Harish-coding":39}},{"path":"docs/team/korochii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"title: Terng Yan Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dkorochii\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Korochii":40}},{"path":"docs/team/medajet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"title: Jet Tan Ee Kiat\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"  * User Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"    * to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-02-25"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"* **Tools**:","lastModifiedDate":"2022-02-25"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"  * to be added soon","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"medajet":39}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Korochii":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/ManualMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":" * Container for user visible messages regarding the manual commands.","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"public class ManualMessages {","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ADD_COMMAND \u003d \"Adds a student to TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"            + \"Format: add i/STUDENT_ID n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"            + \"[e/EMAIL_ADDRESS] \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: add i/A6942069R n/john m/CS2103T p/98765432 t/johnnn e/e0123456@u.nus.edu\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_DELETE_COMMAND \u003d \"Deletes a student from TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: delete STUDENT_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: delete 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_FIND_COMMAND \u003d \"Allows the user to look up the details of a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: find n/STUDENT_NAME (or) find i/STUDENT_ID \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: find n/John (or) find i/AXXXXXXXR\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_EDIT_COMMAND \u003d \"Edits a student\u0027s information in TAPA. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : edit STUDENT_INDEX [i/STUDENT_ID] [n/STUDENT_NAME] [m/MODULE_CODE] [p/PHONE_NUMBER] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + \"[t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"            + \"Example: edit 1 m/CS2103T p/98765432 t/johnnn e/e0123456z@u.nus.edu\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"    public static final String MANUAL_MESSAGE_CLEAR_COMMAND \u003d \"Clears all students from TAPA. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"            + \"Additionally, the user will be prompted to confirm clear command. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"            + \"*Warning* Clearing TAPA cannot be undone! \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : clear \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: clear\";","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_LIST_COMMAND \u003d \"Displays all the students enrolled in a list. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : list \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: list\";","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_MANUAL_COMMAND \u003d \"Display the format for a specified command and a short\"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            + \" description for a particular command. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : manual [COMMAND_NAME] \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: manual add \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"            + \"Kind of weird that you have to use \u0027manual\u0027... to find out what \u0027manual\u0027 does... :( \"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"            + \"Trying to find a bug?\";","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_HELP_COMMAND \u003d \"Shows a pop-up window explaining how to access the user \"","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"            + \"guide. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : help \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: help\";","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_EXIT_COMMAND \u003d \"Exits the program. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : exit \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: exit\";","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_TASK_COMMAND \u003d \"Displays all the tasks that are allocated to a \"","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"            + \"particular student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: task i/STUDENT_ID \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: task i/A6942069R\";","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_MARK_COMMAND \u003d \"Marks a specific undone task as done for a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : mark i/STUDENT_ID UNDONE_TASK_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: mark i/A6942069R 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_UNMARK_COMMAND \u003d \"Marks a specific done task as undone for a particular \"","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"            + \"student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : unmark i/STUDENT_ID DONE_TASK_INDEX \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: unmark i/A6942069R 1\";","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ARCHIVE_COMMAND \u003d \"Saves a copy of the details currently saved in the \"","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"            + \"address book into a separate file. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : archive \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: archive\";","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ASSIGN_COMMAND \u003d \"Assigns a task to a particular student. \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"            + \"Format : assign i/STUDENT_ID tn/TASK_NAME \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: assign i/A6942069R tn/Watch Lecture\";","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"    public static final String MANUAL_MESSAGE_DELETE_TASK_COMMAND \u003d \"Deletes a task that was previously assigned. \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"            + \"Format: deleteTask i/STUDENT_ID idx/INDEX (or) deleteTask m/MODULE_CODE tn/TASK_NAME \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            + \"Example: deleteTask i/A0123456Z idx/4 (or) deleteTask m/CS2030 tn/Assignment 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    public static final String MANUAL_MESSAGE_PROGRESS_COMMAND \u003d \"Displays the completion status of all students \"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"            + \"who are taking a particular module and are assigned to a particular task. \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"            + \"Format : progress m/MODULE_CODE tn/TASK_NAME \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"            + \"Example: progress m/CS2100 tn/Assignment 1\";","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"    public static final String MANUAL_MESSAGE_HISTORY_COMMAND \u003d \"Displays a list of previously executed commands. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"            + \"(Undone commands will not be shown.) \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"            + \"Format : history \\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"            + \"Example: history\";","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"    public static final String MANUAL_MESSAGE_UNDO_COMMAND \u003d \"Reverts the effect of the most recently executed command \"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"            + \"(except a \\\"clear\\\" command or another \\\"undo\\\" command). \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"            + \"Format : undo \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"            + \"Example: undo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_SORT_COMMAND \u003d \"Sorts the students in TAPA by the number of undone \"","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"            + \"tasks in descending order. \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"            + \"Format: sort \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: sort\";","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_ALL_COMMANDS \u003d \"Here are all the commands: \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"            + \"1. add \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"            + \"2. delete \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"            + \"3. find \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"            + \"4. task \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"            + \"5. mark \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"            + \"6. unmark \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"            + \"7. edit \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"            + \"8. clear \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"            + \"9. archive \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"            + \"10. list \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"            + \"11. assign \\n\"","lastModifiedDate":"2022-03-05"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"            + \"12. progress \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"            + \"13. deleteTask \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"            + \"14. history \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"            + \"15. undo \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"            + \"16. sort \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"            + \"17. manual \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"Benjykoh"},"content":"            + \"18. help \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"Benjykoh"},"content":"            + \"19. exit \\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Benjykoh"},"content":"            + \"Use \u0027manual [COMMAND_NAME] to display the format and a short description for the specified command\";","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":124,"author":{"gitId":"Benjykoh"},"content":"    public static final String MANUAL_MESSAGE_UNKNOWN_COMMANDS \u003d \"Unknown command!\";","lastModifiedDate":"2022-03-05"},{"lineNumber":125,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":96,"Korochii":8,"brelkh":17,"Harish-coding":4}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_NONEXISTENT_STUDENTID \u003d \"There is no person with the specified matriculation \"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"            + \"number!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"medajet":2,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"     * Executes the clear command only if the user confirms their decision.","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"    CommandResult executeClearConfirmation(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"brelkh":9,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"        if (!commandResult.isUndoRequest()) { // Do not add undo and its respective AB to history (or else it will loop)","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"            model.addToCommandHistory(commandText);","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"            model.saveCurrentAddressBookToHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"    public CommandResult executeClearConfirmation(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        Command command \u003d addressBookParser.parseConfirmCommand(commandText);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brelkh":12,"-":91}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE \"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_ADDRESS]\\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"A0123456Z \"","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"CS2103T \"","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"johnny \"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"            + PREFIX_EMAIL + \"e0123456@u.nus.edu \";","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        model.sortFilteredPersonList();","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":15,"brelkh":1,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"import seedu.address.storage.JsonSerializableAddressBook;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" * Saves a copy of the stored data, into a separate json file.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Saves a copy of the stored data, \"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"into a separate json file\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_ARCHIVE_SUCCESS \u003d \"File saved at: \";","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CREATE_FAILURE \u003d \"Error in creating file!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_WRITE_FAILURE \u003d \"Error in writing to file!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        // Extract the current path and address book.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        Path currentPath \u003d model.getAddressBookFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        ReadOnlyAddressBook currentAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        // Generate the new path according to current date and time.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd_HH.mm.ss.SSSSSS\");","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        Path parentPath \u003d currentPath.getParent();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        String dateTime \u003d LocalDateTime.now().format(formatter);","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        Path suffix \u003d Paths.get(dateTime + \".json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        Path newPath \u003d parentPath.resolve(suffix);","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        // Create a new .json file based on the new path above.","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            FileUtil.createIfMissing(newPath);","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_CREATE_FAILURE);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        // Write to the new file that we have created.","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"            JsonUtil.saveJsonFile(new JsonSerializableAddressBook(currentAddressBook), newPath);","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_WRITE_FAILURE);","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        return new CommandResult(MESSAGE_ARCHIVE_SUCCESS + newPath.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"Korochii":64}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.ModuleCodeNotFoundException;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.PartialDuplicateTaskException;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":" * Assigns a task to a student in TAPA.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns a tasks to a student. \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_TASK_NAME + \"TASK_NAME\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"            + PREFIX_ID + \"A0123456Z \"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"            + PREFIX_TASK_NAME + \"assignment 1\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"            + \"or\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE \"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"            + PREFIX_TASK_NAME + \"TASK_NAME\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"            + PREFIX_MODULE_CODE + \"CS2103T \"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"            + PREFIX_TASK_NAME + \"assignment 1\\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task Assigned: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task is already assigned to all students.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no person with the given studentId\";","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"    public static final String MODULE_CODE_NOT_FOUND \u003d \"There is no person taking the given module\";","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    private final Task task;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student ID of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    public AssignCommand(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"        this.moduleCode \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"     * @param moduleCode the module code of the module of which all students are to be assigned a task.","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"    public AssignCommand(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"        this.studentId \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"            if (this.studentId !\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"                model.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"            } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"                model.assignTaskToAllInModule(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"        } catch (DuplicateTaskException dte) {","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        } catch (PersonNotFoundException pnfe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"        } catch (ModuleCodeNotFoundException mnfe) {","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(MODULE_CODE_NOT_FOUND);","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"        } catch (PartialDuplicateTaskException pdte) {","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, task.getTaskName() + \", to some students \"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"                    + \"with Module Code: \" + moduleCode));","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"        } finally {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"        if (this.studentId !\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, task.getTaskName() + \", to student with ID: \"","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"                    + studentId));","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, task.getTaskName()","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"                    + \", to all students with Module Code: \" + moduleCode));","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Benjykoh":46,"Harish-coding":64}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":" * Requests for confirmation from the user to clear TAPA.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_REQUEST_USER_CONFIRMATION \u003d \"Requesting \\\"clear\\\" confirmation from user ...\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"        return new CommandResult(MESSAGE_REQUEST_USER_CONFIRMATION, true);","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brelkh":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"    /** The application should confirm if the user wants to clear the storage. */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"    private final boolean clearRequest;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    /** The application should verify if the user is requesting to undo the last command. */","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    private final boolean undoRequest;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"                         boolean clearRequest, boolean undoRequest) {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"        this.clearRequest \u003d clearRequest;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"        this.undoRequest \u003d undoRequest;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"     * Constructs a {@code CommandResult} with the specified {@code showHelp}, {@code exit} and {@code clearRequest},","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"     * with {@code undoRequest} field set to false.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean clearRequest) {","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"        this(feedbackToUser, showHelp, exit, clearRequest, false);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"     * Constructs a {@code CommandResult} with the specified {@code showHelp} and {@code exit},","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"     * with {@code clearRequest} field set to false.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"        this(feedbackToUser, showHelp, exit, false);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"     * Constructs a {@code CommandResult} with the specified {@code clearRequest},","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"    public CommandResult(String feedbackToUser, boolean clearRequest) {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        this(feedbackToUser, false, false, clearRequest);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"    public boolean isClearRequest() {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"        return clearRequest;","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"    };","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"    public boolean isUndoRequest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"        return undoRequest;","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 clearRequest \u003d\u003d otherCommandResult.clearRequest","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 undoRequest \u003d\u003d otherCommandResult.undoRequest;","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, clearRequest, undoRequest);","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brelkh":46,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/ConfirmClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":" * Clears TAPA.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"public class ConfirmClearCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    public static final String COMMAND_WORD \u003d \"confirm\";","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_CLEAR_ACKNOWLEDGEMENT \u003d \"TAPA has been completely cleared, as requested!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"        // reset command history and address book history","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"        model.clearCommandHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"        model.clearAddressBookHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        return new CommandResult(MESSAGE_CLEAR_ACKNOWLEDGEMENT);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"brelkh":28}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list \"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"            + \"or matriculation number.\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"            + \"Parameters: INDEX (must be a positive integer) or STUDENT_ID\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"            + \" or \" + COMMAND_WORD + \" \" + PREFIX_ID + \"A0123456Z\\n\";","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_DELETE_MULTIPLE_PERSONS_SUCCESS \u003d \"%s students deleted\";","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"    private final Index[] targetIndices;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"    private final StudentId targetId;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"     * Creates a DeleteCommand to delete the specified {@code Person} using the specified index.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"    public DeleteCommand(Index[] targetIndices) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"        this.targetIndices \u003d targetIndices;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        this.targetId \u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"     * Creates a DeleteCommand to delete the specified {@code Person} using the specified student id.","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"    public DeleteCommand(StudentId targetId) {","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"        this.targetId \u003d targetId;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"        this.targetIndices \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"        if (targetIndices !\u003d null) { // indices were used for the command","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"            int numberOfDeletions \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"            ArrayList\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"            for (Index currIndex : targetIndices) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"                if (currIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"                Person personToDelete \u003d lastShownList.get(currIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"                personsToDelete.add(personToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"            for (Person person : personsToDelete) {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"                model.deletePerson(person);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"                numberOfDeletions++;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"            if (numberOfDeletions \u003d\u003d 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personsToDelete.get(0)));","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"medajet"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_MULTIPLE_PERSONS_SUCCESS, numberOfDeletions));","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"        } else { // student id was used for the command","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"medajet"},"content":"            assert targetId !\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"            StudentIdContainsKeywordsPredicate pred \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"                    new StudentIdContainsKeywordsPredicate(Collections.singletonList(targetId.toString()));","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(pred);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"            if (model.getFilteredPersonList().size() \u003e 0) { // person with specified id exists","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"                Person personToDelete \u003d lastShownList.get(Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"                model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"                throw new CommandException(Messages.MESSAGE_NONEXISTENT_STUDENTID);","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"medajet"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"            boolean isInstanceOf \u003d other instanceof DeleteCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"medajet"},"content":"            if (!isInstanceOf) { // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"            DeleteCommand commandToCompare \u003d (DeleteCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"medajet"},"content":"            if (this.targetId \u003d\u003d null \u0026\u0026 this.targetIndices !\u003d null) { // only targetIndices present","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"medajet"},"content":"                return Arrays.equals(targetIndices, commandToCompare.targetIndices); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"medajet"},"content":"            } else if (this.targetIndices \u003d\u003d null \u0026\u0026 this.targetId !\u003d null) { // only targetId present","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"medajet"},"content":"                return targetId.equals(commandToCompare.targetId); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"medajet"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjykoh":2,"medajet":74,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":" * Deletes all students identified using the inputted module code from the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"    public static final String COMMAND_WORD \u003d \"deleteModule\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"            + \": Deletes all students identified by the module code inputted.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"            + \"Parameters: MODULE_CODE\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MODULE_CODE + \"CS2100\\n\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_DELETE_MULTIPLE_PERSONS_SUCCESS \u003d \"%s student(s) deleted\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_NONEXISTENT_MODULE_CODE \u003d \"There are no students \"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"            + \"with the specified module code\";","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"    private final ModuleCodeContainsKeywordsPredicate modCodePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"     * Creates a DeleteModuleCommand to delete {@code Person}s specified by the inputted module code.","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"    public DeleteModuleCommand(ModuleCodeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"        this.modCodePredicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"        assert this.modCodePredicate !\u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"        int deletedCount \u003d 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"        model.updateFilteredPersonList(this.modCodePredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"            return new CommandResult(MESSAGE_NONEXISTENT_MODULE_CODE);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"        while (model.getFilteredPersonList().size() \u003e 0) { // students with specified module code exist","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"            Person personToDelete \u003d lastShownList.get(Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"            deletedCount++;","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(this.modCodePredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MULTIPLE_PERSONS_SUCCESS, deletedCount));","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"            boolean isInstanceOf \u003d other instanceof DeleteModuleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"            if (!isInstanceOf) { // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"            DeleteModuleCommand commandToCompare \u003d (DeleteModuleCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"            return this.modCodePredicate.equals((commandToCompare).modCodePredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"medajet":79}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.ModuleCodeNotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":" * Deletes a tasks assigned to a student or a student taking a module.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"            + \": Deletes a specific task for a particular student. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"            + \"Parameters: \" + PREFIX_ID + \"STUDENT_ID \" + PREFIX_INDEX + \"INDEX\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ID + \"A0123456Z \" + PREFIX_INDEX + \"1\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"            + \"or\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"            + \"Parameters: \" + PREFIX_MODULE_CODE + \"MODULE_CODE \" + PREFIX_TASK_NAME + \"TASK_NAME\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MODULE_CODE + \"CS2030 \" + PREFIX_TASK_NAME + \"Assignment 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Task for %1$s deleted.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_MODULE_CODE_NOT_FOUND \u003d \"There is no person taking the given module.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"There is no person assigned to the given task.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no person with the given studentId.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid index.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    private final Optional\u003cIndex\u003e index;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    private final Optional\u003cModuleCode\u003e moduleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"    private final Optional\u003cStudentId\u003e studentId;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    private final Optional\u003cTask\u003e task;","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     * Creates a DeleteTaskCommand to delete the {@code Task} of the specified {@code Person} using the specified index.","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    public DeleteTaskCommand(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d Optional.of(studentId);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        this.index \u003d Optional.of(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        this.moduleCode \u003d Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"     * Creates a DeleteTaskCommand to delete the {@code Task} assigned to any {@code Person} taking {@code moduleCode}.","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"    public DeleteTaskCommand(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"        this.moduleCode \u003d Optional.of(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"        this.task \u003d Optional.of(task);","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"        this.index \u003d Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using if conditionals.","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"            if (studentId.isPresent() \u0026\u0026 index.isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"                model.deleteTaskOfPerson(studentId.get(), index.get());","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"            } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"                model.deleteTaskForAllInModule(moduleCode.get(), task.get());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"        } catch (InvalidTaskIndexException invalidTaskIndexException) {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(INVALID_TASK_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"        } catch (PersonNotFoundException personNotFoundException) {","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        } catch (ModuleCodeNotFoundException moduleCodeNotFoundException) {","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_MODULE_CODE_NOT_FOUND);","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        } catch (TaskNotFoundException taskNotFoundException) {","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"            throw new CommandException(MESSAGE_TASK_NOT_FOUND);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        } finally {","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS,","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"                studentId.isPresent() ? studentId.get() : moduleCode.get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"        boolean isEquals \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"            isEquals \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"            boolean isInstanceOf \u003d other instanceof DeleteTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"            if (!isInstanceOf) {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"            DeleteTaskCommand commandToCompare \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"            // check both student id and index.","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"            if (this.studentId.isPresent() \u0026\u0026 this.index.isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"                isEquals \u003d studentId.equals(commandToCompare.studentId) \u0026\u0026 index.equals(commandToCompare.index);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"            // check both module code and task.","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"            if (this.moduleCode.isPresent() \u0026\u0026 this.task.isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"                isEquals \u003d moduleCode.equals(commandToCompare.moduleCode) \u0026\u0026 task.equals(commandToCompare.task);","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"        return isEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Harish-coding":128}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_ID + \"STUDENT_ID] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_NAME + \"STUDENT_NAME] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_MODULE_CODE + \"MODULE_CODE] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_ADDRESS]\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"        StudentId updatedStudentId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"brelkh"},"content":"        ModuleCode updatedModuleCode \u003d editPersonDescriptor.getModuleCode().orElse(personToEdit.getModuleCode());","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"        TelegramHandle updatedTelegramHandle \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"                editPersonDescriptor.getTelegramHandle().orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"        TaskList updatedTaskList \u003d personToEdit.getTaskList();","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"        return new Person(updatedStudentId, updatedName, updatedModuleCode,","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"                updatedPhone, updatedTelegramHandle, updatedEmail, updatedTaskList);","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"        private StudentId studentId;","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"        private ModuleCode moduleCode;","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"brelkh"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"brelkh"},"content":"            setModuleCode(toCopy.moduleCode);","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"brelkh"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"            return CollectionUtil.isAnyNonNull(studentId, name, moduleCode, phone, telegramHandle, email);","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"brelkh"},"content":"        public void setModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"brelkh"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"brelkh"},"content":"        public Optional\u003cModuleCode\u003e getModuleCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"brelkh"},"content":"            return Optional.ofNullable(moduleCode);","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"brelkh"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"brelkh"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"brelkh"},"content":"            return getStudentId().equals(e.getStudentId())","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"brelkh"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"                    \u0026\u0026 getModuleCode().equals(e.getModuleCode())","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"                    \u0026\u0026 getTelegramHandle().equals(e.getTelegramHandle())","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail());","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Benjykoh":3,"brelkh":49,"-":179}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":" * Finds and lists all persons in address book whose name, student id or module code","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":" * matches any of the argument keywords.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose details match \"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"            + \"the specified search term (ie. name, matriculation number or module code) \"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"STUDENT_NAME \" + \"or \" + PREFIX_ID + \"STUDENT_ID \" + \"or \"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John \" + \"or \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"            + PREFIX_ID + \"A0123456Z \" + \"or \" + COMMAND_WORD + \" \" + PREFIX_MODULE_CODE + \"CS2103T\\n\";","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"    private final StudentIdContainsKeywordsPredicate idPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"    private final ModuleCodeContainsKeywordsPredicate modCodePredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"     * Creates a FindCommand to find the specified {@code Person} using the person\u0027s name.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"        this.namePredicate \u003d predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"        this.idPredicate \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"        this.modCodePredicate \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"     * Creates a FindCommand to find the specified {@code Person} using the person\u0027s student id.","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"    public FindCommand(StudentIdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"        this.idPredicate \u003d predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"        this.namePredicate \u003d null;","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"        this.modCodePredicate \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"     * Creates a FindCommand to find the specified {@code Person} using the person\u0027s module code.","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"    public FindCommand(ModuleCodeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"        this.modCodePredicate \u003d predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"        this.namePredicate \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        this.idPredicate \u003d null;","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"        if (namePredicate !\u003d null) { // student name was used for the command","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"        } else if (idPredicate !\u003d null) { // student id was used for the command","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(idPredicate);","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"        } else { // module code was used for the command","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"            model.updateFilteredPersonList(modCodePredicate);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"        boolean isEquals \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"medajet"},"content":"            isEquals \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"            boolean isInstanceOf \u003d other instanceof FindCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"            if (!isInstanceOf) { // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"                return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"            FindCommand commandToCompare \u003d (FindCommand) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"            // only idPredicate present","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"            if (this.namePredicate \u003d\u003d null \u0026\u0026 this.idPredicate !\u003d null \u0026\u0026 this.modCodePredicate \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"                isEquals \u003d idPredicate.equals(commandToCompare.idPredicate); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"            // only namePredicate present","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"medajet"},"content":"            if (this.idPredicate \u003d\u003d null \u0026\u0026 this.namePredicate !\u003d null \u0026\u0026 this.modCodePredicate \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"                isEquals \u003d namePredicate.equals(commandToCompare.namePredicate); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"            // only modCodePredicate present","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"            if (this.idPredicate \u003d\u003d null \u0026\u0026 this.namePredicate \u003d\u003d null \u0026\u0026 this.modCodePredicate !\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"                isEquals \u003d modCodePredicate.equals(commandToCompare.modCodePredicate); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"medajet"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"        return isEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"medajet":71,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":" * Displays previously used commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_NO_PREVIOUS_HISTORY \u003d \"No commands have been used yet.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying previously used commands \"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"            + \"(from earliest to most recent):\\n%1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"        if (model.isCommandHistoryEmpty() || model.getCommandHistory() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"            throw new CommandException(MESSAGE_NO_PREVIOUS_HISTORY);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        CommandHistory commandHistory \u003d model.getCommandHistory();","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, commandHistory.display()));","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"brelkh":28}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"        model.sortFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":24,"Harish-coding":1}},{"path":"src/main/java/seedu/address/logic/commands/ManualCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.ManualMessages;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":" * Display the format for a specified command and a short description for a particular command.","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"public class ManualCommand extends Command {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"    public static final String COMMAND_WORD \u003d \"manual\";","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"    private final String commandName;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"    public ManualCommand(String commandName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        this.commandName \u003d commandName;","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"        switch (commandName) {","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"        case (\"\"):","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ALL_COMMANDS);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ADD_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_DELETE_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_FIND_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_EDIT_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_CLEAR_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_LIST_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"        case ManualCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_MANUAL_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_HELP_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_EXIT_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_TASK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_MARK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_UNMARK_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ARCHIVE_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_ASSIGN_COMMAND);","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_DELETE_TASK_COMMAND);","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        case ProgressCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_PROGRESS_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_HISTORY_COMMAND);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_UNDO_COMMAND);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"            return new CommandResult(ManualMessages.MANUAL_MESSAGE_SORT_COMMAND);","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"        default:","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(ManualMessages.MANUAL_MESSAGE_UNKNOWN_COMMANDS);","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":78,"Korochii":3,"brelkh":6,"Harish-coding":3}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.TaskAlreadyCompleteException;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":" * Marks a specific undone task as done for a particular student.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"            + \": Marks a specific undone task as done for a particular student. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"            + \"Parameters: STUDENT_ID and INDEX \\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ID + \"A0123456Z \" + PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    public static final String MARKED_TASK_SUCCESS \u003d \"Task for %1$s marked\";","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no person with the given studentId\";","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    public static final String TASK_ALREADY_DONE \u003d \"Task is already marked as done\";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid index\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"    private final Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"     * Creates a MarkCommand to mark the {@code Task} of the specified {@code Person} using the specified index.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"    public MarkCommand(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"            model.markTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"        } catch (InvalidTaskIndexException invalidTaskIndexException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(INVALID_TASK_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"        } catch (TaskAlreadyCompleteException taskAlreadyCompleteException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(TASK_ALREADY_DONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"        } catch (PersonNotFoundException personNotFoundException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"        } finally {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"        return new CommandResult(String.format(MARKED_TASK_SUCCESS, studentId));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"        boolean isEquals \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"            isEquals \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"            boolean isInstanceOf \u003d other instanceof MarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"            if (!isInstanceOf) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"            MarkCommand commandToCompare \u003d (MarkCommand) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"            // check both student id and index","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"            if (this.studentId !\u003d null \u0026\u0026 this.index !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"                isEquals \u003d studentId.equals(commandToCompare.studentId) \u0026\u0026 index.equals(commandToCompare.index);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"        return isEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":87}},{"path":"src/main/java/seedu/address/logic/commands/ProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.util.Map;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":" * Displays the completion status of all students who are taking a particular module","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * and are assigned to a particular task.","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"public class ProgressCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public static final String COMMAND_WORD \u003d \"progress\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + \": Displays the completion status of all students who are taking a particular module \"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"and are assigned to a particular task. \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE \"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + PREFIX_TASK_NAME + \"TASK_NAME \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"CS2100 \"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            + PREFIX_TASK_NAME + \"Assignment 1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s has been assigned to the following students in [%2$s]:\\n\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            + \"%3$s\";","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_NO_RESULTS_FOUND \u003d \"This task is not assigned to any student in this module!\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"            + \"Perhaps you might want to assign this task to a student, using the \u0027assign\u0027 command?\";","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    private final Task task;","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * Constructs a new ProgressCommand.","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * @param task the task that the user wants to know more about the progress.","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public ProgressCommand(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        assert task !\u003d null; // task should not be null, as it is specified by the user.","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        LinkedHashMap\u003cPerson, Boolean\u003e possiblePairings \u003d model.checkProgress(moduleCode, task);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        if (possiblePairings !\u003d null \u0026\u0026 possiblePairings.isEmpty()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_NO_RESULTS_FOUND);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        assert possiblePairings !\u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        for (Map.Entry\u003cPerson, Boolean\u003e entry : possiblePairings.entrySet()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"            Person currPerson \u003d entry.getKey();","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            Boolean isCompleted \u003d entry.getValue();","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"            result.append(currPerson.getName()).append(\" (\").append(currPerson.getStudentId()).append(\"): \");","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            if (isCompleted) { // This student has already completed the task.","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"                String tick \u003d \"\\u2713\"; // unicode representation of a check symbol","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"                result.append(tick).append(\"\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"                String cross \u003d \"\\u274C\"; // unicode representation of a cross symbol","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"                result.append(cross).append(\"\\n\");","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, task.getTaskName(), moduleCode, result));","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"                || (other instanceof ProgressCommand // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 task.equals(((ProgressCommand) other).task)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Korochii":87}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":" * Sorts all students in TAPA by the number of incomplete tasks left.","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all students\";","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"        model.sortFilteredPersonListByTaskLeft();","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Benjykoh":23}},{"path":"src/main/java/seedu/address/logic/commands/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" * Displays the list of task that a particular student currently has.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + \": Displays all the tasks that are allocated to a particular student. \"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"A0123456Z\";","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the tasks that %1$s has:\\n\\n\" + \"%2$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_EMPTY_TASKLIST \u003d \"No task assigned to this student.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            + \"Perhaps you might want to assign a task using the \u0027assign\u0027 command?\";","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no student with the specified Student ID!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * Constructs a new TaskCommand.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     * @param studentId the student ID of the student to display the tasks of.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public TaskCommand(StudentId studentId) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        // Checks if a student with the specified studentId exist.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        assert studentId !\u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        StudentIdContainsKeywordsPredicate pred \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(studentId.toString()));","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        model.updateFilteredPersonList(pred);","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) { // Student with specified studentId does not exist","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        // There should only be a single student with this studentId since studentId is a UNIQUE field.","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        Person targetStudent \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        TaskList targetTaskList \u003d targetStudent.getTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        // Resets model so that it displays all students (since we have already extracted the Person of interest).","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        // Empty or non-existent taskList","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        if (targetTaskList \u003d\u003d null || targetTaskList.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"            throw new CommandException(MESSAGE_EMPTY_TASKLIST);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        // Categorises the tasks into two new TaskList, depending on the completion status.","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        TaskList incompleteTasks \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        TaskList completedTasks \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        for (Task i : targetTaskList.getTaskList()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            if (i.isTaskComplete()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                completedTasks.addTask(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"                incompleteTasks.addTask(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        if (incompleteTasks.isEmpty()) { // This means that all tasks are completed.","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"                    \"Completed tasks:\\n\" + completedTasks.display()));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        } else if (completedTasks.isEmpty()) { // This means that all tasks are incomplete.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"                    \"Incomplete tasks:\\n\" + incompleteTasks.display()));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"        } else { // Mixture of different types of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, studentId,","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"                    \"Incomplete tasks:\\n\" + incompleteTasks.display() + \"\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"                            + \"Completed tasks:\\n\" + completedTasks.display()));","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"                || (other instanceof TaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 studentId.equals(((TaskCommand) other).studentId)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Korochii":104}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":" * Reverts the effect of the most recently executed command (except another {@code UndoCommand}).","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_NO_COMMAND_TO_UNDO \u003d \"There are no commands to undo.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Command undone:\\n\\\"%1$s\\\"\";","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"        if (model.isCommandHistoryEmpty() || model.getCommandHistory() \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"            throw new CommandException(MESSAGE_NO_COMMAND_TO_UNDO);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"        String previousCommand \u003d model.getPreviousCommandText();","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        if (model.isAddressBookHistoryEmpty() || model.getAddressBookHistory() \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"            throw new CommandException(MESSAGE_NO_COMMAND_TO_UNDO);","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, previousCommand),","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"                false, false, false, true);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"brelkh":34}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.TaskAlreadyNotCompleteException;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"            + \": Marks a specific done task as undone for a particular student. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"            + \"Parameters: STUDENT_ID and INDEX \\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ID + \"A0123456Z \" + PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    public static final String MARKED_TASK_SUCCESS \u003d \"Task for %1$s unmarked\";","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no person with the given studentId\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"    public static final String TASK_ALREADY_NOT_DONE \u003d \"Task is already marked as undone\";","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    public static final String INVALID_TASK_INDEX \u003d \"Invalid index\";","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"    private final Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"     * Creates a UnmarkCommand to unmark the {@code Task} of the specified {@code Person} using the specified index.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    public UnmarkCommand(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"            requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"            model.unmarkTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        } catch (InvalidTaskIndexException invalidTaskIndexException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(INVALID_TASK_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"        } catch (TaskAlreadyNotCompleteException taskAlreadyNotCompleteException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(TASK_ALREADY_NOT_DONE);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"        } catch (PersonNotFoundException personNotFoundException) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        } finally {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"        return new CommandResult(String.format(MARKED_TASK_SUCCESS, studentId));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"        boolean isEquals \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"            isEquals \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"            boolean isInstanceOf \u003d other instanceof UnmarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"            if (!isInstanceOf) {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"            UnmarkCommand commandToCompare \u003d (UnmarkCommand) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"            // check both student id and index","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"            if (this.studentId !\u003d null \u0026\u0026 this.index !\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"                isEquals \u003d studentId.equals(commandToCompare.studentId) \u0026\u0026 index.equals(commandToCompare.index);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"        return isEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":83}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE,","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL);","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        // Check if compulsory fields are present in the user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        ModuleCode module \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currPhone \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        if (currPhone.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            phone \u003d ParserUtil.parsePhone(currPhone.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currTelegramHandle \u003d argMultimap.getValue(PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d ParserUtil.parseTelegramHandle(currTelegramHandle.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currEmail \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        if (currEmail.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"            email \u003d ParserUtil.parseEmail(currEmail.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        Person person \u003d new Person(studentId, name, module, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Korochii":39,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"import seedu.address.logic.commands.ConfirmClearCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"import seedu.address.logic.commands.HistoryCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.ManualCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.ProgressCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"        case DeleteModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"            return new DeleteModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"        case ManualCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"            return new ManualCommandParser().parse(arguments);","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-06"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"            return new ArchiveCommand();","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"            return new TaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"        case ProgressCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"            return new ProgressCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"            return new SortCommand();","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"            return new HistoryCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"     * Parses user input only for confirmation after the user requests to clear address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"brelkh"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"brelkh"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"brelkh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"brelkh"},"content":"    public Command parseConfirmCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"brelkh"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"brelkh"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"brelkh"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"brelkh"},"content":"        case ConfirmClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"brelkh"},"content":"            return new ConfirmClearCommand();","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"brelkh"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"brelkh"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjykoh":16,"Korochii":12,"brelkh":31,"medajet":4,"-":76,"Harish-coding":8}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":" * Parses input arguments and creates a new AssignCommand object.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * @param args String to parse.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @return AssignCommand to execute.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_MODULE_CODE, PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"        // Check if fields are present in the user input.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_TASK_NAME)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"            Optional\u003cString\u003e currStudentId \u003d argMultimap.getValue(PREFIX_ID);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(currStudentId.get());","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"            Optional\u003cString\u003e currTask \u003d argMultimap.getValue(PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"            Task task \u003d ParserUtil.parseTask(currTask.get());","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"            return new AssignCommand(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE, PREFIX_TASK_NAME)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"            Optional\u003cString\u003e currModuleCode \u003d argMultimap.getValue(PREFIX_MODULE_CODE);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"            ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(currModuleCode.get());","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"            Optional\u003cString\u003e currTask \u003d argMultimap.getValue(PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"            Task task \u003d ParserUtil.parseTask(currTask.get());","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"            return new AssignCommand(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Benjykoh":19,"Harish-coding":52}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_MODULE_CODE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    public static final Prefix PREFIX_TASK_NAME \u003d new Prefix(\"tn/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"idx/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Benjykoh":1,"Korochii":3,"-":12,"Harish-coding":1}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied neither index nor id","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID) \u0026\u0026 !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"            // supplied both index and id","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID)) { // supplied id only","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"            StudentId id \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"            deleteCommand \u003d new DeleteCommand(id);","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"        } else { // supplied index only","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"                String[] arr \u003d argMultimap.getPreamble().split(\"\\\\s+\");","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"                Index[] targetIndices \u003d new Index[arr.length];","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"                for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"                    targetIndices[i] \u003d ParserUtil.parseIndex(arr[i]);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"                deleteCommand \u003d new DeleteCommand(targetIndices);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"        return deleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"medajet":33,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":" * Parses input arguments and creates a new DeleteModuleCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"public class DeleteModuleCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteModuleCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"     * and returns a DeleteModuleCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"        DeleteModuleCommand deleteModuleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE_CODE);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE) // did not supply module code or preamble is not empty","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"medajet"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"            ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"            String[] modCodeKeywords \u003d moduleCode.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"            deleteModuleCommand \u003d new DeleteModuleCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"                    new ModuleCodeContainsKeywordsPredicate(Arrays.asList(modCodeKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"        return deleteModuleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"medajet":50}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object.","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand and returns a","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"     * DeleteTaskCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Harish-coding"},"content":"     * @param args String to parse.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Harish-coding"},"content":"     * @return DeleteTaskCommand to execute.","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Harish-coding"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Harish-coding"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"        DeleteTaskCommand deleteTaskCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_INDEX, PREFIX_MODULE_CODE, PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied neither index nor id nor module code nor task name","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID) // supplied either index or id","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"            deleteTaskCommand \u003d indexOrStudentIdGiven(argMultimap);","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"            deleteTaskCommand \u003d moduleCodeOrTaskNameGiven(argMultimap);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        return deleteTaskCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"    private static DeleteTaskCommand indexOrStudentIdGiven(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no index","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no id","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"            try {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"                StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"                return new DeleteTaskCommand(studentId, index);","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"                throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    private static DeleteTaskCommand moduleCodeOrTaskNameGiven(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE) // supplied no task name","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE) // supplied no module code","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_TASK_NAME)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"            try {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"                ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"                Task task \u003d ParserUtil.parseTask(argMultimap.getValue(PREFIX_TASK_NAME).get());","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"                return new DeleteTaskCommand(moduleCode, task);","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"                throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Harish-coding":96}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_PHONE, PREFIX_MODULE_CODE,","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"            editPersonDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"        if (argMultimap.getValue(PREFIX_MODULE_CODE).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"            editPersonDescriptor.setModuleCode(ParserUtil.parseModuleCode(","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"                    argMultimap.getValue(PREFIX_MODULE_CODE).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"            editPersonDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Benjykoh":5,"brelkh":11,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"        FindCommand findCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_MODULE_CODE);","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"        // user inputted more than one search term (ie. name, id, or moduleCode)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"medajet"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"medajet"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"medajet"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"medajet"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME)) { // name was used","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"            String[] nameKeywords \u003d name.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"            findCommand \u003d new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID)) { // student id was used","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"            String[] idKeywords \u003d studentId.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"            findCommand \u003d new FindCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE)) { // module code was used","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"            ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"            String[] modCodeKeywords \u003d moduleCode.toString().split(\"\\\\s+\");","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"            findCommand \u003d new FindCommand(new ModuleCodeContainsKeywordsPredicate(Arrays.asList(modCodeKeywords)));","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"        } else {","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"        return findCommand;","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"medajet":43,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ManualCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.ManualCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":" * Parses input arguments and creates a new ManualCommand object","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"public class ManualCommandParser implements Parser\u003cManualCommand\u003e {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"     * Parses the given {@code String} of arguments in the context of the ManualCommand","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"     * and returns a ManualCommand object for execution.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"    public ManualCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        return new ManualCommand(trimmedArgs);","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"Benjykoh":20}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand and returns a MarkCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"     * object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied neither index nor id","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no index","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no id","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"            try {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"                StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"                markCommand \u003d new MarkCommand(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"                throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"        return markCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":57}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        String trimmedStudentId \u003d studentId.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(trimmedStudentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"        return new StudentId(trimmedStudentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String moduleCode} into an {@code ModuleCode}.","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"        String trimmedModuleCode \u003d moduleCode.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String telegramHandle} into an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"     * Parses a {@code String task} into a {@code Task}.","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     * @throws ParseException if the given {@code task} is invalid.","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"    public static Task parseTask(String task) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"        String trimmedTask \u003d task.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"        if (!Task.isValidTaskName(trimmedTask)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"            throw new ParseException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        return new Task(trimmedTask);","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Korochii":40,"-":86,"Harish-coding":11}},{"path":"src/main/java/seedu/address/logic/parser/ProgressCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_NAME;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.ProgressCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":" * Parses input arguments and creates a new ProgressCommand object.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"public class ProgressCommandParser implements Parser\u003cProgressCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"     * Parses the given {@code String} of arguments in the context of the ProgressCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"     * and returns an ProgressCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     * @param args String to parse.","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * @return ProgressCommand to execute.","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    public ProgressCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE_CODE, PREFIX_TASK_NAME);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        // Check if fields are present in the user input.","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE_CODE, PREFIX_TASK_NAME)","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProgressCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        Task task \u003d ParserUtil.parseTask(argMultimap.getValue(PREFIX_TASK_NAME).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        return new ProgressCommand(moduleCode, task);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Korochii":54}},{"path":"src/main/java/seedu/address/logic/parser/TaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":" * Parses input arguments and creates a new TaskCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"public class TaskCommandParser implements Parser\u003cTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * and returns a TaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public TaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        TaskCommand taskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID);","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ID) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            taskCommand \u003d new TaskCommand(studentId);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        return taskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"Korochii":44}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand and returns a UnmarkCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"     * object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied neither index nor id","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no index","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"        } else if (!arePrefixesPresent(argMultimap, PREFIX_ID) // supplied no id","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"            try {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"                StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"                unmarkCommand \u003d new UnmarkCommand(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"                throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        return unmarkCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":56}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code task} to {@code Person} with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"        persons.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"Benjykoh"},"content":"     * Assigns {@code task} to {@code Person} with {@code moduleCode}.","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"Benjykoh"},"content":"     * @param moduleCode the module code of the module of which all students are to be assigned a task.","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"Benjykoh"},"content":"    public void assignTaskToAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"Benjykoh"},"content":"        persons.assignTaskToAllInModule(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"     * Deletes task with {@code index} belonging to {@code Person} with {@code studentId}.","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person whose task is to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"        persons.deleteTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"     * Deletes task assigned to any {@code Person} with {@code moduleCode}.","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"Harish-coding"},"content":"     * @param moduleCode the module code of the person whose task is to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskForAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"        persons.deleteTaskForAllInModule(moduleCode, task);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"Benjykoh"},"content":"     * Marks task with {@code index} belonging to {@code Person} with {@code studentId} as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person whose task is to be marked.","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"Benjykoh"},"content":"     * @param index the task to be marked as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"Benjykoh"},"content":"    public void markTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"Benjykoh"},"content":"        persons.markTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"Benjykoh"},"content":"     * Marks task with {@code index} belonging to {@code Person} with {@code studentId} as undone.","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person whose task is to be marked.","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"Benjykoh"},"content":"     * @param index the task to be marked as undone.","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"Benjykoh"},"content":"    public void unmarkTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"Benjykoh"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"Benjykoh"},"content":"        persons.unmarkTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"     * Sorts the list of persons in alphabetical order by their name.","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"    public void sortPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"        persons.sortList();","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":188,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"Benjykoh"},"content":"     * Sorts the list of students in descending order of the number of incomplete tasks.","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"Benjykoh"},"content":"    public void sortPersonListByTaskLeft() {","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"Benjykoh"},"content":"        persons.sortListByTaskLeft();","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"     * Returns a key-value pair between each {@code person} and the completion status of a task,","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"     * if the person is taking the specified module and is being assigned with the specified task.","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"     * @param moduleCode target moduleCode to be compared with.","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"     * @param task target task to be compared with","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"     * @return LinkedHashMap containing valid person/completion status pair.","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"    public LinkedHashMap\u003cPerson, Boolean\u003e checkProgress(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"        return persons.checkProgress(moduleCode, task);","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"        //return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        //TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"brelkh"},"content":"        for (Person p : getPersonList()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"brelkh"},"content":"            sb.append(p.toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Benjykoh":45,"Korochii":17,"brelkh":7,"-":119,"Harish-coding":52}},{"path":"src/main/java/seedu/address/model/AddressBookHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":" * Stores a list of address books as they are updated throughout the current user session.","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"public class AddressBookHistory {","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"    private final ArrayList\u003cAddressBook\u003e addressBooks;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"     * Creates an AddressBookHistory which stores AddressBooks after each","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"     * successful user command.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    public AddressBookHistory(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"        addressBooks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"        addressBooks.add(new AddressBook(addressBook));","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"    public void addAddressBook(AddressBook addressBook) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"        addressBooks.add(new AddressBook(addressBook));","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        return addressBooks.isEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"     * Returns the AddressBook that was saved in AddressBookHistory","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     * before the execution of previous command.","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"    public AddressBook getPreviousAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"        if (addressBooks.size() \u003d\u003d 1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"            return addressBooks.get(0);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"        // AB state after previous command must be removed first.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"        int undoneCommandAddressBookIndex \u003d addressBooks.size() - 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"        addressBooks.remove(undoneCommandAddressBookIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"        // AB state before previous command is restored.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"        int previousAddressBookIndex \u003d addressBooks.size() - 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"        AddressBook previousAddressBook \u003d addressBooks.get(previousAddressBookIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"        return previousAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"     * Clears address book history and sets the initial address book in history to an empty address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"    public void clearHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"        addressBooks.clear();","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"        addressBooks.add(new AddressBook());","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"        if (!(obj instanceof AddressBookHistory)) { //this handles null as well.","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        AddressBookHistory otherAddressBookHistory \u003d (AddressBookHistory) obj;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"        return addressBooks.equals(otherAddressBookHistory.addressBooks);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"        for (AddressBook ab : addressBooks) {","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"            counter++;","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"            sb.append(counter + \". \");","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"            sb.append(ab.toString());","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"brelkh":81}},{"path":"src/main/java/seedu/address/model/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":" * Stores a list of previously executed commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"public class CommandHistory {","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"    private final ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"    public CommandHistory() {}","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"     * Returns true if command history does not contain any commands.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"     * @return true if command history does not contain any commands","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"        return commands.isEmpty();","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"     * Adds the specified command to command history.","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    public void addToHistory(String commandText) {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"        commands.add(commandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"     * Returns the latest command used and removes it from history.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    public String popPreviousCommand() {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        int previousCommandIndex \u003d commands.size() - 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"        String previousCommand \u003d commands.remove(previousCommandIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"        return previousCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"     * Clears the command history.","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"    public void clearHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"        commands.clear();","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"brelkh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"brelkh"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"        if (!(obj instanceof CommandHistory)) { //this handles null as well.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"        CommandHistory otherCommandHistory \u003d (CommandHistory) obj;","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        return commands.equals(otherCommandHistory.commands);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"     * Displays the commands in command history as a String.","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"     * @return String representing the commands in command history","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    public String display() {","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        for (String command : commands) {","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"            index++;","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"            sb.append(index + \". \");","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"            sb.append(command);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"brelkh":73}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"     * Returns the AddressBook that was saved before the last user command was executed.","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"    ReadOnlyAddressBook getPreviousAddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"     * Adds AddressBook to the list of address books that are saved with each user command.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"    void saveCurrentAddressBookToHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"     * Returns the history of address books following the user\u0027s commands.","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"    AddressBookHistory getAddressBookHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"     * Returns true if the address book history is empty.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"    boolean isAddressBookHistoryEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"     * Replaces the current address book with one that was saved before the last user command was executed.","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"    void undoAddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"     * Clears the user\u0027s address book history.","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"    void clearAddressBookHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code Task} to {@code person} with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * A person with {@code studentId} must exist in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     * The {@code task} should be unique and not a duplicate of already assigned task.","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"    void assignTaskToPerson(StudentId studentId, Task task);","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"     * Deletes {@code Task} assigned to {@code person} with {@code studentId}.","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"     * A person with {@code studentId} must exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"     * A {@code task} at {@code Index} should exist.","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    void deleteTaskOfPerson(StudentId studentId, Index index);","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"     * Deletes {@code Task} assigned to {@code person} with {@code moduleCode}.","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"     * A person with {@code moduleCode} must exist in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"     * A {@code task} with the exact task name as given by the user should exist.","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"    void deleteTaskForAllInModule(ModuleCode moduleCode, Task task);","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"Benjykoh"},"content":"     * Assigns {@code Task} to 1 or more {@code person} with taking the module with the {@code moduleCode}.","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"Benjykoh"},"content":"     * 1 or more persons with {@code moduleCode} must exist in the address book.","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"Benjykoh"},"content":"     * The {@code task} should be unique and not a duplicate of already assigned task.","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"Benjykoh"},"content":"    void assignTaskToAllInModule(ModuleCode moduleCode, Task task);","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"Benjykoh"},"content":"     * Marks {@code Task} to {@code person} with {@code studentId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"Benjykoh"},"content":"     * A person with {@code studentId} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"Benjykoh"},"content":"     * The {@code task} should be an existing unmarked assigned task.","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"Benjykoh"},"content":"    void markTaskOfPerson(StudentId studentId, Index index);","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"Benjykoh"},"content":"     * Unmarks {@code Task} to {@code person} with {@code studentId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"Benjykoh"},"content":"     * A person with {@code studentId} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"Benjykoh"},"content":"     * The {@code task} should be an existing marked assigned task.","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"Benjykoh"},"content":"    void unmarkTaskOfPerson(StudentId studentId, Index index);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"     * Returns a key-value pair between each {@code person} and the completion status of a task,","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"     * if the person is taking the specified module and is being assigned with the specified task.","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"     * The {@code task} must not be null.","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"    LinkedHashMap\u003cPerson, Boolean\u003e checkProgress(ModuleCode moduleCode, Task task);","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"brelkh"},"content":"    /** Sorts the list of persons in alphabetical order by their names. */","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"    void sortFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":174,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"Benjykoh"},"content":"    /** Sorts the list of students in descending order of the number of incomplete tasks. */","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"Benjykoh"},"content":"    void sortFilteredPersonListByTaskLeft();","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"brelkh"},"content":"     * Returns the user\u0027s command history.","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"brelkh"},"content":"    CommandHistory getCommandHistory();","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"brelkh"},"content":"     * Returns the user\u0027s previously executed command (represented as a String).","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"brelkh"},"content":"    String getPreviousCommandText();","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"brelkh"},"content":"     * Returns true if the command history is empty.","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"brelkh"},"content":"    boolean isCommandHistoryEmpty();","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"brelkh"},"content":"     * Adds the command (as a {@code String}) to command history.","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"brelkh"},"content":"    void addToCommandHistory(String commandText);","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"     * Clears the user\u0027s command history.","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"brelkh"},"content":"    void clearCommandHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Benjykoh":25,"Korochii":10,"brelkh":55,"-":87,"Harish-coding":25}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    private final AddressBookHistory addressBookHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"        this.commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"brelkh"},"content":"        this.addressBookHistory \u003d new AddressBookHistory(addressBook);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"    public AddressBook getPreviousAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"        return addressBookHistory.getPreviousAddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"    public void saveCurrentAddressBookToHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"        addressBookHistory.addAddressBook(addressBook);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"brelkh"},"content":"    public AddressBookHistory getAddressBookHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"        return addressBookHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"    public boolean isAddressBookHistoryEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"        return addressBookHistory.isEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"brelkh"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"brelkh"},"content":"        setAddressBook(getPreviousAddressBook());","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"brelkh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"    public void clearAddressBookHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"brelkh"},"content":"        addressBookHistory.clearHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"        addressBook.assignTaskToPerson(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"Harish-coding"},"content":"        addressBook.deleteTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"Harish-coding"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskForAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(moduleCode, task);","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"Harish-coding"},"content":"        addressBook.deleteTaskForAllInModule(moduleCode, task);","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"Harish-coding"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"Benjykoh"},"content":"    public void assignTaskToAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"Benjykoh"},"content":"        addressBook.assignTaskToAllInModule(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"Benjykoh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"Benjykoh"},"content":"    public void markTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"Benjykoh"},"content":"        addressBook.markTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"Benjykoh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"Benjykoh"},"content":"    public void unmarkTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"Benjykoh"},"content":"        addressBook.unmarkTaskOfPerson(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"Benjykoh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"    public LinkedHashMap\u003cPerson, Boolean\u003e checkProgress(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"        return addressBook.checkProgress(moduleCode, task);","lastModifiedDate":"2022-03-23"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"brelkh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"brelkh"},"content":"    public CommandHistory getCommandHistory() {","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"brelkh"},"content":"        return commandHistory;","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"brelkh"},"content":"    public String getPreviousCommandText() {","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"brelkh"},"content":"        return commandHistory.popPreviousCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"    public boolean isCommandHistoryEmpty() {","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"brelkh"},"content":"        return commandHistory.isEmpty();","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"brelkh"},"content":"    public void addToCommandHistory(String commandText) {","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"brelkh"},"content":"        commandHistory.addToHistory(commandText);","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"brelkh"},"content":"    public void clearCommandHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"        commandHistory.clearHistory();","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"Harish-coding"},"content":"    public void sortFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":249,"author":{"gitId":"Harish-coding"},"content":"        addressBook.sortPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":250,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":252,"author":{"gitId":"Benjykoh"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"Benjykoh"},"content":"    public void sortFilteredPersonListByTaskLeft() {","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"Benjykoh"},"content":"        addressBook.sortPersonListByTaskLeft();","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":273,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 addressBookHistory.equals(other.addressBookHistory)","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 commandHistory.equals(other.commandHistory);","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Benjykoh":27,"Korochii":8,"brelkh":66,"-":149,"Harish-coding":28}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the email is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        if (!(other instanceof Email)) { // target object is of different type","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"        Email targetObject \u003d (Email) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"        if (targetObject.value \u003d\u003d null \u0026\u0026 this.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"        } else if (targetObject.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"        } else if (this.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"            return value.equals(targetObject.value);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"brelkh":18,"-":67}},{"path":"src/main/java/seedu/address/model/person/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a module (in the form of a code) that a student is currently taking in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class ModuleCode {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module code should only contain alphanumeric \"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"            + \"characters and should not be blank\";","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code ModuleCode}","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param moduleCode A valid moduleCode that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the module code is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":50,"medajet":3}},{"path":"src/main/java/seedu/address/model/person/ModuleCodeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"import java.util.List;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":" * Tests that a {@code Person}\u0027s {@code Module Code} matches any of the keywords given.","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"public class ModuleCodeContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"    public ModuleCodeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getModuleCode().moduleCode, keyword));","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"                || (other instanceof ModuleCodeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"                \u0026\u0026 keywords.equals(((ModuleCodeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"medajet":31}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * The input (person\u0027s name) will converted to \"title case\" when creating a Name object.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"        fullName \u003d Name.convertToTitleCase(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     * Converts the given name to title case.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"     * @param name the name of the person.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"     * @return the persons name in title case.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"    private static String convertToTitleCase(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"        String delimiter \u003d \" \";","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"        int firstCharIdx \u003d 0;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        int secondCharIdx \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        int onlyOneChar \u003d 1;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"            return name;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        // Solution adapted from https://www.baeldung.com/java-string-title-case.","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        return Arrays.stream(name.split(delimiter))","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"                .map(x -\u003e x.length() !\u003d onlyOneChar","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"                     ? (x.substring(firstCharIdx, secondCharIdx).toUpperCase()","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"                         + x.substring(secondCharIdx).toLowerCase())","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"                     : x.substring(firstCharIdx, secondCharIdx).toUpperCase())","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"                .collect(Collectors.joining(delimiter));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the name is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":4,"-":57,"Harish-coding":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Constructs a new Person.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * Only the studentId, name, moduleCode are compulsory fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    public Person(StudentId studentId, Name name, ModuleCode moduleCode, Phone phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"                  TelegramHandle telegramHandle, Email email) {","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        requireAllNonNull(studentId, name, moduleCode); // Compulsory fields","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     * Constructs a new Person, with an existing taskList.","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"     * Only the studentId, name, moduleCode are compulsory fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public Person(StudentId studentId, Name name, ModuleCode moduleCode, Phone phone,","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"                  TelegramHandle telegramHandle, Email email, TaskList taskList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, name, moduleCode); // Compulsory fields","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        return studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"        return taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"     * Adds a {@code task} to list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"     * Deletes the task at {@code index} from the list of tasks.","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTask(Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"     * Deletes the {@code task} from the list of tasks.","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        taskList.deleteTask(task);","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"        taskList.markTaskAsComplete(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsNotComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"        taskList.markTaskAsNotComplete(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"     * Checks if the {@code task} is already present in the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is already present ;false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskAlreadyPresent(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"        return taskList.isTaskAlreadyPresent(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"     * Returns true if both persons have the same student id.","lastModifiedDate":"2022-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"     * Returns a copy of the person.","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"     * @return a copy of the person object.","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"    public Person getCopy() {","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"        TaskList copyOfTaskList \u003d new TaskList();","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"        for (Task task : getTaskList().getTaskList()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"brelkh"},"content":"            Task copyOfTask \u003d new Task(task.getTaskName());","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"            if (task.isTaskComplete()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"                copyOfTask.markComplete();","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"brelkh"},"content":"            copyOfTaskList.addTask(copyOfTask);","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"Harish-coding"},"content":"        return new Person(getStudentId(), getName(), getModuleCode(), getPhone(),","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"brelkh"},"content":"                getTelegramHandle(), getEmail(), copyOfTaskList);","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Korochii"},"content":"        boolean isPhoneEqual;","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Korochii"},"content":"        if (otherPerson.getPhone() \u003d\u003d null \u0026\u0026 getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"Korochii"},"content":"            isPhoneEqual \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"Korochii"},"content":"        } else if (otherPerson.getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"Korochii"},"content":"            isPhoneEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"Korochii"},"content":"        } else if (getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"Korochii"},"content":"            isPhoneEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"            isPhoneEqual \u003d otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"        boolean isTelegramHandleEqual;","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"        if (otherPerson.getTelegramHandle() \u003d\u003d null \u0026\u0026 getTelegramHandle() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"            isTelegramHandleEqual \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"        } else if (otherPerson.getTelegramHandle() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"            isTelegramHandleEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"        } else if (getTelegramHandle() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"            isTelegramHandleEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"            isTelegramHandleEqual \u003d otherPerson.getTelegramHandle().equals(getTelegramHandle());","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"        boolean isEmailEqual;","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"Korochii"},"content":"        if (otherPerson.getEmail() \u003d\u003d null \u0026\u0026 getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"Korochii"},"content":"            isEmailEqual \u003d true;","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Korochii"},"content":"        } else if (otherPerson.getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"Korochii"},"content":"            isEmailEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"Korochii"},"content":"        } else if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"Korochii"},"content":"            isEmailEqual \u003d false;","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"Korochii"},"content":"            isEmailEqual \u003d otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"        boolean isTaskListEqual;","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"        if (otherPerson.getTaskList() \u003d\u003d null \u0026\u0026 getTaskList() \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"            isTaskListEqual \u003d true;","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"brelkh"},"content":"        } else if (getTaskList() \u003d\u003d null || otherPerson.getTaskList() \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"brelkh"},"content":"            isTaskListEqual \u003d false;","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"brelkh"},"content":"            isTaskListEqual \u003d otherPerson.getTaskList().equals(getTaskList());","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"Korochii"},"content":"        return otherPerson.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":236,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":237,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getModuleCode().equals(getModuleCode())","lastModifiedDate":"2022-02-24"},{"lineNumber":238,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 isPhoneEqual","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 isTelegramHandleEqual","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 isEmailEqual","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"brelkh"},"content":"                \u0026\u0026 isTaskListEqual;","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":247,"author":{"gitId":"Korochii"},"content":"        return Objects.hash(studentId, name, moduleCode, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"Korochii"},"content":"        builder.append(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":254,"author":{"gitId":"Korochii"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":255,"author":{"gitId":"Korochii"},"content":"                .append(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":256,"author":{"gitId":"Korochii"},"content":"                .append(\"; Module Code: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":257,"author":{"gitId":"Korochii"},"content":"                .append(getModuleCode());","lastModifiedDate":"2022-02-24"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":259,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"        builder.append(\"; Phone Number: \").append(currentPhone);","lastModifiedDate":"2022-02-24"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":263,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":264,"author":{"gitId":"Korochii"},"content":"        builder.append(\"; Telegram Handle: @\").append(currentTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":265,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"        builder.append(\"; Email: \").append(currentEmail);","lastModifiedDate":"2022-02-24"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":271,"author":{"gitId":"Harish-coding"},"content":"        TaskList currentTaskList \u003d getTaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":272,"author":{"gitId":"Harish-coding"},"content":"        builder.append(\"; Tasks: \").append(currentTaskList);","lastModifiedDate":"2022-03-12"},{"lineNumber":273,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":86,"brelkh":21,"-":97,"Harish-coding":74}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the phone number is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"        if (!(other instanceof Phone)) { // target object is of different type","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"        Phone targetObject \u003d (Phone) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"        if (targetObject.value \u003d\u003d null \u0026\u0026 this.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"        } else if (targetObject.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"        } else if (this.value \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"            return value.equals(targetObject.value);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"brelkh":18,"-":49}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a Student\u0027s matriculation number in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class StudentId {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Matriculation number should only contain alphanumeric \"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"            + \"characters and should not be blank\";","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public final String id;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code StudentId}","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     * @param id A valid id that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public StudentId(String id) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        return id;","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        return id.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":51,"medajet":3}},{"path":"src/main/java/seedu/address/model/person/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"medajet"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"medajet"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":" * Tests that a {@code Person}\u0027s {@code Student ID} matches any of the keywords given.","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"public class StudentIdContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"medajet"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"medajet"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"medajet"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStudentId().id, keyword));","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"medajet"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"medajet":31}},{"path":"src/main/java/seedu/address/model/person/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * Represents a Task assigned to a person.","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" * Guarantees: Task Name is present and not null, the task is either complete or not.","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"public class Task {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"            \"Task name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"    /*","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Harish-coding"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"Harish-coding"},"content":"    private final String taskName;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"Harish-coding"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * Default constructor, to be used only by {@code JsonAdaptedPerson}.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public Task() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        this.taskName \u003d null;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"     * @param taskName a valid taskName.","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"    public Task(String taskName) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Harish-coding"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"        checkArgument(isValidTaskName(taskName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"Harish-coding"},"content":"        this.taskName \u003d convertToTitleCase(taskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"     * Converts the given name to title case.","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"     * @param name the name of the person.","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     * @return the persons name in title case.","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"    private static String convertToTitleCase(String name) {","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"        String delimiter \u003d \" \";","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        int firstCharIdx \u003d 0;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        int secondCharIdx \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"        int onlyOneChar \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"            return name;","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"        // Solution adapted from https://www.baeldung.com/java-string-title-case.","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"        return Arrays.stream(name.split(delimiter))","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"                .map(x -\u003e x.length() !\u003d onlyOneChar","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"                        ? (x.substring(firstCharIdx, secondCharIdx).toUpperCase()","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"                        + x.substring(secondCharIdx).toLowerCase())","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"                        : x.substring(firstCharIdx, secondCharIdx).toUpperCase())","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"                .collect(Collectors.joining(delimiter));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"     * Returns true if a given string is a valid task name.","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"     * @return a boolean value (true/false) depending if the task name is valid.","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"    public static boolean isValidTaskName(String test) {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"    public void markComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    public void markNotComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        isComplete \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     * Gets the name of the task.","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     * @return the task name","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"    public String getTaskName() {","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"        return taskName;","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether the student has completed this task.","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is complete; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskComplete() {","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"        return isComplete;","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether the given argument equals {@code taskName}.","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"     * @param otherTaskName the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task name is similar to that of the current instance; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskNameEqual(String otherTaskName) {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"        return taskName.equalsIgnoreCase(otherTaskName);","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Benjykoh"},"content":"        if (isComplete) {","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"Benjykoh"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"Benjykoh"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"Benjykoh"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"Harish-coding"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"Harish-coding"},"content":"        return this \u003d\u003d other // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"Harish-coding"},"content":"                || (other instanceof Task","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 getTaskName().equals(((Task) other).getTaskName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Benjykoh":5,"Korochii":8,"Harish-coding":128}},{"path":"src/main/java/seedu/address/model/person/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":" * Maintains the list of tasks assigned to a student.","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Harish-coding"},"content":"public class TaskList {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"Harish-coding"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"Harish-coding"},"content":"     * Constructs a {@code TaskList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"Harish-coding"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"     * Retrieves the taskList.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"     * @return the taskList that is in the form of an ArrayList.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        return taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"Harish-coding"},"content":"     * Adds a task to list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be added.","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"Harish-coding"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"Harish-coding"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"     * Adds all tasks from an existing taskList to the list of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"     * @param taskList the target TaskList to be copied from.","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public void addAllTask(TaskList taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        this.taskList.addAll(taskList.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"Harish-coding"},"content":"     * Deletes the task at {@code index} from the list of tasks.","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTask(Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Harish-coding"},"content":"        int numberOfTasks \u003d getNumberOfTasks();","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Harish-coding"},"content":"        if (index.getZeroBased() \u003c numberOfTasks \u0026\u0026 index.getOneBased() \u003e 0) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Harish-coding"},"content":"            taskList.remove(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Harish-coding"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Harish-coding"},"content":"     * Deletes the {@code task} from the list of tasks.","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be removed.","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Harish-coding"},"content":"        boolean isTaskDeleted \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Harish-coding"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Harish-coding"},"content":"        while (index \u003c getNumberOfTasks()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Harish-coding"},"content":"            if (taskList.get(index).equals(task)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Harish-coding"},"content":"                taskList.remove(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Harish-coding"},"content":"                isTaskDeleted \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Harish-coding"},"content":"                break;","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"Harish-coding"},"content":"            index++;","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        if (!isTaskDeleted) {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"     * Increment the number of tasks completed.","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"Harish-coding"},"content":"        taskList.get(index).markComplete();","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"Harish-coding"},"content":"     * Marks the task at {@code index} from the list of tasks as not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"     * Decrement the number of tasks completed.","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be marked not complete.","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"Harish-coding"},"content":"    public void markTaskAsNotComplete(int index) {","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"Harish-coding"},"content":"        taskList.get(index).markNotComplete();","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"     * Retrieves the number of completed tasks.","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"     * @return the number of tasks that were completed.","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"    public int getNumOfCompletedTasks() {","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"Benjykoh"},"content":"            if (task.isTaskComplete()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"Benjykoh"},"content":"                count++;","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"        return count;","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"     * Checks if the {@code task} is already present in the list of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task name to be checked.","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the task is already present ;false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"    public boolean isTaskAlreadyPresent(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"        return taskList.stream().map(x -\u003e x.isTaskNameEqual(task.getTaskName())).anyMatch(y -\u003e y);","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"     * Retrieves the completion status of a specific task assigned to a student.","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"     * @param task target task to be checked against.","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"     * @return true if the task is already been completed.","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using the isTaskAlreadyPresent assertion.","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"    public boolean isTaskPresentAndCompleted(Task task) {","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"        // Should always be true, since we checked for this condition","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        // before calling this method in {@code UniquePersonList}","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"        assert isTaskAlreadyPresent(task);","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"        return taskList.stream().filter(x -\u003e x.isTaskNameEqual(task.getTaskName())).findFirst().get().isTaskComplete();","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"Harish-coding"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"Harish-coding"},"content":"     * @return the number of tasks.","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"Harish-coding"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"Harish-coding"},"content":"        return taskList.size();","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"Harish-coding"},"content":"     * Checks whether there are any tasks in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"Harish-coding"},"content":"     * @return true if the there are no tasks; false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"Harish-coding"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"Harish-coding"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"Korochii"},"content":"     * Displays all the tasks in the list (without the completion status)","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"Korochii"},"content":"     * @return a string that represents the current TaskList.","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"Korochii"},"content":"    public String display() {","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"Korochii"},"content":"        String taskStr \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"Korochii"},"content":"        int idxNum \u003d 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"Korochii"},"content":"        String separate \u003d \". \";","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"            taskStr +\u003d idxNum + separate + task.getTaskName() + \"\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"Korochii"},"content":"            idxNum++;","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"        return taskStr;","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"        String taskStr \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"        int idxNum \u003d 1;","lastModifiedDate":"2022-03-12"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"        String separate \u003d \". \";","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"            taskStr +\u003d idxNum + separate + task + \"\\n\";","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"            idxNum++;","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"        return taskStr;","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"                \u0026\u0026 taskList.equals(((TaskList) other).taskList));","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Benjykoh":17,"Korochii":51,"Harish-coding":136}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * Represents a Students\u0027s telegram handle in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"public class TelegramHandle {","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    // Telegram handle has a limit of 5 to 32 characters excluding the @symbol at the front.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handles should contain 5 to 32 alphanumeric characters.\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]{5,32}\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param telegramHandle A valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * Returns if a given string is a valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"brelkh"},"content":"        if (other \u003d\u003d this) { // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"brelkh"},"content":"        if (!(other instanceof TelegramHandle)) { // target object is of different type","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"        TelegramHandle targetObject \u003d (TelegramHandle) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"brelkh"},"content":"        if (targetObject.telegramHandle \u003d\u003d null \u0026\u0026 this.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"brelkh"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"brelkh"},"content":"        } else if (targetObject.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"brelkh"},"content":"        } else if (this.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"brelkh"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"            return telegramHandle.equals(targetObject.telegramHandle);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        return telegramHandle.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":54,"brelkh":18}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.ModuleCodeNotFoundException;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.PartialDuplicateTaskException;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.TaskAlreadyCompleteException;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.exceptions.TaskAlreadyNotCompleteException;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"     * Assigns {@code task} to a person with {@code studentId}.","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"Harish-coding"},"content":"    public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, task);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"Harish-coding"},"content":"        boolean isPersonFound \u003d false;","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"Harish-coding"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"Harish-coding"},"content":"            if (currPerson.getStudentId().equals(studentId)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"Harish-coding"},"content":"                isPersonFound \u003d true;","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"Harish-coding"},"content":"                if (!currPerson.isTaskAlreadyPresent(task)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"Harish-coding"},"content":"                    Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"Harish-coding"},"content":"                    updatedPerson.addTask(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"Harish-coding"},"content":"                    setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"Harish-coding"},"content":"                } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"Harish-coding"},"content":"                    throw new DuplicateTaskException();","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"Benjykoh"},"content":"        if (!isPersonFound) {","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"Benjykoh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"Benjykoh"},"content":"     * Assigns {@code task} to a person taking a module with {@code moduleId}.","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"Benjykoh"},"content":"     * @param moduleCode the module code of the module of which all students are to be assigned a task.","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"Benjykoh"},"content":"     * @param task the task to be assigned.","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"Benjykoh"},"content":"    public void assignTaskToAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(moduleCode, task);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"Benjykoh"},"content":"        boolean anyPersonFound \u003d false;","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"Benjykoh"},"content":"        int totalPersonWithNoDuplicateTask \u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"Benjykoh"},"content":"        int totalPersonTakingThisModule \u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"Benjykoh"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"Benjykoh"},"content":"            if (currPerson.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"Benjykoh"},"content":"                anyPersonFound \u003d true;","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"Benjykoh"},"content":"                totalPersonTakingThisModule++;","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"Benjykoh"},"content":"                if (!currPerson.isTaskAlreadyPresent(task)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"Benjykoh"},"content":"                    Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"Benjykoh"},"content":"                    updatedPerson.addTask(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"Benjykoh"},"content":"                    setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"Benjykoh"},"content":"                    totalPersonWithNoDuplicateTask++;","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"Benjykoh"},"content":"                }","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"Benjykoh"},"content":"        if (!anyPersonFound) {","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"Benjykoh"},"content":"            throw new ModuleCodeNotFoundException();","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"Benjykoh"},"content":"        if (totalPersonWithNoDuplicateTask \u003d\u003d 0) {","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"Benjykoh"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"Benjykoh"},"content":"        if (totalPersonWithNoDuplicateTask !\u003d totalPersonTakingThisModule) {","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"Benjykoh"},"content":"            throw new PartialDuplicateTaskException();","lastModifiedDate":"2022-03-23"},{"lineNumber":171,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":172,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"Harish-coding"},"content":"     * Deletes task with {@code index} belonging to {@code Person} with {@code studentId}.","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"Harish-coding"},"content":"     * @param studentId the student id of the person whose task is to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"Harish-coding"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"Harish-coding"},"content":"        boolean isPersonFound \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"Harish-coding"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"            if (currPerson.getStudentId().equals(studentId)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"                isPersonFound \u003d true;","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"                Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"                updatedPerson.deleteTask(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"                setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"        if (!isPersonFound) {","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"Harish-coding"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"Harish-coding"},"content":"     * Deletes task assigned to {@code Person} with {@code moduleCode}.","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"Harish-coding"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"Harish-coding"},"content":"     * @param moduleCode the module code of the person whose task is to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"Harish-coding"},"content":"     * @param task the task with the exact task name to be deleted.","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"Harish-coding"},"content":"    public void deleteTaskForAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"Harish-coding"},"content":"        requireAllNonNull(moduleCode, task);","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"Harish-coding"},"content":"        boolean isAnyPersonFound \u003d false;","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"Harish-coding"},"content":"        int personsAssignedToTask \u003d 0;","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"Harish-coding"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"Harish-coding"},"content":"            if (currPerson.getModuleCode().equals(moduleCode)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"Harish-coding"},"content":"                isAnyPersonFound \u003d true;","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"Harish-coding"},"content":"                try {","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"Harish-coding"},"content":"                    Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"Harish-coding"},"content":"                    updatedPerson.deleteTask(task);","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"Harish-coding"},"content":"                    setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"Harish-coding"},"content":"                    personsAssignedToTask++;","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"Harish-coding"},"content":"                } catch (TaskNotFoundException taskNotFoundException) {","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"Harish-coding"},"content":"                    // do not do anything yet.","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"Harish-coding"},"content":"                }","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"Harish-coding"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"Harish-coding"},"content":"        if (!isAnyPersonFound) {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"Harish-coding"},"content":"            throw new ModuleCodeNotFoundException();","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"Harish-coding"},"content":"        if (personsAssignedToTask \u003d\u003d 0) { // raise error if no student in the module was assigned to this task.","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"Harish-coding"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":236,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"Benjykoh"},"content":"     * Mark {@code task} task belonging to a person {@code studentId} as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"Benjykoh"},"content":"     * @param studentId the student id of the person\u0027s whose task is to be marked as done.","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"Benjykoh"},"content":"     * @param index the index of the task to be marked as complete.","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"Benjykoh"},"content":"    public void markTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"Benjykoh"},"content":"        boolean isPersonFound \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"Benjykoh"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"Benjykoh"},"content":"            if (currPerson.getStudentId().equals(studentId)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"Benjykoh"},"content":"                isPersonFound \u003d true;","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"Benjykoh"},"content":"                Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"Benjykoh"},"content":"                TaskList updatedPersonTaskList \u003d updatedPerson.getTaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"Benjykoh"},"content":"                int numberOfTasks \u003d updatedPersonTaskList.getNumberOfTasks();","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"Benjykoh"},"content":"                if (index.getZeroBased() \u003c numberOfTasks \u0026\u0026 index.getOneBased() \u003e 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"Benjykoh"},"content":"                    if (!updatedPersonTaskList.getTaskList().get(index.getZeroBased()).isTaskComplete()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"Benjykoh"},"content":"                        updatedPersonTaskList.markTaskAsComplete(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"Benjykoh"},"content":"                        setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"Benjykoh"},"content":"                    } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"Benjykoh"},"content":"                        throw new TaskAlreadyCompleteException();","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"Benjykoh"},"content":"                    }","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"Benjykoh"},"content":"                } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"Benjykoh"},"content":"                    throw new InvalidTaskIndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"Benjykoh"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"Benjykoh"},"content":"        if (!isPersonFound) {","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"Benjykoh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"Harish-coding"},"content":"     * Unmark {@code task} task belonging to a person {@code studentId} as undone.","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"Benjykoh"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"Benjykoh"},"content":"     * @param studentId the student id of the person\u0027s whose task is to be marked as undone.","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"Benjykoh"},"content":"     * @param index the index of the task to be marked as incomplete.","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"Benjykoh"},"content":"    public void unmarkTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"Benjykoh"},"content":"        requireAllNonNull(studentId, index);","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"Benjykoh"},"content":"        boolean isPersonFound \u003d false;","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"Benjykoh"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"Benjykoh"},"content":"            if (currPerson.getStudentId().equals(studentId)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"Benjykoh"},"content":"                isPersonFound \u003d true;","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"Benjykoh"},"content":"                Person updatedPerson \u003d currPerson.getCopy();","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"Benjykoh"},"content":"                TaskList updatedPersonTaskList \u003d updatedPerson.getTaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"Benjykoh"},"content":"                int numberOfTasks \u003d updatedPersonTaskList.getNumberOfTasks();","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"Benjykoh"},"content":"                if (index.getZeroBased() \u003c numberOfTasks \u0026\u0026 index.getOneBased() \u003e 0) {","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"Benjykoh"},"content":"                    if (updatedPersonTaskList.getTaskList().get(index.getZeroBased()).isTaskComplete()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"Benjykoh"},"content":"                        updatedPersonTaskList.markTaskAsNotComplete(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"Benjykoh"},"content":"                        setPerson(currPerson, updatedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"Benjykoh"},"content":"                    } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"Benjykoh"},"content":"                        throw new TaskAlreadyNotCompleteException();","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"Benjykoh"},"content":"                    }","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"Benjykoh"},"content":"                } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"Benjykoh"},"content":"                    throw new InvalidTaskIndexException();","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"Benjykoh"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"Benjykoh"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"Harish-coding"},"content":"        if (!isPersonFound) {","lastModifiedDate":"2022-03-12"},{"lineNumber":300,"author":{"gitId":"Harish-coding"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":301,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":302,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":303,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"     * Iterates through each {@code Person}, and checks if the {@code Person} who is taking {@code ModuleCode}","lastModifiedDate":"2022-03-23"},{"lineNumber":306,"author":{"gitId":"Harish-coding"},"content":"     * has the specified {@code Task} in his/her {@code TaskList}. If the specified task is present,","lastModifiedDate":"2022-03-27"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"     * the completion status will be extracted out into a resulting HashMap.","lastModifiedDate":"2022-03-23"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"     * @param moduleCode target moduleCode to be compared with.","lastModifiedDate":"2022-03-23"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"     * @param task target task to be compared with.","lastModifiedDate":"2022-03-20"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"     * @return LinkedHashMap containing valid person/completion status pair.","lastModifiedDate":"2022-03-20"},{"lineNumber":312,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":313,"author":{"gitId":"Korochii"},"content":"    public LinkedHashMap\u003cPerson, Boolean\u003e checkProgress(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":314,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-23"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-20"},{"lineNumber":316,"author":{"gitId":"Korochii"},"content":"        LinkedHashMap\u003cPerson, Boolean\u003e result \u003d new LinkedHashMap\u003cPerson, Boolean\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":318,"author":{"gitId":"Korochii"},"content":"        // iterate through each student, and check if their respective TaskList contain the specified task","lastModifiedDate":"2022-03-20"},{"lineNumber":319,"author":{"gitId":"Korochii"},"content":"        for (Person currPerson: internalList) {","lastModifiedDate":"2022-03-20"},{"lineNumber":320,"author":{"gitId":"Korochii"},"content":"            TaskList currTaskList \u003d currPerson.getTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"            if (currPerson.getModuleCode().equals(moduleCode)","lastModifiedDate":"2022-03-23"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"                    \u0026\u0026 currTaskList !\u003d null \u0026\u0026 currTaskList.isTaskAlreadyPresent(task)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":323,"author":{"gitId":"Korochii"},"content":"                result.put(currPerson, currTaskList.isTaskPresentAndCompleted(task));","lastModifiedDate":"2022-03-20"},{"lineNumber":324,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":325,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":326,"author":{"gitId":"Korochii"},"content":"        return result;","lastModifiedDate":"2022-03-20"},{"lineNumber":327,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":328,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":366,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":367,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":368,"author":{"gitId":"Harish-coding"},"content":"     * Sorts the list of persons in ascending order of their names.","lastModifiedDate":"2022-03-09"},{"lineNumber":369,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":370,"author":{"gitId":"Harish-coding"},"content":"    public void sortList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":371,"author":{"gitId":"Harish-coding"},"content":"        internalList.sort(new SortAlphabetically());","lastModifiedDate":"2022-03-09"},{"lineNumber":372,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":373,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":374,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":375,"author":{"gitId":"Benjykoh"},"content":"     * Sorts the list of persons in ascending order of the number of tasks completed.","lastModifiedDate":"2022-03-29"},{"lineNumber":376,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":377,"author":{"gitId":"Benjykoh"},"content":"    public void sortListByTaskLeft() {","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"Benjykoh"},"content":"        internalList.sort(new SortByTaskLeft().reversed());","lastModifiedDate":"2022-03-31"},{"lineNumber":379,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":380,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":381,"author":{"gitId":"Harish-coding"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"Harish-coding"},"content":"     * SortAlphabetically implements a comparator class, to sort the list of persons in alphabetical order.","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"Harish-coding"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"Harish-coding"},"content":"    class SortAlphabetically implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"Harish-coding"},"content":"        /**","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"Harish-coding"},"content":"         * Sorts in ascending order of the names of persons.","lastModifiedDate":"2022-03-09"},{"lineNumber":388,"author":{"gitId":"Harish-coding"},"content":"         *","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"Harish-coding"},"content":"         * @param a the first person.","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"Harish-coding"},"content":"         * @param b the second person.","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"Harish-coding"},"content":"         * @return an int value after comparing the names of the two persons.","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"Harish-coding"},"content":"         */","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"Harish-coding"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":394,"author":{"gitId":"Harish-coding"},"content":"        public int compare(Person a, Person b) {","lastModifiedDate":"2022-03-09"},{"lineNumber":395,"author":{"gitId":"Harish-coding"},"content":"            String personAFullName \u003d a.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":396,"author":{"gitId":"Harish-coding"},"content":"            String personBFullName \u003d b.getName().fullName;","lastModifiedDate":"2022-03-10"},{"lineNumber":397,"author":{"gitId":"Harish-coding"},"content":"            return personAFullName.compareTo(personBFullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":398,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":399,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":400,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"Benjykoh"},"content":"     * SortByTaskDone implements a comparator class, to sort the list of persons by the number of tasks completed.","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":404,"author":{"gitId":"Benjykoh"},"content":"    class SortByTaskLeft implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":405,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":406,"author":{"gitId":"Benjykoh"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":407,"author":{"gitId":"Benjykoh"},"content":"        public int compare(Person a, Person b) {","lastModifiedDate":"2022-03-29"},{"lineNumber":408,"author":{"gitId":"Benjykoh"},"content":"            Integer personANumOfTaskTotal \u003d a.getTaskList().getNumberOfTasks();","lastModifiedDate":"2022-03-31"},{"lineNumber":409,"author":{"gitId":"Benjykoh"},"content":"            Integer personBNumOfTaskTotal \u003d b.getTaskList().getNumberOfTasks();","lastModifiedDate":"2022-03-31"},{"lineNumber":410,"author":{"gitId":"Benjykoh"},"content":"            Integer personANumOfTaskDone \u003d a.getTaskList().getNumOfCompletedTasks();","lastModifiedDate":"2022-03-29"},{"lineNumber":411,"author":{"gitId":"Benjykoh"},"content":"            Integer personBNumOfTaskDone \u003d b.getTaskList().getNumOfCompletedTasks();","lastModifiedDate":"2022-03-29"},{"lineNumber":412,"author":{"gitId":"Benjykoh"},"content":"            Integer personANumOfTaskLeft \u003d personANumOfTaskTotal - personANumOfTaskDone;","lastModifiedDate":"2022-03-31"},{"lineNumber":413,"author":{"gitId":"Benjykoh"},"content":"            Integer personBNumOfTaskLeft \u003d personBNumOfTaskTotal - personBNumOfTaskDone;","lastModifiedDate":"2022-03-31"},{"lineNumber":414,"author":{"gitId":"Benjykoh"},"content":"            return personANumOfTaskLeft.compareTo(personBNumOfTaskLeft);","lastModifiedDate":"2022-03-31"},{"lineNumber":415,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":416,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Benjykoh":133,"Korochii":25,"-":137,"Harish-coding":122}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" * name).","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"        super(\"Operation would result in duplicate tasks assigned to all students\");","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"Benjykoh":1,"Harish-coding":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/InvalidTaskIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":" * Signals that the operation will result in Invalid task Index (Task index are considered as invalid if it is less","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":" * than 1 or larger than the number of tasks).","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"public class InvalidTaskIndexException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"        super(\"Invalid Task Index Input!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":12}},{"path":"src/main/java/seedu/address/model/person/exceptions/ModuleCodeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"public class ModuleCodeNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"    public ModuleCodeNotFoundException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"        super(\"There is no one in the list with this module code!\");","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"Benjykoh":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/PartialDuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"public class PartialDuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"    public PartialDuplicateTaskException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"        super(\"Operation would result in duplicate tasks assigned to all students\");","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Benjykoh":7}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"    public PersonNotFoundException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"        super(\"There is no such person!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":5,"-":5}},{"path":"src/main/java/seedu/address/model/person/exceptions/TaskAlreadyCompleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":" * Signals that the operation will result in marking a task that is already completed (Task index are considered as","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":" * completed if it is already marked as done.).","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"public class TaskAlreadyCompleteException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    public TaskAlreadyCompleteException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"        super(\"Task is already complete!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":12}},{"path":"src/main/java/seedu/address/model/person/exceptions/TaskAlreadyNotCompleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":" * Signals that the operation will result in marking a task that is already not completed (Task index are considered as","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":" * not completed if it is not marked as done.).","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"public class TaskAlreadyNotCompleteException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"    public TaskAlreadyNotCompleteException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"        super(\"Task is already unmarked!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Benjykoh":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harish-coding"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Harish-coding"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Harish-coding"},"content":" * Signals that task with the name given by user does not exist.","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Harish-coding"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Harish-coding"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Harish-coding"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Harish-coding"},"content":"        super(\"Task with given name does not exist!\");","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Harish-coding"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Harish-coding":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A0000000Z\"), new Name(\"Alex Yeoh\"), new ModuleCode(\"CS2100\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"87438807\"), new TelegramHandle(\"alexxx\"), new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A1111111Z\"), new Name(\"Bernice Yu\"), new ModuleCode(\"CS2101\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"99272758\"), new TelegramHandle(\"bernice\"), new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A2222222Z\"), new Name(\"Charlotte Oliveiro\"), new ModuleCode(\"CS2102\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"                    null, new TelegramHandle(\"charlotte\"), new Email(\"charlotte@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A3333333Z\"), new Name(\"David Li\"), new ModuleCode(\"CS2103\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"91031282\"), null, new Email(\"lidavid@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A4444444Z\"), new Name(\"Irfan Ibrahim\"), new ModuleCode(\"CS2104\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"92492021\"), new TelegramHandle(\"irfan\"), null),","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A5555555Z\"), new Name(\"Roy Balakrishnan\"), new ModuleCode(\"CS2105\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"                    null, null, null)","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Korochii":15,"-":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private final String studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    private final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"studentId\") String studentId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"moduleCode\") String moduleCode, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"taskList\") TaskList taskList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"            this.taskList.addAllTask(taskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        moduleCode \u003d source.getModuleCode().moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Phone currPhone \u003d source.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        if (currPhone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            phone \u003d currPhone.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currTelegramHandle \u003d source.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d currTelegramHandle.telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        Email currEmail \u003d source.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        if (currEmail \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"            email \u003d currEmail.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        taskList.addAllTask(source.getTaskList());","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(studentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        final Phone modelPhone;","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        final TelegramHandle modelTelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        } else if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        final Email modelEmail;","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"        final TaskList modelTaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"        for (Task i : taskList.getTaskList()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"            if (!Task.isValidTaskName(i.getTaskName())) {","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                throw new IllegalValueException(Task.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"        modelTaskList \u003d taskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"        return new Person(modelStudentId, modelName, modelModuleCode,","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"                modelPhone, modelTelegramHandle, modelEmail, modelTaskList);","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Korochii":82,"-":71}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Korochii":1,"-":59}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"    private ArrayList\u003cString\u003e commandHistory;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"    private int commandHistoryPointerIndex;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"        this.commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"        this.commandHistoryPointerIndex \u003d -1;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"brelkh"},"content":"            commandHistory.add(commandText);","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"brelkh"},"content":"            commandHistoryPointerIndex \u003d commandHistory.size();","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"brelkh"},"content":"     * Handles arrow key (up and down) pressed event.","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"brelkh"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"brelkh"},"content":"    private void handleArrowKeyPressed(KeyEvent keyEvent) {","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"brelkh"},"content":"        KeyCode keyPressed \u003d keyEvent.getCode();","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"brelkh"},"content":"        switch (keyPressed) {","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"brelkh"},"content":"        case UP:","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"brelkh"},"content":"            keyEvent.consume();","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"brelkh"},"content":"            showPreviousCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"brelkh"},"content":"            break;","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"brelkh"},"content":"        case DOWN:","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"brelkh"},"content":"            keyEvent.consume();","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"brelkh"},"content":"            showNextCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"brelkh"},"content":"            break;","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"brelkh"},"content":"        default:","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"brelkh"},"content":"    private void showPreviousCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"brelkh"},"content":"        if (commandHistoryPointerIndex \u003c 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"brelkh"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"brelkh"},"content":"            commandHistoryPointerIndex--;","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"brelkh"},"content":"            String previousCommand \u003d commandHistory.get(commandHistoryPointerIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"brelkh"},"content":"            setCommandBoxText(previousCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"            return; // Nothing needs to be done for requests beyond what is stored in history.","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"    private void showNextCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"        if (commandHistoryPointerIndex \u003e\u003d commandHistory.size() - 1) {","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"            setCommandBoxText(\"\");","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"brelkh"},"content":"            commandHistoryPointerIndex \u003d commandHistory.size();","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"brelkh"},"content":"            return;","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"brelkh"},"content":"            commandHistoryPointerIndex++;","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"brelkh"},"content":"            String nextCommand \u003d commandHistory.get(commandHistoryPointerIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"brelkh"},"content":"            setCommandBoxText(nextCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"brelkh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"brelkh"},"content":"            return; // Nothing needs to be done for requests beyond what is stored in history.","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"brelkh"},"content":"     * Sets the text in command box with the input string","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"brelkh"},"content":"     * and positions the cursor at the end of the text.","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"brelkh"},"content":"     * @param str","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"brelkh"},"content":"    private void setCommandBoxText(String str) {","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"brelkh"},"content":"        commandTextField.setText(str);","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"brelkh"},"content":"        int newCursorPosition \u003d commandTextField.getLength();","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"brelkh"},"content":"        commandTextField.positionCaret(newCursorPosition);","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"brelkh":68,"-":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w09-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Korochii":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"brelkh"},"content":"     * Opens the clear confirmation window and clears storage depending on user confirmation.","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"brelkh"},"content":"    public void handleClearRequest() {","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"        resultDisplay.setFeedbackToUser(\"WARNING: Input \\\"confirm\\\" if you want to clear the address book completely\");","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"        //replace CommandBox with CommandBox that only confirms clear requests","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"brelkh"},"content":"        CommandBox commandBox \u003d new CommandBox(this::confirmClearRequest);","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"brelkh"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"brelkh"},"content":"            if (commandResult.isClearRequest()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"brelkh"},"content":"                handleClearRequest();","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"brelkh"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"brelkh"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"brelkh"},"content":"     * Confirms if the user wishes to clear everything.","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"brelkh"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"brelkh"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"brelkh"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"brelkh"},"content":"    private CommandResult confirmClearRequest(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"brelkh"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"brelkh"},"content":"            CommandResult commandResult \u003d logic.executeClearConfirmation(commandText);","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"brelkh"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"brelkh"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"brelkh"},"content":"            CommandBox commandBox \u003d new CommandBox(this::executeCommand); //replace CommandBox with normal CommandBox","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"brelkh"},"content":"            commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"brelkh"},"content":"            return commandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"brelkh"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"brelkh"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"brelkh"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"brelkh"},"content":"            CommandBox commandBox \u003d new CommandBox(this::executeCommand); //replace CommandBox with normal CommandBox","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"brelkh"},"content":"            commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"brelkh"},"content":"            throw e;","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"brelkh"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"brelkh":42,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Harish-coding"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    private Label id; // index of entry","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    private FlowPane moduleCodes;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    private Label studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    private Label telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"Harish-coding"},"content":"    private Label tasks;","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        studentId.setText(\"Matriculation No.: \" + person.getStudentId().id);","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d person.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        if (currentPhone \u003d\u003d null || currentPhone.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \" + currentPhone.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d person.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        if (currentTelegramHandle \u003d\u003d null || currentTelegramHandle.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: @\" + currentTelegramHandle.telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d person.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        if (currentEmail \u003d\u003d null || currentEmail.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \" + currentEmail.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"Harish-coding"},"content":"        TaskList currentTasks \u003d person.getTaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"Harish-coding"},"content":"        if (currentTasks \u003d\u003d null || currentTasks.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"Harish-coding"},"content":"            tasks.setText(\"Tasks: \");","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"Harish-coding"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"Harish-coding"},"content":"            tasks.setText(\"Tasks: \\n\" + currentTasks.toString());","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"brelkh"},"content":"        moduleCodes.getChildren().add(new Label(person.getModuleCode().moduleCode));","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Korochii":30,"brelkh":4,"-":66,"Harish-coding":10}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleArrowKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"brelkh":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"brelkh"},"content":"#moduleCodes {","lastModifiedDate":"2022-03-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"brelkh"},"content":"#moduleCodes .label {","lastModifiedDate":"2022-03-14"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"brelkh"},"content":"    -fx-background-color: #399cbf;","lastModifiedDate":"2022-03-14"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"brelkh":3,"-":349}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"         title\u003d\"TAPA\" minWidth\u003d\"740\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"          \u003cVBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"          \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"                     minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Korochii":13,"-":48}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"      \u003cFlowPane fx:id\u003d\"moduleCodes\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Harish-coding"},"content":"      \u003cLabel fx:id\u003d\"tasks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tasks \" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Korochii":2,"brelkh":1,"-":34,"Harish-coding":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"brelkh":2,"-":6}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":2,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        // Matches a partial word only:","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"        // Matches word in the sentence, different upper/lower case letters:","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"        // First word (boundary case)","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"        // Last word (boundary case)","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":19,"-":132}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + ID_DESC_AMY + NAME_DESC_AMY + MODULE_CODE_DESC_AMY","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"brelkh"},"content":"        // Update expected AddressBookHistory and CommandHistory","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"brelkh"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"brelkh"},"content":"        expectedAddressBook.addPerson(expectedPerson);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"brelkh"},"content":"        expectedModel.getAddressBookHistory().addAddressBook(expectedAddressBook);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"brelkh"},"content":"        String expectedCommandText \u003d addCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"brelkh"},"content":"        expectedModel.addToCommandHistory(expectedCommandText);","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":6,"brelkh":9,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        expectedModel.sortFilteredPersonList();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":2,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.AddressBookHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"import seedu.address.model.CommandHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"            -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"brelkh"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"brelkh"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"brelkh"},"content":"        public ReadOnlyAddressBook getPreviousAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"brelkh"},"content":"        public void saveCurrentAddressBookToHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"brelkh"},"content":"        public AddressBookHistory getAddressBookHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"brelkh"},"content":"        public boolean isAddressBookHistoryEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"brelkh"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"brelkh"},"content":"        public void clearAddressBookHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"brelkh"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"Korochii"},"content":"        public void assignTaskToPerson(StudentId studentId, Task task) {","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"Korochii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"Harish-coding"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"Harish-coding"},"content":"        public void deleteTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"Harish-coding"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"Harish-coding"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"Harish-coding"},"content":"        public void deleteTaskForAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"Harish-coding"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"Harish-coding"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"Benjykoh"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"Benjykoh"},"content":"        public void assignTaskToAllInModule(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"Benjykoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":199,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":200,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":201,"author":{"gitId":"Korochii"},"content":"        public void markTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-18"},{"lineNumber":202,"author":{"gitId":"Korochii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":203,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":204,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":205,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":206,"author":{"gitId":"Korochii"},"content":"        public void unmarkTaskOfPerson(StudentId studentId, Index index) {","lastModifiedDate":"2022-03-18"},{"lineNumber":207,"author":{"gitId":"Korochii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":208,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":209,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":210,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"Korochii"},"content":"        public LinkedHashMap\u003cPerson, Boolean\u003e checkProgress(ModuleCode moduleCode, Task task) {","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"Korochii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":213,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":214,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":224,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":225,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":226,"author":{"gitId":"Korochii"},"content":"        public void sortFilteredPersonList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":227,"author":{"gitId":"Korochii"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":228,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":229,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"Benjykoh"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"Benjykoh"},"content":"        public void sortFilteredPersonListByTaskLeft() {","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"Benjykoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"brelkh"},"content":"        public CommandHistory getCommandHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"brelkh"},"content":"        public String getPreviousCommandText() {","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"brelkh"},"content":"        public boolean isCommandHistoryEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"brelkh"},"content":"        public void addToCommandHistory(String commandText) {","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"brelkh"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"brelkh"},"content":"        public void clearCommandHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"brelkh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"brelkh"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2022-03-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-03-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2022-03-18"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2022-03-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2022-03-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2022-03-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-26"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"            // This stub is allowed to call this method, but it does not need to do anything,","lastModifiedDate":"2022-03-26"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"            // since it is an ArrayList instead of an FilteredList.","lastModifiedDate":"2022-03-26"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"        public void sortFilteredPersonList() {","lastModifiedDate":"2022-03-26"},{"lineNumber":310,"author":{"gitId":"Korochii"},"content":"            Comparator\u003cPerson\u003e nameSorter \u003d Comparator.comparing(o -\u003e o.getName().fullName);","lastModifiedDate":"2022-03-26"},{"lineNumber":311,"author":{"gitId":"Korochii"},"content":"            personsAdded.sort(nameSorter);","lastModifiedDate":"2022-03-26"},{"lineNumber":312,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Benjykoh":9,"Korochii":47,"brelkh":59,"-":190,"Harish-coding":10}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"                new CommandResult(ClearCommand.MESSAGE_REQUEST_USER_CONFIRMATION, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        assertCommandSuccess(new ClearCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"            new CommandResult(ClearCommand.MESSAGE_REQUEST_USER_CONFIRMATION, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"        assertCommandSuccess(new ClearCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":8,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"                new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"                new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":4,"-":52}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_ID_AMY \u003d \"A1111111Z\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_ID_BOB \u003d \"A2222222Z\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_MODULE_CODE_AMY \u003d \"CS1111\";","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_MODULE_CODE_BOB \u003d \"CS2222\";","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"amyyy\";","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"bobbb\";","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"    public static final String VALID_INDEX \u003d \"1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public static final String MODULE_CODE_DESC_AMY \u003d \" \" + PREFIX_MODULE_CODE + VALID_MODULE_CODE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    public static final String MODULE_CODE_DESC_BOB \u003d \" \" + PREFIX_MODULE_CODE + VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"    public static final String INDEX_DESC \u003d \" \" + PREFIX_INDEX + VALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"A\u0026\u0026\u0026\u0026\u0026\u0026\u0026Z\"; // \u0027\u0026\u0027 not allowed in studentId","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    public static final String INVALID_MODULE_CODE_DESC \u003d \" \" + PREFIX_MODULE_CODE","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            + \"CS\u0026\u0026\u0026\u0026\"; // \u0027\u0026\u0027 not allowed in moduleCode","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d \" \" + PREFIX_TELEGRAM_HANDLE","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"            + \"xxx\"; // telegramHandles should have 5 to 32 characters","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"    public static final String INVALID_COMMAND_NAME \u003d \"poop\";","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"    public static final String INVALID_INDEX \u003d \" \" + PREFIX_INDEX + \"index\"; // alphabets and symbols not allowed","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"                .withModuleCode(VALID_MODULE_CODE_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"                .withModuleCode(VALID_MODULE_CODE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Benjykoh":5,"Korochii":28,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Index[]{outOfBoundIndex});","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(new Index[]{INDEX_SECOND_PERSON});","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new Index[]{INDEX_FIRST_PERSON});","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"medajet":7,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        // withTaskList is used here as the tasklist will be the same before and after an edit command.","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"        // This is because, we do not allow users to edit tasklist directly.","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"        Person editedPerson \u003d new PersonBuilder()","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"                .withTaskList(model.getFilteredPersonList().get(0).getTaskList()).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"    //    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"    //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    //        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    //        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    //        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"    //    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"    //        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"    //        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"    //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"    //        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"    //        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"    //        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Benjykoh":4,"Korochii":32,"-":139}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        // different studentId -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStudentId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        // different moduleCode -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withModuleCode(VALID_MODULE_CODE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        // different telegramHandle -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":16,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"medajet"},"content":"    public void equalsName() {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"    public void equalsStudentId() {","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"medajet"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"    public void equalsModuleCode() {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"        ModuleCodeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"medajet"},"content":"                new ModuleCodeContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"        ModuleCodeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"                new ModuleCodeContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"medajet"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"medajet"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"medajet"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"medajet"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"medajet"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"medajet"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"medajet"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"medajet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"medajet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"medajet"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"medajet"},"content":"    public void execute_nonExistentName_noPersonFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"medajet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"medajet"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(VALID_NAME_AMY);","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"medajet"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"medajet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"medajet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"medajet"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"medajet"},"content":"    public void execute_nonExistentId_noPersonFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"medajet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"medajet"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d prepareStudentIdPredicate(VALID_ID_AMY);","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"medajet"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"medajet"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"medajet"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"medajet"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"medajet"},"content":"    public void execute_nonExistentModuleCode_noPersonFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"medajet"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"medajet"},"content":"        ModuleCodeContainsKeywordsPredicate predicate \u003d prepareModuleCodePredicate(VALID_MODULE_CODE_AMY);","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"medajet"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Carl Elle Fiona\");","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"medajet"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"medajet"},"content":"     * Parses {@code userInput} into a {@code StudentIdContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"medajet"},"content":"    private StudentIdContainsKeywordsPredicate prepareStudentIdPredicate(String userInput) {","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"medajet"},"content":"        return new StudentIdContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"medajet"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"medajet"},"content":"     * Parses {@code userInput} into a {@code ModuleCodeContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"medajet"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"medajet"},"content":"    private ModuleCodeContainsKeywordsPredicate prepareModuleCodePredicate(String userInput) {","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"medajet"},"content":"        return new ModuleCodeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"medajet":107,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/ManualCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMMAND_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.ManualMessages;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"public class ManualCommandTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualAll_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_ALL_COMMANDS);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualAdd_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_ADD_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"add\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualDelete_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_DELETE_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"delete\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualFind_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_FIND_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"find\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualEdit_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_EDIT_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"edit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualClear_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_CLEAR_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"clear\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualList_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_LIST_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"list\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualManual_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_MANUAL_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"manual\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualHelp_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_HELP_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"help\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualExit_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_EXIT_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"exit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualTask_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_TASK_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"task\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualMark_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_MARK_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"mark\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualUnmark_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_UNMARK_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"unmark\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualArchive_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_ARCHIVE_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"archive\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualAssign_success() {","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_ASSIGN_COMMAND);","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"assign\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"Harish-coding"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Harish-coding"},"content":"    public void execute_manualDeleteTask_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Harish-coding"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_DELETE_TASK_COMMAND);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Harish-coding"},"content":"        assertCommandSuccess(new ManualCommand(\"deleteTask\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"Harish-coding"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"Harish-coding"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualProgress_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_PROGRESS_COMMAND);","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"progress\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualHistory_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_HISTORY_COMMAND);","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"history\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualUndo_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_UNDO_COMMAND);","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"undo\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualSort_success() {","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"Benjykoh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ManualMessages.MANUAL_MESSAGE_SORT_COMMAND);","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(new ManualCommand(\"sort\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"Benjykoh"},"content":"    public void execute_manualInvalid_failure() {","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"Benjykoh"},"content":"        ManualCommand manualCommand \u003d new ManualCommand(INVALID_COMMAND_NAME);","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(manualCommand, model, ManualMessages.MANUAL_MESSAGE_UNKNOWN_COMMANDS);","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"Benjykoh":136,"Harish-coding":6}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.MarkCommand.INVALID_TASK_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.MarkCommand.MARKED_TASK_SUCCESS;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.MarkCommand.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.MarkCommand.TASK_ALREADY_DONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdAlice \u003d TypicalPersons.ALICE.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdBenson \u003d TypicalPersons.BENSON.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId notPresentStudentId \u003d new StudentId(\"A0000000Z\");","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    private final Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"    private final Index invalidIndex \u003d Index.fromZeroBased(2000);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"    public void equals_sameObject_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"        assertEquals(markCommand, markCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"    public void equals_sameValues_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommandCopy \u003d new MarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"        assertEquals(markCommandCopy, markCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"    public void equals_differentType_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"        assertNotEquals(markCommand, 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"    public void constructor_nullStudentId_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MarkCommand(null, indexOne));","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MarkCommand(studentIdAlice, null));","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"    public void execute_studentNotPresent_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(notPresentStudentId, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(markCommand, model, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdAlice, invalidIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(markCommand, model, INVALID_TASK_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"    public void execute_taskAlreadyComplete_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"        Person bensonCopy \u003d new PersonBuilder()","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"                .withStudentId(BENSON.getStudentId().id)","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"                .withName(BENSON.getName().toString())","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"                .withModuleCode(BENSON.getModuleCode().moduleCode)","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"                .withPhone(BENSON.getPhone().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"                .withTelegramHandle(BENSON.getTelegramHandle().telegramHandle)","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"                .withEmail(BENSON.getEmail().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"                .withTaskList(\"Task B\", true)","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"                .build();","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"        AddressBook bensonCopyAb \u003d new AddressBookBuilder().withPerson(bensonCopy).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(bensonCopyAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(markCommand, model, TASK_ALREADY_DONE);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"    public void execute_taskMarkAsDone_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand markCommand \u003d new MarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"        Person alice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"        Person expectedAliceCopy \u003d new PersonBuilder()","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"                .withStudentId(ALICE.getStudentId().id)","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"                .withName(ALICE.getName().toString())","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"                .withModuleCode(ALICE.getModuleCode().moduleCode)","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"                .withPhone(ALICE.getPhone().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"                .withTelegramHandle(ALICE.getTelegramHandle().telegramHandle)","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"                .withEmail(ALICE.getEmail().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"Benjykoh"},"content":"                .withTaskList(\"Task A\", true)","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"Benjykoh"},"content":"                .build();","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"        AddressBook aliceAb \u003d new AddressBookBuilder().withPerson(alice).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"        AddressBook expectedAliceCopyAb \u003d new AddressBookBuilder().withPerson(expectedAliceCopy).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(aliceAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"Benjykoh"},"content":"        Model expectedModel \u003d new ModelManager(expectedAliceCopyAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(markCommand, model, String.format(MARKED_TASK_SUCCESS, studentIdAlice), expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Benjykoh":126}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.UnmarkCommand.INVALID_TASK_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.UnmarkCommand.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.UnmarkCommand.TASK_ALREADY_NOT_DONE;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdAlice \u003d TypicalPersons.ALICE.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdBenson \u003d TypicalPersons.BENSON.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId notPresentStudentId \u003d new StudentId(\"A0000000Z\");","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"    private final Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    private final Index invalidIndex \u003d Index.fromZeroBased(2000);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"    public void equals_sameObject_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"        assertEquals(unmarkCommand, unmarkCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"    public void equals_sameValues_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommandCopy \u003d new UnmarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"        assertEquals(unmarkCommandCopy, unmarkCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    public void equals_differentType_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"        assertNotEquals(unmarkCommand, 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"    public void constructor_nullStudentId_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UnmarkCommand(null, indexOne));","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UnmarkCommand(studentIdBenson, null));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"Benjykoh"},"content":"    public void execute_studentNotPresent_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(notPresentStudentId, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(unmarkCommand, model, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"Benjykoh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdBenson, invalidIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(unmarkCommand, model, INVALID_TASK_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"Benjykoh"},"content":"    public void execute_taskAlreadyNotComplete_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"Benjykoh"},"content":"        Person aliceCopy \u003d new PersonBuilder()","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"Benjykoh"},"content":"                .withStudentId(ALICE.getStudentId().id)","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"Benjykoh"},"content":"                .withName(ALICE.getName().toString())","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"Benjykoh"},"content":"                .withModuleCode(ALICE.getModuleCode().moduleCode)","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"Benjykoh"},"content":"                .withPhone(ALICE.getPhone().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"Benjykoh"},"content":"                .withTelegramHandle(ALICE.getTelegramHandle().telegramHandle)","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"Benjykoh"},"content":"                .withEmail(ALICE.getEmail().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"Benjykoh"},"content":"                .withTaskList(\"Task A\", false)","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"Benjykoh"},"content":"                .build();","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"Benjykoh"},"content":"        AddressBook aliceCopyAb \u003d new AddressBookBuilder().withPerson(aliceCopy).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(aliceCopyAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdAlice, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"Benjykoh"},"content":"        assertCommandFailure(unmarkCommand, model, TASK_ALREADY_NOT_DONE);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"Benjykoh"},"content":"    public void execute_taskMarkAsNotDone_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(studentIdBenson, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"Benjykoh"},"content":"        Person benson \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"Benjykoh"},"content":"        Person expectedBensonCopy \u003d new PersonBuilder()","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"Benjykoh"},"content":"                .withStudentId(BENSON.getStudentId().id)","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"Benjykoh"},"content":"                .withName(BENSON.getName().toString())","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"Benjykoh"},"content":"                .withModuleCode(BENSON.getModuleCode().moduleCode)","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"Benjykoh"},"content":"                .withPhone(BENSON.getPhone().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"Benjykoh"},"content":"                .withTelegramHandle(BENSON.getTelegramHandle().telegramHandle)","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"Benjykoh"},"content":"                .withEmail(BENSON.getEmail().value)","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"Benjykoh"},"content":"                .withTaskList(\"Task B\", false)","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"Benjykoh"},"content":"                .build();","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"Benjykoh"},"content":"        AddressBook bensonAb \u003d new AddressBookBuilder().withPerson(benson).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"Benjykoh"},"content":"        AddressBook expectedBensonCopyAb \u003d new AddressBookBuilder().withPerson(expectedBensonCopy).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"Benjykoh"},"content":"        Model model \u003d new ModelManager(bensonAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"Benjykoh"},"content":"        Model expectedModel \u003d new ModelManager(expectedBensonCopyAb, new UserPrefs());","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"Benjykoh"},"content":"        assertCommandSuccess(unmarkCommand, model, String.format(UnmarkCommand.MARKED_TASK_SUCCESS, studentIdBenson),","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"Benjykoh"},"content":"                expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Benjykoh":126}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_CODE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        // multiple ids - last id accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        // multiple module codes - last module code accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_AMY + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"                + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        // multiple telegram handles - last phone accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"        // missing phone","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withPhone(null).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + NAME_DESC_AMY + MODULE_CODE_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"        // missing telegramHandle","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withTelegramHandle(null).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + NAME_DESC_AMY + MODULE_CODE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"                + EMAIL_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        // missing email","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withEmail(null).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        assertParseSuccess(parser, ID_DESC_AMY + NAME_DESC_AMY + MODULE_CODE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        // missing studentId prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, VALID_ID_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"        // missing name prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + VALID_NAME_BOB + MODULE_CODE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + VALID_MODULE_CODE_BOB, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, VALID_ID_BOB + VALID_NAME_BOB + VALID_MODULE_CODE_BOB, expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"        // invalid studentId","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + INVALID_NAME_DESC + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"        // invalid moduleCode","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + INVALID_MODULE_CODE_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"        // invalid phone","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"        // invalid telegramHandle","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"                + INVALID_TELEGRAM_HANDLE_DESC + EMAIL_DESC_BOB, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"        // invalid email","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, INVALID_ID_DESC + INVALID_NAME_DESC + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ID_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"                + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":78,"-":73}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    // TODO: Add tests for other parseCommands (like archive, task, manual etc)","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        assertEquals(new DeleteCommand(new Index[]{INDEX_FIRST_PERSON}), command);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    //    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    //        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    //        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    //                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    //        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    //    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    //        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    //        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    //                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"    //        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":18,"medajet":2,"-":75}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(new Index[]{INDEX_FIRST_PERSON}));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":2,"medajet":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    //    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    //        // negative index","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    //        // zero index","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    //        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    //        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    //    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, StudentId.MESSAGE_CONSTRAINTS); // invalid studentId","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_MODULE_CODE_DESC,","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    //                ModuleCode.MESSAGE_CONSTRAINTS); // invalid moduleCode","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_HANDLE_DESC,","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"    //                TelegramHandle.MESSAGE_CONSTRAINTS); // invalid telegramHandle","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"    //        // invalid phone followed by valid email","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"    //        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"    //        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"    //        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"    //    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    //        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + NAME_DESC_AMY + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    //                + PHONE_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"    //                .withName(VALID_NAME_AMY).withModuleCode(VALID_MODULE_CODE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"    //                .withPhone(VALID_PHONE_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"    //                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"    //    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + NAME_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"    //                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"    //    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"    //        // studentId","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"    //        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"    //        // name","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"    //        userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"    //        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"    //        // moduleCode","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"    //        userInput \u003d targetIndex.getOneBased() + MODULE_CODE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"    //        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_MODULE_CODE_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"    //        // phone","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"    //        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"    //        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"    //        // telegramHandle","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"    //        userInput \u003d targetIndex.getOneBased() + TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"    //        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"    //        // email","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"Korochii"},"content":"    //        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"Korochii"},"content":"    //        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"Korochii"},"content":"    //        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"    // TODO: Fix this testcase","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"Korochii"},"content":"    //    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"Korochii"},"content":"    //    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"Korochii"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + NAME_DESC_AMY + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"Korochii"},"content":"    //                + PHONE_DESC_AMY + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"Korochii"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ID_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"Korochii"},"content":"    //                .withName(VALID_NAME_AMY).withModuleCode(VALID_MODULE_CODE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"Korochii"},"content":"    //                .withPhone(VALID_PHONE_AMY).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"Korochii"},"content":"    //                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"Korochii"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"    //","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"Korochii"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"Korochii"},"content":"    //    }","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"Korochii"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"Korochii"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":127,"-":54}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_CODE_DESC;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"medajet"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.ModuleCodeContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"medajet"},"content":"import seedu.address.model.person.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"medajet"},"content":"    public void parse_nonemptyPreamble_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"medajet"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"medajet"},"content":"    public void parse_multipleFields_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"medajet"},"content":"        // all 3 fields","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + NAME_DESC_BOB + MODULE_CODE_DESC_BOB,","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"medajet"},"content":"        // student id + name","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + NAME_DESC_BOB,","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"medajet"},"content":"        // student id + mod code","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB + MODULE_CODE_DESC_BOB,","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"medajet"},"content":"        // name + mod code","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + MODULE_CODE_DESC_BOB,","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"medajet"},"content":"    public void parse_invalidFields_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"medajet"},"content":"        // invalid student id","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_ID_DESC,","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"medajet"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"medajet"},"content":"        // invalid name","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_NAME_DESC,","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"medajet"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"medajet"},"content":"        // invalid mod code","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_MODULE_CODE_DESC,","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"medajet"},"content":"                ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"medajet"},"content":"    public void parse_nonSupportedFields_throwsParseException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"medajet"},"content":"        // telegram handle","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TELEGRAM_HANDLE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"medajet"},"content":"        // phone number","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PHONE_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"medajet"},"content":"        // email","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"medajet"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + EMAIL_DESC_AMY,","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"medajet"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"medajet"},"content":"    public void parse_validStudentId_returnsFindCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"medajet"},"content":"        // valid student id","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"medajet"},"content":"                new FindCommand(","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"medajet"},"content":"                        new StudentIdContainsKeywordsPredicate(","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"medajet"},"content":"                                Arrays.asList(VALID_ID_BOB.split(\"\\\\s+\"))));","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"medajet"},"content":"        // no white space before id","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, ID_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"medajet"},"content":"        // whitespace before id","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ID_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"medajet"},"content":"    public void parse_validName_returnsFindCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"medajet"},"content":"        // valid name","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"medajet"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"medajet"},"content":"                new FindCommand(","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"medajet"},"content":"                        new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"medajet"},"content":"                                Arrays.asList(VALID_NAME_BOB.split(\"\\\\s+\"))));","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"medajet"},"content":"        // no whitespace before name","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"medajet"},"content":"        // whitespace before name","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"medajet"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"medajet"},"content":"    public void parse_validModuleCode_returnsFindCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"medajet"},"content":"        // valid module code","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"medajet"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"medajet"},"content":"                new FindCommand(","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"medajet"},"content":"                        new ModuleCodeContainsKeywordsPredicate(","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"medajet"},"content":"                                Arrays.asList(VALID_MODULE_CODE_BOB.split(\"\\\\s+\"))));","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"medajet"},"content":"        // no whitespace before module code","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, MODULE_CODE_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"medajet"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"medajet"},"content":"        // whitespace before module code","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"medajet"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MODULE_CODE_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"medajet"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":3,"medajet":112,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    private static final String MARK_MESSAGE_INVALID_COMMAND_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"            MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdBob \u003d TypicalPersons.BOB.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"    private final Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, \"   \", MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"    public void parse_missingStudentIdPrefix_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        String userInputMissingStudentIdPrefix \u003d VALID_ID_BOB + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputMissingStudentIdPrefix, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"    public void parse_missingIndexPrefix_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        String userInputMissingIndexPrefix \u003d ID_DESC_BOB + VALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputMissingIndexPrefix, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"    public void parse_invalidStudentId_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        String userInputInvalidStudentId \u003d INVALID_ID_DESC + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputInvalidStudentId, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        String userInputInvalidIndex \u003d ID_DESC_BOB + INVALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputInvalidIndex, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"        MarkCommand expectedMarkCommand \u003d new MarkCommand(studentIdBob, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"        String userInputValid \u003d ID_DESC_BOB + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"        assertParseSuccess(parser, userInputValid, expectedMarkCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Benjykoh":67}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    // TODO: Add tests for other methods in ParserUtil (parseTelegramHandle, parseTask etc)","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":1,"-":119}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"public class UnmarkCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    private static final String MARK_MESSAGE_INVALID_COMMAND_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"            UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    private final StudentId studentIdAmy \u003d TypicalPersons.AMY.getStudentId();","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"    private final Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, \"   \", MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"    public void parse_missingStudentIdPrefix_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"        String userInputMissingStudentIdPrefix \u003d VALID_ID_AMY + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputMissingStudentIdPrefix, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"    public void parse_missingIndexPrefix_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"        String userInputMissingIndexPrefix \u003d ID_DESC_AMY + VALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputMissingIndexPrefix, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"    public void parse_invalidStudentId_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"        String userInputInvalidStudentId \u003d INVALID_ID_DESC + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputInvalidStudentId, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"Benjykoh"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"Benjykoh"},"content":"        String userInputInvalidIndex \u003d ID_DESC_AMY + INVALID_INDEX;","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"Benjykoh"},"content":"        assertParseFailure(parser, userInputInvalidIndex, MARK_MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"Benjykoh"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"Benjykoh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"Benjykoh"},"content":"        UnmarkCommand expectedUnmarkCommand \u003d new UnmarkCommand(studentIdAmy, indexOne);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"Benjykoh"},"content":"        String userInputValid \u003d ID_DESC_AMY + INDEX_DESC;","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"Benjykoh"},"content":"        assertParseSuccess(parser, userInputValid, expectedUnmarkCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Benjykoh":66}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":3,"-":96}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        // Keywords match studentId, moduleCode, phone, telegramHandle, email, but does not match name","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"A1Z\", \"Bob\", \"CS0000\", \"12345\",","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"                \"aliceee\", \"alice@email.com\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStudentId(\"A1Z\").withName(\"Alice\").withModuleCode(\"CS0000\")","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"                .withPhone(\"12345\").withModuleCode(\"CS0000\").withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":5,"-":71}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        // same id, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"                .withModuleCode(VALID_MODULE_CODE_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"                .withPhone(VALID_PHONE_BOB).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"                .build();","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        // different id, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        // id differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withStudentId(VALID_ID_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_ID_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        // different moduleCode -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withModuleCode(VALID_MODULE_CODE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"        // different telegramHandle -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":26,"-":61}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":3,"-":164}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    private static final String INVALID_ID \u003d \"A@@@@@@@Z\";","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    private static final String INVALID_MODULE_CODE \u003d \"CS@@@@\";","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"r@\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    private static final String VALID_ID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    private static final String VALID_MODULE_CODE \u003d BENSON.getModuleCode().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    //TODO: Add tests for studentID, moduleCode and telegramHandle (and potentially taskList)","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_MODULE_CODE,","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"                        VALID_PHONE, VALID_TELEGRAM_HANDLE, VALID_EMAIL, null);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_MODULE_CODE,","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"                VALID_PHONE, VALID_TELEGRAM_HANDLE, VALID_EMAIL, null);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_MODULE_CODE,","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"                        INVALID_PHONE, VALID_TELEGRAM_HANDLE, VALID_EMAIL, null);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_MODULE_CODE,","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"                        VALID_PHONE, VALID_TELEGRAM_HANDLE, INVALID_EMAIL, null);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":16,"-":57}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":4,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"            \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":2,"-":46}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"            \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"            -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":4,"-":121}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)},","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"     * to maintain consistency with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":2,"-":32}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        descriptor.setStudentId(person.getStudentId());","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        descriptor.setModuleCode(person.getModuleCode());","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"        descriptor.setTelegramHandle(person.getTelegramHandle());","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code StudentId} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public EditPersonDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code ModuleCode} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"    public EditPersonDescriptorBuilder withModuleCode(String name) {","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code TelegramHandle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"    public EditPersonDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"Korochii"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":25,"-":65}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_ID \u003d \"A0000000Z\";","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_NAME \u003d \"Default Name\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_MODULE_CODE \u003d \"CS0000\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_PHONE \u003d \"00000000\";","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"default\";","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"    public static final String DEFAULT_EMAIL \u003d \"default@gmail.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        studentId \u003d new StudentId(DEFAULT_ID);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        moduleCode \u003d new ModuleCode(DEFAULT_MODULE_CODE);","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        studentId \u003d personToCopy.getStudentId();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        moduleCode \u003d personToCopy.getModuleCode();","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        telegramHandle \u003d personToCopy.getTelegramHandle();","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        taskList \u003d personToCopy.getTaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code StudentId} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    public PersonBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code ModuleCode} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"    public PersonBuilder withModuleCode(String moduleCode) {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"            this.phone \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"            this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code TelegramHandle} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"    public PersonBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"            this.email \u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"            this.email \u003d new Email(email);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"     * Sets the {@code TaskList} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"    public PersonBuilder withTaskList(String task, boolean isCompleted) {","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        if (taskList \u003d\u003d null) { // First addition to the PersonBuilder\u0027s taskList.","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        Task newTask \u003d new Task(task);","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"        if (isCompleted) {","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"            newTask.markComplete();","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"            newTask.markNotComplete();","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"Benjykoh"},"content":"     * Sets the {@code TaskList} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"Benjykoh"},"content":"    public PersonBuilder withTaskList(TaskList tasklist) {","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"Benjykoh"},"content":"        if (tasklist \u003d\u003d null || tasklist.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"Benjykoh"},"content":"            return this;","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"Benjykoh"},"content":"        for (Task i : tasklist.getTaskList()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"Benjykoh"},"content":"            this.taskList.addTask(i);","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"Benjykoh"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"Korochii"},"content":"        return new Person(studentId, name, moduleCode, phone, telegramHandle, email, taskList);","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Benjykoh":11,"Korochii":76,"-":69}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        sb.append(PREFIX_ID + person.getStudentId().id + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        sb.append(PREFIX_MODULE_CODE + person.getModuleCode().moduleCode + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        if (person.getPhone() !\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        if (person.getTelegramHandle() !\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"            sb.append(PREFIX_TELEGRAM_HANDLE + person.getTelegramHandle().telegramHandle + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"            sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e sb.append(PREFIX_ID).append(studentId.id).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        descriptor.getModuleCode().ifPresent(","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            moduleCode -\u003e sb.append(PREFIX_MODULE_CODE).append(moduleCode.moduleCode).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        descriptor.getTelegramHandle().ifPresent(","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            telegramHandle -\u003e sb.append(PREFIX_TELEGRAM_HANDLE).append(telegramHandle.telegramHandle).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        // TODO: TaskList should be included if we implement the edit task function","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":22,"-":42}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Benjykoh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"Benjykoh"},"content":"import seedu.address.model.person.Task;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"Benjykoh"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"Benjykoh"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Assignment 1\";","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"Benjykoh"},"content":"    public static final Boolean DEFAULT_IS_COMPLETE \u003d false;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"Benjykoh"},"content":"    private String taskName;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"Benjykoh"},"content":"    private boolean isComplete;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"Benjykoh"},"content":"     * Initializes a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"Benjykoh"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"Benjykoh"},"content":"        taskName \u003d DEFAULT_TASK_NAME;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"Benjykoh"},"content":"        isComplete \u003d DEFAULT_IS_COMPLETE;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"Benjykoh"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"Benjykoh"},"content":"        taskName \u003d taskToCopy.getTaskName();","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"        isComplete \u003d taskToCopy.isTaskComplete();","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"Benjykoh"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"Benjykoh"},"content":"    public TaskBuilder withName(String taskName) {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"Benjykoh"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"Benjykoh"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"Benjykoh"},"content":"     * Sets the {@code Status} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"Benjykoh"},"content":"    public TaskBuilder withStatus(Boolean isComplete) {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"Benjykoh"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"Benjykoh"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"Benjykoh"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"Benjykoh"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"Benjykoh"},"content":"     * Build a Task based on the fields specified.","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"Benjykoh"},"content":"     * @return The Task object built.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"Benjykoh"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"Benjykoh"},"content":"    public Task build() {","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"Benjykoh"},"content":"        return new Task(taskName);","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"Benjykoh"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"Benjykoh"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"Benjykoh":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    /*","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    Multiple instances of withTaskList can be used for a Person, if there are multiple tasks to be added.","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"    Example: new PersonBuilder().withTaskList(\"task a\", false).withTaskList(\"task b\", true).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withStudentId(\"A1000000Z\").withName(\"Alice\")","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2101\").withPhone(\"10000000\").withTelegramHandle(\"aliceee\")","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"aliceee@u.nus.edu\").withTaskList(\"Task A\", false).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withStudentId(\"A2000000Z\").withName(\"Benson\")","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2102\").withPhone(\"20000000\").withTelegramHandle(\"bensonnn\")","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"bensonnn@u.nus.edu\").withTaskList(\"Task B\", true).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    public static final Person CARL \u003d new PersonBuilder().withStudentId(\"A3000000Z\").withName(\"Carl\")","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2103\").withPhone(\"30000000\").withTelegramHandle(\"carlll\")","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"carlll@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withStudentId(\"A4000000Z\").withName(\"Daniel\")","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2104\").withPhone(\"40000000\").withTelegramHandle(\"danielll\")","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"danielll@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withStudentId(\"A5000000Z\").withName(\"Elle\")","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2105\").withPhone(\"50000000\").withTelegramHandle(\"elleee\")","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"elleee@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withStudentId(\"A6000000Z\").withName(\"Fiona\")","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2106\").withPhone(\"60000000\").withTelegramHandle(\"fionaaa\")","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"fionaaa@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withStudentId(\"A7000000Z\").withName(\"George\")","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2107\").withPhone(\"70000000\").withTelegramHandle(\"georgeee\")","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"georgeee@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"    public static final Person HOON \u003d new PersonBuilder().withStudentId(\"A8000000Z\").withName(\"Hoon\")","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2108\").withPhone(\"80000000\").withTelegramHandle(\"hoonnn\")","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"hoonnn@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"    public static final Person IDA \u003d new PersonBuilder().withStudentId(\"A9000000Z\").withName(\"Ida\")","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(\"CS2109\").withPhone(\"90000000\").withTelegramHandle(\"idaaa\")","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"            .withEmail(\"idaaa@u.nus.edu\").build();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"    public static final Person AMY \u003d new PersonBuilder().withStudentId(VALID_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(VALID_MODULE_CODE_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"    public static final Person BOB \u003d new PersonBuilder().withStudentId(VALID_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"            .withModuleCode(VALID_MODULE_CODE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"Korochii":43,"-":44}}]
