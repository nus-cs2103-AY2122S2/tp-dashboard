[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W09-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-4/tp/actions)","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"* **TAPA** allows TAs to better manage their student’s contact and progress, especially for those who are teaching multiple classes/modules at the same time. It is optimised for use on CLI.\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"  Usage:","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"  * Check out **[TAPA\u0027s User Guide](https://github.com/AY2122S2-CS2103T-W09-4/tp/blob/master/docs/UserGuide.md)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"* The project is a software project for a desktop application that manages student contact details and progress.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"* It is named `Teaching Assistant\u0027s Personal Assistant` (`TAPA` for short) because it helps TAs manage their students\u0027 contacts and progress.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* For the detailed documentation of this project, see **[TAPA\u0027s page on Github](https://github.com/AY2122S2-CS2103T-W09-4/tp)**.","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":9,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"### Brandon Kheng","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"\u003cimg src\u003d\"images/brelkh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"[[github](https://github.com/brelkh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Benjykoh"},"content":"### Benjamin Koh Wei Jie","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Benjykoh"},"content":"\u003cimg src\u003d\"images/benjykoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Benjykoh"},"content":"[[github](http://github.com/benjykoh)]","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"Benjykoh"},"content":"[[portfolio](team/benjykoh.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Benjykoh"},"content":"* Role: Developer","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"Benjykoh"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"medajet"},"content":"### Jet Tan","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"medajet"},"content":"\u003cimg src\u003d\"images/medajet.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"medajet"},"content":"[[github](http://github.com/medajet)]","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"medajet"},"content":"[[portfolio](team/medajet.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"medajet"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Harish-coding"},"content":"### Saravanan Anuja Harish","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Harish-coding"},"content":"\u003cimg src\u003d\"images/harish-coding.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Harish-coding"},"content":"[[github](http://github.com/harish-coding)]","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"### Terng Yan Long","lastModifiedDate":"2022-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"\u003cimg src\u003d\"images/korochii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"[[github](http://github.com/korochii)]","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"[[portfolio](team/korochii.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"Benjykoh":6,"Korochii":5,"brelkh":4,"medajet":5,"-":35,"Harish-coding":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"Korochii"},"content":"**Target user profile**: Teaching Assistants who","lastModifiedDate":"2022-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Korochii"},"content":"* has a need to manage a significant number of students (especially across multiple modules)","lastModifiedDate":"2022-02-23"},{"lineNumber":261,"author":{"gitId":"Korochii"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Korochii"},"content":"**Value proposition**:  better manage the student’s contact and progress, ","lastModifiedDate":"2022-02-23"},{"lineNumber":267,"author":{"gitId":"Korochii"},"content":"especially for those who are teaching multiple classes/modules at the same time. ","lastModifiedDate":"2022-02-23"},{"lineNumber":268,"author":{"gitId":"Korochii"},"content":"It is optimised for use on CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":269,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                | I want to …​                                                                        | So that I can…​                                                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Korochii"},"content":"| -------- | --------------------------------------------------------- | -------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------- |","lastModifiedDate":"2022-02-23"},{"lineNumber":278,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | add students to TAPA                                                                   | know which students are taking my classes                                                     |","lastModifiedDate":"2022-02-23"},{"lineNumber":279,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | delete a specific student from TAPA                                                    | remove student who has withdrawn from the module during the semester                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":280,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | list students alphabetically                                                           | print students in a list as their names would appear on the official class list               |","lastModifiedDate":"2022-02-23"},{"lineNumber":281,"author":{"gitId":"Korochii"},"content":"| `* * *`  | Teaching Assistant                                        | save existing data to hard drive                                                       | access the data again when I reopen the app                                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":282,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | see all the tasks that a student currently have                                        | observe his/her progress                                                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":283,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | delete all students from TAPA                                                          | remove students that were taught in previous semesters and are no longer relevant             |","lastModifiedDate":"2022-02-23"},{"lineNumber":284,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | mark/unmark students’ tasks according to the completion status                         | update his/her progress                                                                       |","lastModifiedDate":"2022-02-23"},{"lineNumber":285,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | see students’ contact details (such as email address)                                  | contact them if needed                                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":286,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | find a student                                                                         | check details of a specific student                                                           |","lastModifiedDate":"2022-02-23"},{"lineNumber":287,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | assign tasks to a specific student                                                     | allocate and track a task that is given to the student                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":288,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | display the possible actions that  I can take, or do                                   | have a quick reference without the need of reading a user guide                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":289,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant                                        | edit the details of the students                                                       | fix any errors that occurred during the insertion of student details                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":290,"author":{"gitId":"Korochii"},"content":"| `* *`    | Teaching Assistant who is teaching in multiple semesters  | archive the existing data                                                              | save a copy on the local machine before undergoing a complete deletion of data                |","lastModifiedDate":"2022-02-23"},{"lineNumber":291,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | tag students                                                                           | know what modules they are taking                                                             |","lastModifiedDate":"2022-02-23"},{"lineNumber":292,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | delete multiple students from TAPA                                                     | remove students that are no longer being taught, without needing to delete them individually  |","lastModifiedDate":"2022-02-23"},{"lineNumber":293,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | display student progress                                                               | locate a person easily                                                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":294,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | filter students by their tags                                                          | view the progress of students in each separate tag (different class/module)                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":295,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | update the student’s tags                                                              | edit when the student drop/take a new module                                                  |","lastModifiedDate":"2022-02-23"},{"lineNumber":296,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | define my own tasks for each module                                                    | customise the tasks to each module                                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":297,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | assign tasks to multiple students                                                      | allocate tasks to students without having to individually assign them                         |","lastModifiedDate":"2022-02-23"},{"lineNumber":298,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | track attendance                                                                       | mark attendance for modules that require student attendance                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":299,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see modules I’m teaching at a glance                                                   | remind myself of what needs to be prepared for classes                                        |","lastModifiedDate":"2022-02-23"},{"lineNumber":300,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | sort students by their progress/grading in each assignment/number of classes attended  | see how the class is performing                                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":301,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | see student’s timetable                                                                | find a good time to arrange a consult with them                                               |","lastModifiedDate":"2022-02-23"},{"lineNumber":302,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | type in chain commands                                                                 | execute multiple different commands quickly                                                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":303,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is a long time user                | send emails from the command line                                                      | send emails to students with specific tags quickly                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":304,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant who is used to CLI commands            | customise commands                                                                     | execute commands quickly                                                                      |","lastModifiedDate":"2022-02-23"},{"lineNumber":305,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | undo the most recent command entered                                                   | revert any unwanted changes (such as deleting student) without much trouble                   |","lastModifiedDate":"2022-02-23"},{"lineNumber":306,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | customise task details such as deadlines                                               | track upcoming deadlines more easily                                                          |","lastModifiedDate":"2022-02-23"},{"lineNumber":307,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | view grades scored by students in each assignment                                      | understand which topics they are finding difficult                                            |","lastModifiedDate":"2022-02-23"},{"lineNumber":308,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | edit an assignment name/deadline                                                       | update the name/deadline of an assignment in case of future changes or extensions             |","lastModifiedDate":"2022-02-23"},{"lineNumber":309,"author":{"gitId":"Korochii"},"content":"| `*`      | Teaching Assistant                                        | be able to highlight or feature certain students                                       | know which students are performing the best or need more help                                 |","lastModifiedDate":"2022-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"Korochii"},"content":"(For all use cases below, the **System** is the `TAPA` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":317,"author":{"gitId":"Korochii"},"content":"**Use case: UC01 - Add a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":321,"author":{"gitId":"Korochii"},"content":"1. User requests to add a specific student.","lastModifiedDate":"2022-02-23"},{"lineNumber":322,"author":{"gitId":"Korochii"},"content":"2. TAPA shows the updated list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":328,"author":{"gitId":"Korochii"},"content":"* 1a. A student with the same matriculation number already exist.","lastModifiedDate":"2022-02-23"},{"lineNumber":329,"author":{"gitId":"Korochii"},"content":"  ","lastModifiedDate":"2022-02-23"},{"lineNumber":330,"author":{"gitId":"Korochii"},"content":"    * 1a1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":331,"author":{"gitId":"Korochii"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":332,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":333,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":334,"author":{"gitId":"Korochii"},"content":"* 1b. The matriculation number of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":335,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":336,"author":{"gitId":"Korochii"},"content":"    * 1b1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":339,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":340,"author":{"gitId":"Korochii"},"content":"* 1c. The name of the student is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":341,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":342,"author":{"gitId":"Korochii"},"content":"    * 1c1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":343,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":344,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":345,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":346,"author":{"gitId":"Korochii"},"content":"* 1d. The module code that the student is currently taking is not in the input command.","lastModifiedDate":"2022-02-23"},{"lineNumber":347,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":348,"author":{"gitId":"Korochii"},"content":"    * 1d1. TAPA shows an error message","lastModifiedDate":"2022-02-23"},{"lineNumber":349,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":350,"author":{"gitId":"Korochii"},"content":"        Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":351,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":352,"author":{"gitId":"Korochii"},"content":"**Use case: UC02 - List all students**","lastModifiedDate":"2022-02-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":357,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":358,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":359,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":360,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":361,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":362,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":367,"author":{"gitId":"Korochii"},"content":"**Use case: UC03 - Delete a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":368,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":369,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":370,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":371,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":372,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":373,"author":{"gitId":"Korochii"},"content":"3. User requests to delete a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":374,"author":{"gitId":"Korochii"},"content":"4. TAPA deletes the students.","lastModifiedDate":"2022-02-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":387,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":388,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":389,"author":{"gitId":"Korochii"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":390,"author":{"gitId":"Korochii"},"content":"**Use case: UC04 - Edit a student**","lastModifiedDate":"2022-02-23"},{"lineNumber":391,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":392,"author":{"gitId":"Korochii"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":393,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":394,"author":{"gitId":"Korochii"},"content":"1. User requests to list students.","lastModifiedDate":"2022-02-23"},{"lineNumber":395,"author":{"gitId":"Korochii"},"content":"2. TAPA shows a list of students.","lastModifiedDate":"2022-02-23"},{"lineNumber":396,"author":{"gitId":"Korochii"},"content":"3. User requests edits to the supplied details of a specific student in the list.","lastModifiedDate":"2022-02-23"},{"lineNumber":397,"author":{"gitId":"Korochii"},"content":"4. TAPA updates the details of the student with the supplied details.","lastModifiedDate":"2022-02-23"},{"lineNumber":398,"author":{"gitId":"Korochii"},"content":"   ","lastModifiedDate":"2022-02-23"},{"lineNumber":399,"author":{"gitId":"Korochii"},"content":"   Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":400,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":401,"author":{"gitId":"Korochii"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":402,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":403,"author":{"gitId":"Korochii"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-23"},{"lineNumber":404,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":405,"author":{"gitId":"Korochii"},"content":"  Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":406,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":407,"author":{"gitId":"Korochii"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":408,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":409,"author":{"gitId":"Korochii"},"content":"    * 3a1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":410,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":411,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":412,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":413,"author":{"gitId":"Korochii"},"content":"* 3b. The given field is invalid.","lastModifiedDate":"2022-02-23"},{"lineNumber":414,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":415,"author":{"gitId":"Korochii"},"content":"    * 3b1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":416,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":417,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":418,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":419,"author":{"gitId":"Korochii"},"content":"* 3c. The new matriculation number specified is already in the database.","lastModifiedDate":"2022-02-23"},{"lineNumber":420,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":421,"author":{"gitId":"Korochii"},"content":"    * 3c1. TAPA shows an error message.","lastModifiedDate":"2022-02-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"Korochii"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-02-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"Korochii"},"content":"3.  Usage should be more efficient than a regular contact management application for a user who types fast in English text.","lastModifiedDate":"2022-02-23"},{"lineNumber":432,"author":{"gitId":"Korochii"},"content":"4.  Should be usable by a novice who has never used a contact management application before.","lastModifiedDate":"2022-02-23"},{"lineNumber":433,"author":{"gitId":"Korochii"},"content":"5.  The system should respond within 3 seconds.","lastModifiedDate":"2022-02-23"},{"lineNumber":434,"author":{"gitId":"Korochii"},"content":"6.  The student\u0027s data should only be stored locally.","lastModifiedDate":"2022-02-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"Korochii"},"content":"* **Module**: A specific class that a student is taking","lastModifiedDate":"2022-02-23"},{"lineNumber":442,"author":{"gitId":"Korochii"},"content":"* **Tag**: A category that the student belong to (usually denotes the module that is currently being taken)","lastModifiedDate":"2022-02-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Korochii":127,"-":368}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"TAPA (Teaching Assistant Personal Assistant) is a desktop app that allows TAs to better manage their student’s progress, ","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"especially for those ","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"who are teaching multiple classes/modules at the same time. It is optimised for use on a CLI.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"1. Ensure you have [Java `11`](https://www.oracle.com/java/technologies/downloads/#java11) or above installed in your Computer.","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"1. Download the latest `TAPA.jar` from [here](https://github.com/AY2122S2-CS2103T-W09-4/tp/releases).","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"   * **`add`**`i/A0123456Z n/john m/CS2103T p/98765432 t/@john e/E0123456Z` : Adds a contact named `John` to TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"   * **`delete`**`3` : Deletes the 3rd entry in TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"Adds a person to TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"Format: `add i/STUDENT_ID n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [h/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS]​`","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"* The student’s matriculation number, name as well as module code are compulsory fields.","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"* The phone number, telegram handle, and email address fields are optional and can be excluded.","lastModifiedDate":"2022-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Korochii"},"content":"Example:","lastModifiedDate":"2022-02-23"},{"lineNumber":79,"author":{"gitId":"Korochii"},"content":"* `add i/A0123456Z n/john m/CS2103T p/98765432 t/@john e/E0123456Z`","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"    * A student named John is added to TAPA.","lastModifiedDate":"2022-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"### Checking all the tasks that a particular student have: `task`","lastModifiedDate":"2022-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"Displays all the tasks that are allocated to a particular student.","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"Format: `task i/STUDENT_ID`","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"* The completed and uncompleted tasks are separated into 2 different sections.","lastModifiedDate":"2022-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"Example:","lastModifiedDate":"2022-02-23"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"* `task A0123456Z`","lastModifiedDate":"2022-02-23"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"    * Lists out the tasks that student (A0123456Z) has.","lastModifiedDate":"2022-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"### Archiving details in the address book: `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"Saves a copy of the details currently saved in the address book into a separate file.","lastModifiedDate":"2022-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"Format: `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"* A copy of the details currently saved in the address book will be saved to a separate file.","lastModifiedDate":"2022-02-23"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"* The file name will be the date and time of the archive operation.","lastModifiedDate":"2022-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"**Q**: What command can I use to view a list of available commands?\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"**A**: Use the command “help” to view the list of commands used within TAPA. Alternatively, refer to the Command Summary section below.","lastModifiedDate":"2022-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Action      | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"------------|------------------","lastModifiedDate":"2022-02-23"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"**Add**     | `add i/MATRICULATION_NO n/STUDENT_NAME m/MODULE_CODE [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL_ADDRESS] ` \u003cbr\u003e e.g., `add i/A0123456Z n/john m/CS2103T p/98765432 t/@john e/E0123456Z`","lastModifiedDate":"2022-02-23"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"**Exit**    | `exit`","lastModifiedDate":"2022-02-23"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"**Task**    | `task i/STUDENT_ID` \u003cbr\u003e e.g., `task A0123456Z`","lastModifiedDate":"2022-02-23"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"**Archive** | `archive`","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Korochii":35,"-":93}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"brelkh"},"content":"    content: \"TAPA\";","lastModifiedDate":"2022-02-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brelkh":1,"-":294}},{"path":"docs/team/brelkh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"brelkh"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"brelkh"},"content":"title: Brandon Kheng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"brelkh"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"brelkh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"brelkh"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"brelkh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"brelkh"},"content":"    * What it does:","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"brelkh"},"content":"    * Justification:","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"brelkh"},"content":"    * Highlights: ","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"brelkh"},"content":"    * Credits:*{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":18,"author":{"gitId":"brelkh"},"content":"* **New Feature**: **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"brelkh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbrelkh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"brelkh"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"brelkh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":28,"author":{"gitId":"brelkh"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"brelkh"},"content":"    * User Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"brelkh"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"brelkh"},"content":"        * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"brelkh"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"brelkh"},"content":"    * PRs reviewed (with non-trivial review comments): **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":36,"author":{"gitId":"brelkh"},"content":"    * Contributed to forum discussions (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":37,"author":{"gitId":"brelkh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: **(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"brelkh"},"content":"    * Some parts of the history feature I added was adopted by several other classmates (**(to be added soon)**)","lastModifiedDate":"2022-02-26"},{"lineNumber":39,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":40,"author":{"gitId":"brelkh"},"content":"* **Tools**:","lastModifiedDate":"2022-02-26"},{"lineNumber":41,"author":{"gitId":"brelkh"},"content":"    * **(to be added soon)**","lastModifiedDate":"2022-02-26"},{"lineNumber":42,"author":{"gitId":"brelkh"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"brelkh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"brelkh":43}},{"path":"docs/team/korochii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"title: Terng Yan Long\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"### Project: Teaching Assistant’s Personal Assistant (TAPA)","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"TAPA is a desktop contact management application used to manage students\u0027 contact and progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"  ","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dkorochii\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"  * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"  * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"  * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"Korochii":40}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            + PREFIX_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE \"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE_NUMBER] \"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL_ADDRESS]\\n\"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"            + PREFIX_ID + \"A0123456Z \"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"            + PREFIX_MODULE_CODE + \"CS2103T \"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"john \"","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"            + PREFIX_EMAIL + \"e0123456@u.nus.edu \";","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":13,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        // @Brandon: Delete updatedAddress/Tags if not needed, adjust fields according to Person constructor","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"        // Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"        // Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"        // @Brandon: null is a placeholder here (to be updated when you start implementing edit)","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"        return new Person(null, null, null, null, null, null);","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Korochii":5,"-":222}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    @SuppressWarnings(\"OptionalGetWithoutIsPresent\") // This is checked using our custom function (arePrefixesPresent).","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE,","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"                        PREFIX_TELEGRAM_HANDLE, PREFIX_EMAIL);","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"        // Check if compulsory fields are present in the user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_NAME, PREFIX_MODULE_CODE)","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"        ModuleCode module \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currPhone \u003d argMultimap.getValue(PREFIX_PHONE);","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        if (currPhone.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"            phone \u003d ParserUtil.parsePhone(currPhone.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currTelegramHandle \u003d argMultimap.getValue(PREFIX_TELEGRAM_HANDLE);","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d ParserUtil.parseTelegramHandle(currTelegramHandle.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        Optional\u003cString\u003e currEmail \u003d argMultimap.getValue(PREFIX_EMAIL);","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        if (currEmail.isEmpty()) {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"            email \u003d ParserUtil.parseEmail(currEmail.get());","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"        Person person \u003d new Person(studentId, name, module, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Korochii":39,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_MODULE_CODE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\"); // @Brandon: Delete this field","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\"); // @Brandon: Delete this field","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Korochii":5,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code studentId} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"Korochii"},"content":"        String trimmedStudentId \u003d studentId.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(trimmedStudentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"Korochii"},"content":"        return new StudentId(trimmedStudentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String moduleCode} into an {@code ModuleCode}.","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"Korochii"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"        String trimmedModuleCode \u003d moduleCode.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String telegramHandle} into an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"Korochii"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"Korochii"},"content":"    public static Address parseAddress(String address) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"Korochii"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"Korochii"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"Korochii"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"Korochii"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"Korochii"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"Korochii"},"content":"    public static Tag parseTag(String tag) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"Korochii"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException { // @Brandon: Delete this function","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Korochii":64,"-":105}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class Address { //TODO: Delete this class once it is not needed","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the email is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"-":70}},{"path":"src/main/java/seedu/address/model/person/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a module (in the form of a code) that a student is currently taking in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class ModuleCode {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module code should only contain alphanumeric characters\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]*\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code ModuleCode}","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     * @param moduleCode A valid moduleCode that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the module code is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":52}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the name is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":4,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"    private final Phone phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    private final Email email;","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    public Person(StudentId studentId, Name name, ModuleCode moduleCode, Phone phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"                  TelegramHandle telegramHandle, Email email) {","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"        requireAllNonNull(studentId, name, moduleCode); // Compulsory fields","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"        return studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"        return moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"        return phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        return email;","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"     * Returns true if both persons have the same student id.","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"Korochii"},"content":"        return otherPerson.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getModuleCode().equals(getModuleCode())","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"Korochii"},"content":"        return Objects.hash(studentId, name, moduleCode, phone, telegramHandle, email);","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"        builder.append(getStudentId())","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"                .append(getName())","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"                .append(\"; Module Code: \")","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"                .append(getModuleCode());","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"Korochii"},"content":"        if (currentPhone !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Phone Number: \").append(currentPhone);","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"        if (currentTelegramHandle !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Telegram Handle: @\").append(currentTelegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"        if (currentEmail !\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"            builder.append(\"; Email: \").append(currentEmail);","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":51,"-":79}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"            value \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the phone number is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Korochii":6,"-":52}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Represents a Student\u0027s matriculation number in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"public class StudentId {","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Matriculation number should only contain alphanumeric characters\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]*\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String id;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs a {@code StudentId}","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param id A valid id that represents the student\u0027s matriculation number.","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public StudentId(String id) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        return id;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        return id.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":53}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Korochii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"Korochii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"Korochii"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":" * Represents a Students\u0027s telegram handle in TAPA.","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"public class TelegramHandle {","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"    // Telegram handle has a limit of 5 to 32 characters excluding the @symbol at the front.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handles should contain 5 to 32 alphanumeric characters.\";","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9]{5,32}\";","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"Korochii"},"content":"    public final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"Korochii"},"content":"     * Constructs an {@code TelegramHandle}.","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"     * @param telegramHandle A valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"     * Returns if a given string is a valid telegram handle.","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"     *","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"     * @param test the string that is being tested.","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"     * @return a boolean value (true/false) depending if the id is valid.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"    public String toString() {","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"        return telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"Korochii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"Korochii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"Korochii"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"                \u0026\u0026 telegramHandle.equals(((TelegramHandle) other).telegramHandle)); // state check","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        return telegramHandle.hashCode();","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"Korochii":57}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A0000000Z\"), new Name(\"Alex Yeoh\"), new ModuleCode(\"CS2100\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"87438807\"), new TelegramHandle(\"alexxx\"), new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A1111111Z\"), new Name(\"Bernice Yu\"), new ModuleCode(\"CS2101\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"99272758\"), new TelegramHandle(\"bernice\"), new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A2222222Z\"), new Name(\"Charlotte Oliveiro\"), new ModuleCode(\"CS2102\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"                    null, new TelegramHandle(\"charlotte\"), new Email(\"charlotte@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A3333333Z\"), new Name(\"David Li\"), new ModuleCode(\"CS2103\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"91031282\"), null, new Email(\"lidavid@example.com\")),","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A4444444Z\"), new Name(\"Irfan Ibrahim\"), new ModuleCode(\"CS2104\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"Korochii"},"content":"                    new Phone(\"92492021\"), new TelegramHandle(\"irfan\"), null),","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"Korochii"},"content":"            new Person(new StudentId(\"A5555555Z\"), new Name(\"Roy Balakrishnan\"), new ModuleCode(\"CS2105\"),","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"                    null, null, null)","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Korochii":15,"-":26}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Korochii"},"content":"    private final String studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Korochii"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Korochii"},"content":"    private final String telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"studentId\") String studentId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"moduleCode\") String moduleCode, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"Korochii"},"content":"                             @JsonProperty(\"email\") String email) {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"Korochii"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Korochii"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Korochii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Korochii"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Korochii"},"content":"        moduleCode \u003d source.getModuleCode().moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"Korochii"},"content":"        Phone currPhone \u003d source.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"Korochii"},"content":"        if (currPhone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"            phone \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"            phone \u003d currPhone.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currTelegramHandle \u003d source.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"        if (currTelegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"            telegramHandle \u003d currTelegramHandle.telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        Email currEmail \u003d source.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"        if (currEmail \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"            email \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"            email \u003d currEmail.value;","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Korochii"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"Korochii"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Korochii"},"content":"        if (!StudentId.isValidId(studentId)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"Korochii"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Korochii"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"Korochii"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Korochii"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Korochii"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Korochii"},"content":"        final Phone modelPhone;","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"Korochii"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"Korochii"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":111,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"Korochii"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Korochii"},"content":"        final TelegramHandle modelTelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"Korochii"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"Korochii"},"content":"        } else if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"Korochii"},"content":"            modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"Korochii"},"content":"        final Email modelEmail;","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"Korochii"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":126,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(null);","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"Korochii"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"Korochii"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"Korochii"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"Korochii"},"content":"        return new Person(modelStudentId, modelName, modelModuleCode, modelPhone, modelTelegramHandle, modelEmail);","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Korochii":71,"-":65}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"Korochii"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"Korochii"},"content":"    private Label id; // index of entry","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"Korochii"},"content":"    private Label studentId;","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"Korochii"},"content":"    @FXML","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Korochii"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Korochii"},"content":"    private Label telegramHandle;","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"Korochii"},"content":"        studentId.setText(\"Matriculation No.: \" + person.getStudentId().id);","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Korochii"},"content":"        moduleCode.setText(person.getModuleCode().moduleCode);","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"Korochii"},"content":"        Phone currentPhone \u003d person.getPhone();","lastModifiedDate":"2022-02-24"},{"lineNumber":59,"author":{"gitId":"Korochii"},"content":"        if (currentPhone \u003d\u003d null || currentPhone.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"Korochii"},"content":"            phone.setText(\"Phone No.: \" + currentPhone.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"Korochii"},"content":"        TelegramHandle currentTelegramHandle \u003d person.getTelegramHandle();","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"Korochii"},"content":"        if (currentTelegramHandle \u003d\u003d null || currentTelegramHandle.telegramHandle \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":69,"author":{"gitId":"Korochii"},"content":"            telegramHandle.setText(\"Telegram Handle: @\" + currentTelegramHandle.telegramHandle);","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"Korochii"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"Korochii"},"content":"        Email currentEmail \u003d person.getEmail();","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"Korochii"},"content":"        if (currentEmail \u003d\u003d null || currentEmail.value \u003d\u003d null) {","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \");","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"Korochii"},"content":"        } else {","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"Korochii"},"content":"            email.setText(\"Email: \" + currentEmail.value);","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"Korochii"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Korochii":33,"-":64}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"moduleCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$moduleCode\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Korochii"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Korochii":3,"-":34}}]
