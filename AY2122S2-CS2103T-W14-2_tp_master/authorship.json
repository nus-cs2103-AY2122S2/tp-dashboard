[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-2/tp)","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"# Coach2K22","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"* **Coach2K22** is a contact management appllication that helps busy sports coaches organise their overwhelming lists of contacts and messy weekly schedules. it also provides them with a platform to visualise defensive and offensive plays as the game unfolds.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"  * as a contact management utility for his players and relevant contacts","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"  * as a visualiser for real-time play to aid decision making on the fly","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"juayhee"},"content":"  * as an organisation tool for teams and organisations","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"juayhee"},"content":"## Features","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"juayhee"},"content":"- Full contact management","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"juayhee"},"content":"  - List all your contacts","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"juayhee"},"content":"  - Add, delete and edit them","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"juayhee"},"content":"  - Add notes to contacts","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"juayhee"},"content":"  - Add tags to your contacts","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"juayhee"},"content":"  - Filter and search for them based on tags for quick organisation","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"juayhee"},"content":"- Built-in user manual","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"juayhee"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"-":4,"juayhee":24}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"### Lyu Xiaoteng","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"\u003cimg src\u003d\"images/rye-catcher.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"[[github](https://github.com/Rye-Catcher)]","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"[[portfolio](team/rye-catcher.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"[[blog](https://x1a0teng.page/posts/about/)]","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"* Role: Documentation and Integration","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"* Responsibilities: Ensure project documentation in good quality ","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"and various parts of codes can be integrated to create a whole.","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"juayhee"},"content":"### Tan Juay Hee","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"juayhee"},"content":"\u003cimg src\u003d\"images/juayhee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"juayhee"},"content":"[[github](http://github.com/juayhee)]","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"juayhee"},"content":"[[portfolio](team/juayhee.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"juayhee"},"content":"* Role: Code Quality and Testing","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"juayhee"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time; looks","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"juayhee"},"content":"after code quality and ensures adherence to coding standards.","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"### Abdulelah Faisal S Al Ghrairy","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"\u003cimg src\u003d\"images/aalghrairy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"[[github](http://github.com/aalghrairy)] [[portfolio](team/aalghrairy.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"* Role:  Deliverables and Deadline","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"### Sim Jun Heng","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"\u003cimg src\u003d\"images/simjunheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"[[github](http://github.com/simjunheng)]","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"[[portfolio](team/simjunheng.md)]","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"* Role: Documentation and Integration","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"* Responsibilities: In charge of versioning, repository maintenance, and code integration. Assist and ensure","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"that all documentations are in-order.","lastModifiedDate":"2022-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"prgJ"},"content":"### Pragya Jha","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"prgJ"},"content":"\u003cimg src\u003d\"images/prgj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"prgJ"},"content":"[[github](http://github.com/prgj)]","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"prgJ"},"content":"[[portfolio](team/prgj.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"prgJ"},"content":"* Role: Scheduling and tracking","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"prgJ"},"content":"* Responsibilities: In charge of defining, assigning, adn tracking project tasks.","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"prgJ":7,"AAlghrairy":5,"Rye-Catcher":8,"simjunheng":7,"-":30,"juayhee":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:  ","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"AAlghrairy"},"content":"* is a coach managing a team of players","lastModifiedDate":"2022-02-22"},{"lineNumber":261,"author":{"gitId":"AAlghrairy"},"content":"* has a need to manage a significant number of players","lastModifiedDate":"2022-02-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"AAlghrairy"},"content":"* needs to keep track of administrative tasks","lastModifiedDate":"2022-02-22"},{"lineNumber":267,"author":{"gitId":"AAlghrairy"},"content":"* can help enhance decision-making during games instantaneously","lastModifiedDate":"2022-02-22"},{"lineNumber":268,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":269,"author":{"gitId":"AAlghrairy"},"content":"**Value proposition**: helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-02-22"},{"lineNumber":270,"author":{"gitId":"AAlghrairy"},"content":"schedules, and provides them with a platform to visualise defensive and offensive plays as the game unfolds","lastModifiedDate":"2022-02-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| Priority | As a …​                  | I want to …​                                                    | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"Rye-Catcher"},"content":"|----------|--------------------------|-----------------------------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-02-18"},{"lineNumber":280,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | forgetful coach          | enter team-specific or player note                              | look up these information                               |","lastModifiedDate":"2022-02-18"},{"lineNumber":281,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | coach                    | delete team-specific or player note                             | keep these information relevant and up-to-date          |","lastModifiedDate":"2022-02-18"},{"lineNumber":282,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | forgetful coach          | remember the names of players on my team                        | look up them in case I forget                           |","lastModifiedDate":"2022-02-18"},{"lineNumber":283,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | disorganized             | add and tag new roles/teams to a contact                        | easily retrieve relevant information                    |","lastModifiedDate":"2022-02-18"},{"lineNumber":284,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | coach                    | easily retrieve contact information of relevant parties         | quickly broadcast information to them                   |","lastModifiedDate":"2022-02-18"},{"lineNumber":285,"author":{"gitId":"Rye-Catcher"},"content":"| `* * *`  | organized coach          | view players by their strengths and weaknesses                  | make informed decision on choosing the best person      |","lastModifiedDate":"2022-02-18"},{"lineNumber":286,"author":{"gitId":"Rye-Catcher"},"content":"| `* *`    | lazy and forgetful coach | view a list of help commands and their descriptions             | easily recall how to do a specific task                 |","lastModifiedDate":"2022-02-18"},{"lineNumber":287,"author":{"gitId":"Rye-Catcher"},"content":"| `*`      | strategic coach          | change the position of players (x-y coordinate) during the game | ensure my team works together                           |","lastModifiedDate":"2022-02-18"},{"lineNumber":288,"author":{"gitId":"Rye-Catcher"},"content":"| `*`      | coach                    | drag and drop a player into a calendar                          | plan scheduled events for them according to their needs |","lastModifiedDate":"2022-02-18"},{"lineNumber":289,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"AAlghrairy"},"content":"(For all use cases below, the **System** is `Coach2K22` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"simjunheng"},"content":"**Use case: Add a person**","lastModifiedDate":"2022-03-03"},{"lineNumber":297,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":298,"author":{"gitId":"simjunheng"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":299,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":300,"author":{"gitId":"simjunheng"},"content":"1.  User requests to add a new person in the list","lastModifiedDate":"2022-03-03"},{"lineNumber":301,"author":{"gitId":"simjunheng"},"content":"2.  Coach2K22 shows a list with the newly added person","lastModifiedDate":"2022-03-03"},{"lineNumber":302,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":303,"author":{"gitId":"simjunheng"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":304,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":305,"author":{"gitId":"simjunheng"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":306,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":307,"author":{"gitId":"simjunheng"},"content":"* 1a. The parameters supplied by the user is invalid.","lastModifiedDate":"2022-03-03"},{"lineNumber":308,"author":{"gitId":"simjunheng"},"content":"  ","lastModifiedDate":"2022-03-03"},{"lineNumber":309,"author":{"gitId":"simjunheng"},"content":"    * 1a1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":310,"author":{"gitId":"simjunheng"},"content":"      ","lastModifiedDate":"2022-03-03"},{"lineNumber":311,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":312,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":313,"author":{"gitId":"simjunheng"},"content":"* 1b. Compulsory parameters not supplied by the user.","lastModifiedDate":"2022-03-03"},{"lineNumber":314,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":315,"author":{"gitId":"simjunheng"},"content":"    * 1b1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":316,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":317,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"AAlghrairy"},"content":"2.  Coach2K22 shows a list of persons","lastModifiedDate":"2022-02-25"},{"lineNumber":325,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"AAlghrairy"},"content":"4.  Coach2K22 deletes the person","lastModifiedDate":"2022-02-25"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"AAlghrairy"},"content":"    * 3a1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"AAlghrairy"},"content":"**Use case: Add a note to a person**","lastModifiedDate":"2022-02-25"},{"lineNumber":343,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":344,"author":{"gitId":"AAlghrairy"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":345,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":346,"author":{"gitId":"AAlghrairy"},"content":"1.  User requests to add a note to a person","lastModifiedDate":"2022-02-25"},{"lineNumber":347,"author":{"gitId":"AAlghrairy"},"content":"2.  Coach2K22 shows the new details of the person","lastModifiedDate":"2022-02-25"},{"lineNumber":348,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":349,"author":{"gitId":"AAlghrairy"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":350,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":351,"author":{"gitId":"AAlghrairy"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":352,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":353,"author":{"gitId":"AAlghrairy"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":354,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":355,"author":{"gitId":"AAlghrairy"},"content":"    * 1a1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":356,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":357,"author":{"gitId":"AAlghrairy"},"content":"      Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":358,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":359,"author":{"gitId":"AAlghrairy"},"content":"* 1b. The given list index cannot be found in Coach2K22.","lastModifiedDate":"2022-02-25"},{"lineNumber":360,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":361,"author":{"gitId":"AAlghrairy"},"content":"    * 1b1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":362,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":363,"author":{"gitId":"AAlghrairy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":364,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":365,"author":{"gitId":"AAlghrairy"},"content":"* 1c. The note provided is an empty string.","lastModifiedDate":"2022-02-25"},{"lineNumber":366,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":367,"author":{"gitId":"AAlghrairy"},"content":"    * 1c1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":368,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":369,"author":{"gitId":"AAlghrairy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":370,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":371,"author":{"gitId":"AAlghrairy"},"content":"**Use case: Delete a note from a person**","lastModifiedDate":"2022-02-25"},{"lineNumber":372,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":373,"author":{"gitId":"AAlghrairy"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":374,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":375,"author":{"gitId":"AAlghrairy"},"content":"1.  User requests to delete a note for a person","lastModifiedDate":"2022-02-25"},{"lineNumber":376,"author":{"gitId":"AAlghrairy"},"content":"2.  Coach2K22 shows the new details of the person","lastModifiedDate":"2022-02-25"},{"lineNumber":377,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":378,"author":{"gitId":"AAlghrairy"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":379,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":380,"author":{"gitId":"AAlghrairy"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":381,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":382,"author":{"gitId":"AAlghrairy"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-02-25"},{"lineNumber":383,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":384,"author":{"gitId":"AAlghrairy"},"content":"    * 1a1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":385,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":386,"author":{"gitId":"AAlghrairy"},"content":"      Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":387,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":388,"author":{"gitId":"AAlghrairy"},"content":"* 1b. The given list index is invalid.","lastModifiedDate":"2022-02-25"},{"lineNumber":389,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":390,"author":{"gitId":"AAlghrairy"},"content":"    * 1b1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":391,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":392,"author":{"gitId":"AAlghrairy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":393,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":394,"author":{"gitId":"AAlghrairy"},"content":"* 1c. Notes have not been assigned to the person.","lastModifiedDate":"2022-02-25"},{"lineNumber":395,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":396,"author":{"gitId":"AAlghrairy"},"content":"    * 1c1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":398,"author":{"gitId":"AAlghrairy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":399,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":400,"author":{"gitId":"AAlghrairy"},"content":"* 1d. The given note index is invalid.","lastModifiedDate":"2022-02-25"},{"lineNumber":401,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":402,"author":{"gitId":"AAlghrairy"},"content":"    * 1d1. Coach2K22 shows an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":403,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":404,"author":{"gitId":"AAlghrairy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-02-25"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"simjunheng"},"content":"**Use case: Find persons by name or tag**","lastModifiedDate":"2022-03-10"},{"lineNumber":407,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":408,"author":{"gitId":"simjunheng"},"content":"**MSS**","lastModifiedDate":"2022-02-23"},{"lineNumber":409,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":410,"author":{"gitId":"simjunheng"},"content":"1.  User requests to list persons with a specific name or tag","lastModifiedDate":"2022-03-10"},{"lineNumber":411,"author":{"gitId":"AAlghrairy"},"content":"2.  Coach2K22 shows a list of filtered persons","lastModifiedDate":"2022-02-25"},{"lineNumber":412,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":413,"author":{"gitId":"simjunheng"},"content":"    Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":414,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":415,"author":{"gitId":"simjunheng"},"content":"**Extensions**","lastModifiedDate":"2022-02-23"},{"lineNumber":416,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":417,"author":{"gitId":"simjunheng"},"content":"* 1a. The given name and tag keywords cannot be found in Coach2K22.","lastModifiedDate":"2022-03-02"},{"lineNumber":418,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":419,"author":{"gitId":"simjunheng"},"content":"    * 1a1. Coach2K22 shows an empty list.","lastModifiedDate":"2022-03-02"},{"lineNumber":420,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":421,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":422,"author":{"gitId":"simjunheng"},"content":"    ","lastModifiedDate":"2022-03-02"},{"lineNumber":423,"author":{"gitId":"simjunheng"},"content":"* 1b. The keyword provided is not indicated by a prefix e.g. `n/` or `t/`.","lastModifiedDate":"2022-03-10"},{"lineNumber":424,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":425,"author":{"gitId":"simjunheng"},"content":"    * 1b1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-10"},{"lineNumber":426,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":427,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":428,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":429,"author":{"gitId":"simjunheng"},"content":"* 1c. No keywords are provided after the `find` command.","lastModifiedDate":"2022-03-10"},{"lineNumber":430,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":431,"author":{"gitId":"simjunheng"},"content":"    * 1c1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-10"},{"lineNumber":432,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":433,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":434,"author":{"gitId":"simjunheng"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":435,"author":{"gitId":"simjunheng"},"content":"* 1d. Missing keyword after a prefix is given e.g. `n/` or `t/`.","lastModifiedDate":"2022-03-10"},{"lineNumber":436,"author":{"gitId":"simjunheng"},"content":"  ","lastModifiedDate":"2022-03-10"},{"lineNumber":437,"author":{"gitId":"simjunheng"},"content":"    * 1d1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-10"},{"lineNumber":438,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":439,"author":{"gitId":"simjunheng"},"content":"      Use case ends.    ","lastModifiedDate":"2022-03-10"},{"lineNumber":440,"author":{"gitId":"simjunheng"},"content":"    ","lastModifiedDate":"2022-03-10"},{"lineNumber":441,"author":{"gitId":"juayhee"},"content":"**Use case: Add a tag to a person**","lastModifiedDate":"2022-03-03"},{"lineNumber":442,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":443,"author":{"gitId":"juayhee"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":444,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":445,"author":{"gitId":"juayhee"},"content":"1. User requests to list persons","lastModifiedDate":"2022-03-03"},{"lineNumber":446,"author":{"gitId":"juayhee"},"content":"2. Coach2K22 shows a list of persons","lastModifiedDate":"2022-03-03"},{"lineNumber":447,"author":{"gitId":"juayhee"},"content":"3. User requests to attach a new tag to a person","lastModifiedDate":"2022-03-03"},{"lineNumber":448,"author":{"gitId":"juayhee"},"content":"4. Coach2k22 shows the new details of the person","lastModifiedDate":"2022-03-03"},{"lineNumber":449,"author":{"gitId":"juayhee"},"content":"   ","lastModifiedDate":"2022-03-03"},{"lineNumber":450,"author":{"gitId":"juayhee"},"content":"   Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":451,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":452,"author":{"gitId":"juayhee"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":453,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":454,"author":{"gitId":"simjunheng"},"content":"* 2a. The list is empty","lastModifiedDate":"2022-03-04"},{"lineNumber":455,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":456,"author":{"gitId":"juayhee"},"content":"  Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":457,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":458,"author":{"gitId":"prgJ"},"content":"**Use case: Delete a tag from a person**","lastModifiedDate":"2022-03-03"},{"lineNumber":459,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":460,"author":{"gitId":"prgJ"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":461,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":462,"author":{"gitId":"prgJ"},"content":"1. User requests to list persons","lastModifiedDate":"2022-03-03"},{"lineNumber":463,"author":{"gitId":"prgJ"},"content":"2. Coach2K22 shows a list of persons","lastModifiedDate":"2022-03-03"},{"lineNumber":464,"author":{"gitId":"prgJ"},"content":"3. User requests to remove an existing tag from a person","lastModifiedDate":"2022-03-03"},{"lineNumber":465,"author":{"gitId":"prgJ"},"content":"4. Coach2k22 shows the updated details of the person","lastModifiedDate":"2022-03-03"},{"lineNumber":466,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":467,"author":{"gitId":"prgJ"},"content":"   Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":468,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":469,"author":{"gitId":"prgJ"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":470,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":471,"author":{"gitId":"prgJ"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":472,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":473,"author":{"gitId":"prgJ"},"content":"  Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":474,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":475,"author":{"gitId":"prgJ"},"content":"* 3a. The tag requested to remove does not exist for the person.","lastModifiedDate":"2022-03-03"},{"lineNumber":476,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":477,"author":{"gitId":"prgJ"},"content":"    * 3a1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":478,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":479,"author":{"gitId":"prgJ"},"content":"      Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":480,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":481,"author":{"gitId":"prgJ"},"content":"* 3b. No argument for tag removal is provided.","lastModifiedDate":"2022-03-03"},{"lineNumber":482,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":483,"author":{"gitId":"prgJ"},"content":"    * 3b1. Coach2K22 shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":484,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":485,"author":{"gitId":"simjunheng"},"content":"      Use case ends.","lastModifiedDate":"2022-02-23"},{"lineNumber":486,"author":{"gitId":"simjunheng"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2022-02-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"Rye-Catcher"},"content":"3. Should be able to hold up to 100 teams without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-18"},{"lineNumber":494,"author":{"gitId":"Rye-Catcher"},"content":"4. Should be able to hold up to 50 tags without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-18"},{"lineNumber":495,"author":{"gitId":"Rye-Catcher"},"content":"5. Should be portable so moving from one OS to another OS will not create problems.","lastModifiedDate":"2022-02-18"},{"lineNumber":496,"author":{"gitId":"Rye-Catcher"},"content":"6. Should warn the user when attempting to delete a contact.","lastModifiedDate":"2022-02-18"},{"lineNumber":497,"author":{"gitId":"Rye-Catcher"},"content":"7. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-02-18"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"AAlghrairy"},"content":"* **Time-clash**: An error where the user attempts to schedule an event at the same time as another","lastModifiedDate":"2022-02-22"},{"lineNumber":505,"author":{"gitId":"AAlghrairy"},"content":"* **Switchover**: The action of switching a player for another on a given field","lastModifiedDate":"2022-02-22"},{"lineNumber":506,"author":{"gitId":"AAlghrairy"},"content":"* **Liability-Potential** The statistics of a player\u0027s overall penalties and injuries across games","lastModifiedDate":"2022-02-22"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"AAlghrairy"},"content":"*{More to be added}*","lastModifiedDate":"2022-02-22"},{"lineNumber":509,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"prgJ":26,"AAlghrairy":78,"Rye-Catcher":16,"simjunheng":60,"-":364,"juayhee":16}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"title: User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-2/tp/branch/master/graph/badge.svg?token\u003dN3IGRH3TN0)](https://codecov.io/gh/AY2122S2-CS2103T-W14-2/tp)","lastModifiedDate":"2022-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"#User Guide","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"prgJ"},"content":"Coach2K22 is a desktop app that helps busy sports coaches **organise their overwhelming lists of contacts and messy weekly schedules.** It also provides them with a **platform to visualise defensive and offensive plays** as the game unfolds","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"prgJ"},"content":"1. Download the latest \u0027.jar\u0027 file.","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"prgJ"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your copy of Coach2k22.","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"prgJ"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will list all the possible commands.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"prgJ"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named `John Doe`.","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"prgJ"},"content":"### Listing all contacts : `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"prgJ"},"content":"Shows a list of all persons in our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"prgJ"},"content":"Format: `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"prgJ"},"content":"Adds a person to our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"prgJ"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG_NAME]…​`","lastModifiedDate":"2022-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"prgJ"},"content":"* `add n/Johnson p/83918273 e/johnson@gmail.com t/Hustlers`","lastModifiedDate":"2022-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"prgJ"},"content":"### Deleting a person: `del`","lastModifiedDate":"2022-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"prgJ"},"content":"Delete a person from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":93,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"prgJ"},"content":"Format: `del INDEX`","lastModifiedDate":"2022-02-25"},{"lineNumber":95,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"prgJ"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":97,"author":{"gitId":"prgJ"},"content":"* `del 1` deletes the first person in the contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"prgJ"},"content":"### Adding a tag : `tag-add`","lastModifiedDate":"2022-02-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"prgJ"},"content":"Add tags to a selected person from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"prgJ"},"content":"Format: `tag-add INDEX  TAG_NAME`","lastModifiedDate":"2022-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"prgJ"},"content":"* `tag-add 1 Public Relations` adds the tag `Public Relations` to the first person in the contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"prgJ"},"content":"### Deleting a tag : `tag-del`","lastModifiedDate":"2022-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"prgJ"},"content":"Add tags to a selected person from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"prgJ"},"content":"Format: `tag-del INDEX  TAG_INDEX`","lastModifiedDate":"2022-02-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"prgJ"},"content":"* `tag-del 1 1` deletes the first tag from the first person in the contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"prgJ"},"content":"### Locating persons by keyword : `find`","lastModifiedDate":"2022-02-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"prgJ"},"content":"Find persons matching any of the given keywords from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":123,"author":{"gitId":"prgJ"},"content":"Users can choose to find by `NAME`(s), `TAG`(s), or both.","lastModifiedDate":"2022-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"prgJ"},"content":"Format: `find [n/NAME]…​ [t/TAG]…​`","lastModifiedDate":"2022-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"* One of the optional items e.g. `[n/NAME]` must be present for the command to work. ","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"prgJ"},"content":"* `find n/Alan t/team1`","lastModifiedDate":"2022-02-25"},{"lineNumber":131,"author":{"gitId":"prgJ"},"content":"* `find n/Alan`","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"prgJ"},"content":"* `find t/team1`","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"* `find n/Alex n/Charlotte t/team1 t/team2`","lastModifiedDate":"2022-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"prgJ"},"content":"### Adding a note : `note-add`","lastModifiedDate":"2022-02-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"prgJ"},"content":"Add a note to a selected person from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"prgJ"},"content":"Format: `note-add INDEX  NOTE_DESCRIPTION`","lastModifiedDate":"2022-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"prgJ"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":143,"author":{"gitId":"prgJ"},"content":"* `note-add 1 Surgery Scheduled for tomorrow` adds the note \"Surgery Scheduled for tomorrow\" to the 1st person in the contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"prgJ"},"content":"### Deleting a note : `note-del`","lastModifiedDate":"2022-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"prgJ"},"content":"Delete the note to a selected person from our contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"prgJ"},"content":"Format: `note-del INDEX  NOTE_INDEX`","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"prgJ"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"prgJ"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"prgJ"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"prgJ"},"content":"Examples:","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"prgJ"},"content":"* `note-del 1 1` deletes the first note from the first person in the contact list.","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":160,"author":{"gitId":"prgJ"},"content":"### Listing all the commands : `help`","lastModifiedDate":"2022-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":162,"author":{"gitId":"prgJ"},"content":"Show a list of all the commands with their respective format and a short description of what they do.","lastModifiedDate":"2022-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"prgJ"},"content":"Format: `help`","lastModifiedDate":"2022-02-25"},{"lineNumber":165,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":167,"author":{"gitId":"prgJ"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-02-25"},{"lineNumber":168,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":169,"author":{"gitId":"prgJ"},"content":"Exits the program.","lastModifiedDate":"2022-02-25"},{"lineNumber":170,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":171,"author":{"gitId":"prgJ"},"content":"Format: `exit`","lastModifiedDate":"2022-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"prgJ"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Coach2k22 home folder.","lastModifiedDate":"2022-02-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"prgJ"},"content":"| Action       | Format, Examples                                                                                                   |","lastModifiedDate":"2022-02-25"},{"lineNumber":185,"author":{"gitId":"prgJ"},"content":"|--------------|--------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-25"},{"lineNumber":186,"author":{"gitId":"prgJ"},"content":"| **List**     | `list`                                                                                                             |","lastModifiedDate":"2022-02-25"},{"lineNumber":187,"author":{"gitId":"prgJ"},"content":"| **Add**      | `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​` \u003cbr\u003e e.g., `add n/Johnson p/83918273 e/johnson@gmail.com t/Hustlers` |","lastModifiedDate":"2022-02-25"},{"lineNumber":188,"author":{"gitId":"prgJ"},"content":"| **Del**      | `del INDEX`\u003cbr\u003e e.g., `del 1`                                                                                      |","lastModifiedDate":"2022-02-25"},{"lineNumber":189,"author":{"gitId":"simjunheng"},"content":"| **Add Tag**  | `tag-add INDEX  TAG_NAME`\u003cbr\u003e e.g., `tag-add 1 Public Relations`                                                   |","lastModifiedDate":"2022-03-02"},{"lineNumber":190,"author":{"gitId":"simjunheng"},"content":"| **Del Tag**  | `tag-del INDEX  TAG_INDEX`\u003cbr\u003e e.g., `tag-del 1 1`                                                                 |","lastModifiedDate":"2022-03-02"},{"lineNumber":191,"author":{"gitId":"simjunheng"},"content":"| **Find**     | `find [n/NAME]…​ [t/TAG]…​`\u003cbr\u003e e.g., `find n/Alex n/Charlotte t/team1 t/team2`                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":192,"author":{"gitId":"simjunheng"},"content":"| **Add Note** | `note-add INDEX  NOTE_DESCRIPTION`\u003cbr\u003e e.g., `note-add 1 Surgery Scheduled for tomorrow`                           |","lastModifiedDate":"2022-03-02"},{"lineNumber":193,"author":{"gitId":"simjunheng"},"content":"| **Del Note** | `note-del INDEX  NOTE_INDEX`\u003cbr\u003e e.g., `note-del 1 1`                                                              |","lastModifiedDate":"2022-03-02"},{"lineNumber":194,"author":{"gitId":"prgJ"},"content":"| **Help**     | `help`                                                                                                             |","lastModifiedDate":"2022-02-25"},{"lineNumber":195,"author":{"gitId":"prgJ"},"content":"| **Exit**     | `exit`                                                                                                             |","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"prgJ":65,"simjunheng":9,"-":121}},{"path":"docs/team/aalghrairy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"### Project: Coach2K22","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"#### Overview:","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"Our product helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"schedules. It also provides them with a platform to visualise defensive and offensive plays as the game unfolds.","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"#### Summary of Contributions:","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"* **Code contributed**: [RepoSense link](","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003daalghrairy\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"* **Enhancements Implemented:**","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"  * _to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"  * _to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"  * Added the Product Scope and Glossary sections","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"  * Maintaining the issue tracker","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"  * _to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"* **Contributions beyond the project team:**","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"  * Evidence of helping others:","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"  * Evidence of technical leadership","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"AAlghrairy":25}},{"path":"docs/team/juayhee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"juayhee"},"content":"### Project: Coach2K22","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"juayhee"},"content":"#### Overview","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"juayhee"},"content":"Our product helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"juayhee"},"content":"schedules. It also provides them with a platform to visualise defensive and offensive plays as the game unfolds.","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"juayhee"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"juayhee"},"content":"#### Summary of Contributions","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"juayhee"},"content":"* **Code contributed**: [RepoSense link](","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"juayhee"},"content":"  https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djuayhee\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"juayhee"},"content":"* **Enhancement implemented**","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"juayhee"},"content":"* **Contributions to the UG**","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"juayhee"},"content":"* **Contributions to the DG**","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"juayhee"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"juayhee"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"juayhee"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"juayhee"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"juayhee":21}},{"path":"docs/team/prgj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prgJ"},"content":"### Project: Coach2K22","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"prgJ"},"content":"#### Overview","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"prgJ"},"content":"Our product helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"prgJ"},"content":"schedules. It also provides them with a platform to visualise defensive and offensive plays as the game unfolds.","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"prgJ"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"prgJ"},"content":"#### Summary of Contributions","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"prgJ"},"content":"* **Code contributed**: [RepoSense link](","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"prgJ"},"content":"  https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dprgj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"prgJ"},"content":"* **Enhancement implemented**","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"prgJ"},"content":"* **Contributions to the UG**","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"prgJ"},"content":"* **Contributions to the DG**","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"prgJ"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"prgJ"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"prgJ"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"prgJ"},"content":"    * _to be added soon_","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"prgJ":21}},{"path":"docs/team/rye-catcher.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"### Project: Coach2K22","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"#### Overview","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"Our product helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"schedules. It also provides them with a platform to visualise defensive and offensive plays as the game unfolds.","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"#### Summary of Contributions","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"* **Code contributed**: [RepoSense link](","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"  https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003drye-catcher\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"* **Enhancement implemented**","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"* **Contributions to the UG**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"* **Contributions to the DG**","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"Rye-Catcher":21}},{"path":"docs/team/simjunheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"### Project: Coach2K22","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"#### Overview","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"Our product helps busy sports coaches organise their overwhelming lists of contacts and messy weekly","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"schedules. It also provides them with a platform to visualise defensive and offensive plays as the game unfolds.","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"#### Summary of Contributions","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"* **Code contributed**: [RepoSense link](","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"  https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dsimjunheng\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"* **Enhancement implemented**","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"* **Contributions to the UG**","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"* **Contributions to the DG**","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    * _to be added soon_","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"simjunheng":21}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"import seedu.address.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"import seedu.address.storage.TaskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        TaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        ReadOnlyAddressBook initialAddressData;","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        ReadOnlyTaskBook initialTaskData;","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"            initialAddressData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"            taskBookOptional \u003d storage.readTaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"            initialTaskData \u003d taskBookOptional.orElseGet(SampleDataUtil::getSampleTaskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"            initialTaskData \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskBook\");","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"            initialTaskData \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"        return new ModelManager(initialAddressData, initialTaskData, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simjunheng":26,"-":176}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_INVALID_NOTE_DISPLAYED_INDEX \u003d \"The note index provided is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AAlghrairy":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"AAlghrairy":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"            storage.saveTaskBook(model.getTaskBook());","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"AAlghrairy"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AAlghrairy":6,"simjunheng":1,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":" * Adds a note to a person in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String COMMAND_WORD \u003d \"note-add\";","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"            + \": Add a note to a selected person from our contact list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"            + \"NOTE_DESCRIPTION (must be non-empty and not more than 50 characters)\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"            + \"1 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"            + \"Surgery Scheduled for tomorrow\";","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"            \"AddNote command not implemented yet\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Note: %2$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"    private final Index index;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"    private final Note note;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"     * @param index of the person in the filtered person list to add the note","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"     * @param note of the person to be added","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"    public AddNoteCommand(Index index, Note note) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"Rye-Catcher"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"Rye-Catcher"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"Rye-Catcher"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"Rye-Catcher"},"content":"        List\u003cNote\u003e newNotes \u003d new ArrayList\u003c\u003e(personToEdit.getNotes());","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"Rye-Catcher"},"content":"        newNotes.add(note);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"Rye-Catcher"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), newNotes);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"Rye-Catcher"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"Rye-Catcher"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"Rye-Catcher"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"Rye-Catcher"},"content":"     * Generates a command execution success message","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"Rye-Catcher"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"Rye-Catcher"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"Rye-Catcher"},"content":"        return String.format(MESSAGE_SUCCESS, personToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"Rye-Catcher"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"Rye-Catcher"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"Rye-Catcher"},"content":"                || (other instanceof AddNoteCommand // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"Rye-Catcher"},"content":"                \u0026\u0026 (index.equals(((AddNoteCommand) other).index)","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"Rye-Catcher"},"content":"                    \u0026\u0026 note.equals(((AddNoteCommand) other).note)));","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Rye-Catcher":89}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":" * Delete a note from a person in the address book","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"    public static final String COMMAND_WORD \u003d \"note-del\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"            + \": Delete a note from the note-list of selected person from our contact list. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"            + \"NOTE-INDEX (must be a positive)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"            + \"1 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"            + \"2\";","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"            \"DeleteNote command not implemented yet\";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Note has been deleted: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Index: %2$d\";","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"    private final Index index;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"    private final Index noteIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"     * Constructor of DeleteNoteCommand class","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"AAlghrairy"},"content":"     * @param index index of the person in the filtered person list","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"AAlghrairy"},"content":"     * @param noteIndex index of the note from the person\u0027s note-list to be deleted","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"AAlghrairy"},"content":"    public DeleteNoteCommand(Index index, Index noteIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"AAlghrairy"},"content":"        requireAllNonNull(index, noteIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"AAlghrairy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"AAlghrairy"},"content":"        this.noteIndex \u003d noteIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"AAlghrairy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"AAlghrairy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"AAlghrairy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"AAlghrairy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"AAlghrairy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"AAlghrairy"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"AAlghrairy"},"content":"        List\u003cNote\u003e newNotes \u003d new ArrayList\u003c\u003e(personToEdit.getNotes());","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"AAlghrairy"},"content":"        if (noteIndex.getZeroBased() \u003e\u003d newNotes.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"AAlghrairy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"        newNotes.remove(noteIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"AAlghrairy"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"AAlghrairy"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), newNotes);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"AAlghrairy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"AAlghrairy"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"AAlghrairy"},"content":"     * Generates a command execution success message","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"AAlghrairy"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"AAlghrairy"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"AAlghrairy"},"content":"        return String.format(MESSAGE_SUCCESS, personToEdit);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"AAlghrairy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"AAlghrairy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"AAlghrairy"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"AAlghrairy"},"content":"                || (other instanceof DeleteNoteCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"AAlghrairy"},"content":"                \u0026\u0026 index.equals(((DeleteNoteCommand) other).index)","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"AAlghrairy"},"content":"                \u0026\u0026 noteIndex.equals(((DeleteNoteCommand) other).noteIndex));","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"AAlghrairy":93}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"Rye-Catcher"},"content":"        List\u003cNote\u003e updatedNotes \u003d editPersonDescriptor.getNotes().orElse(personToEdit.getNotes());","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"Rye-Catcher"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedNotes);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"Rye-Catcher"},"content":"        private List\u003cNote\u003e notes;","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"Rye-Catcher"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"Rye-Catcher"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"Rye-Catcher"},"content":"         * Sets {@code notes} to this object\u0027s {@code notes}.","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"Rye-Catcher"},"content":"         * A defensive copy of {@code notes} is used internally.","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"Rye-Catcher"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"Rye-Catcher"},"content":"        public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"Rye-Catcher"},"content":"            this.notes \u003d (notes !\u003d null) ? new ArrayList\u003c\u003e(notes) : null;","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"Rye-Catcher"},"content":"        /**","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"Rye-Catcher"},"content":"         * Returns an unmodifiable note list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"Rye-Catcher"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"Rye-Catcher"},"content":"         * Returns {@code Optional#empty()} if {@code notes} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"Rye-Catcher"},"content":"         */","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"Rye-Catcher"},"content":"        public Optional\u003cList\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"Rye-Catcher"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableList(notes)) : Optional.empty();","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"Rye-Catcher"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-10"},{"lineNumber":245,"author":{"gitId":"Rye-Catcher"},"content":"                    \u0026\u0026 getNotes().equals(e.getNotes());","lastModifiedDate":"2022-03-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Rye-Catcher":25,"simjunheng":1,"-":222}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"            + \": Finds all persons whose names or tags contain any of \"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Alex \" + PREFIX_NAME + \"Charlotte \"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    private final PersonNameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    private final TagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"     * Initialises new object using {@code namePredicate} and {@code tagPredicate}","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    public FindCommand(PersonNameContainsKeywordsPredicate namePredicate, TagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        model.updateFilteredPersonList(namePredicate.or(tagPredicate));","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 namePredicate.equals(((FindCommand) other).namePredicate)","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 tagPredicate.equals(((FindCommand) other).tagPredicate)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"simjunheng":22,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"        List\u003cNote\u003e noteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, noteList);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Rye-Catcher":5,"simjunheng":1,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":" * Parses input arguments and creates a new {@code AddNoteCommand} object","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddNoteCommand}","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"     * and returns a {@code AddNoteCommand} object for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"            Note note \u003d ParserUtil.parseNote(splitArgs[1]);","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"            return new AddNoteCommand(index, note);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"        } catch (ParseException | IndexOutOfBoundsException pe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Rye-Catcher":30}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"Rye-Catcher"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AAlghrairy":4,"Rye-Catcher":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":" * Parses input arguments and creates a new {@code DeleteNoteCommand} object","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteNoteCommand}","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"     * and returns a {@code DeleteNoteCommand} object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"            String[] splitArgs \u003d args.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"            Index noteIndex \u003d ParserUtil.parseNoteIndex(splitArgs[1]);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"            return new DeleteNoteCommand(index, noteIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"        } catch (ParseException | IndexOutOfBoundsException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"AAlghrairy":30}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_NAME) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TAG))","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"                || trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e nameKeywords \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e tagKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        return new FindCommand(new PersonNameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(tagKeywords));","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"simjunheng":22,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"    public static final String MESSAGE_INVALID_NOTE_INDEX \u003d \"Note index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"     * Parses {@code oneBasedNoteIndex} into an {@code NoteIndex} and returns it. Leading and trailing whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"AAlghrairy"},"content":"     * will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"AAlghrairy"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"AAlghrairy"},"content":"    public static Index parseNoteIndex(String oneBasedNoteIndex) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"AAlghrairy"},"content":"        String trimmedNoteIndex \u003d oneBasedNoteIndex.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"AAlghrairy"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedNoteIndex)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"AAlghrairy"},"content":"            throw new ParseException(MESSAGE_INVALID_NOTE_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"AAlghrairy"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedNoteIndex));","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"Rye-Catcher"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"Rye-Catcher"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"Rye-Catcher"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"Rye-Catcher"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"Rye-Catcher"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"Rye-Catcher"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"Rye-Catcher"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"Rye-Catcher"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"Rye-Catcher"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"Rye-Catcher"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AAlghrairy":15,"simjunheng":1,"Rye-Catcher":16,"-":123}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"     * Sets the user prefs\u0027 task book file path.","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"    void setTaskBookFilePath(Path taskBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"     * Replaces task book data with the data in {@code taskBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"    /** Returns the TaskBook */","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"     * The task must exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"     * Adds the given task.","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"     * {@code task} must not already exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"simjunheng"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"simjunheng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"simjunheng"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"simjunheng":53,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    private final TaskBook taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        requireAllNonNull(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        this.taskBook \u003d new TaskBook(taskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        this(new AddressBook(), new TaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"        userPrefs.setTaskBookFilePath(taskBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"simjunheng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"simjunheng"},"content":"        this.taskBook.resetData(taskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"simjunheng"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"simjunheng"},"content":"        return taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"simjunheng"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"simjunheng"},"content":"        return taskBook.hasTask(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"simjunheng"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"simjunheng"},"content":"        taskBook.removeTask(target);","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"simjunheng"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"simjunheng"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"simjunheng"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"simjunheng"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"simjunheng"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"simjunheng"},"content":"        taskBook.setTask(target, editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"simjunheng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"simjunheng"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"simjunheng"},"content":"     * {@code versionedTaskBook}","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"simjunheng"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"simjunheng"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"simjunheng"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"simjunheng"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":216,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-11"},{"lineNumber":217,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 taskBook.equals(other.taskBook)","lastModifiedDate":"2022-03-11"},{"lineNumber":218,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simjunheng":75,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":" * Unmodifiable view of an task book","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":15}},{"path":"src/main/java/seedu/address/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":" * Wraps all data at the task-book level","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    /*","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    public TaskBook() {}","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        this();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"     * Resets the existing data of this {@code TaskBook} with {@code newData}.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    //// task-level operations","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"     * Adds a task to the Task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"     * The task must not already exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        tasks.add(t);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"     * Removes {@code key} from this {@code TaskBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"     * {@code key} must exist in the task book.","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"    //// util methods","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":122}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    private Path taskBookFilePath \u003d Paths.get(\"data\", \"taskbook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"        return taskBookFilePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        this.taskBookFilePath \u003d taskBookFilePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simjunheng":10,"-":87}},{"path":"src/main/java/seedu/address/model/name/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.name;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simjunheng":1,"-":58}},{"path":"src/main/java/seedu/address/model/name/PersonNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.name;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"public class PersonNameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    public PersonNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof PersonNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 keywords.equals(((PersonNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"simjunheng":6,"-":25}},{"path":"src/main/java/seedu/address/model/name/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.name;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":32}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":" * Represents a Note in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"public class Note {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Notes should be a String which is no longer than 50 characters\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Print}+\"; // printable","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"    public static final int MAX_LENGTH \u003d 50;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    public final String note;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"     * @param note A valid note string.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"    public Note(String note) {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"        requireNonNull(note);","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"                \u0026\u0026 note.equals(((Note) other).note)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"        return note.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"Rye-Catcher"},"content":"        return note;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Rye-Catcher":55}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.util.ListUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"    private final List\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cNote\u003e notes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"Rye-Catcher"},"content":"     * Returns an immutable note list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"Rye-Catcher"},"content":"    public List\u003cNote\u003e getNotes() {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"Rye-Catcher"},"content":"        return Collections.unmodifiableList(notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"Rye-Catcher"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"Rye-Catcher"},"content":"                \u0026\u0026 otherPerson.getNotes().equals(getNotes());","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"Rye-Catcher"},"content":"        return Objects.hash(name, phone, email, address, tags, notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"Rye-Catcher"},"content":"        List\u003cNote\u003e notes \u003d getNotes();","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"Rye-Catcher"},"content":"        if (!notes.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"Rye-Catcher"},"content":"            builder.append(\"; Notes: \");","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"Rye-Catcher"},"content":"            ListUtil.toIndexedStringList(notes)","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"Rye-Catcher"},"content":"                    .forEach(builder::append);","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rye-Catcher":25,"simjunheng":1,"-":119}},{"path":"src/main/java/seedu/address/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"                .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"simjunheng":33}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":" * Represents a Task\u0027s date in the schedule book.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"public class Date {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be in the following format DD-MM-YYYY \"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"            + \"and adhere to the following constraints: \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"            + \"1. YYYY should be a 4-digit numeric \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"            + \"2. MM should be a 2-digit numeric ranging from 01 to 12 \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"            + \"3. DD should be a 2-digit numeric, \"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"            + \"however the range of this numeric depends on the month and year \"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"            + \"e.g. 2020-02-29 is valid as it is a leap year while 2021-02-29 is invalid\";","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        value \u003d date;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"     * Returns true if the given date is valid.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"            DateTimeFormatter customFormat \u003d DateTimeFormatter","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                    .ofPattern(\"dd-MM-uuuu\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"            LocalDate.parse(date, customFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        return value;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":69}},{"path":"src/main/java/seedu/address/model/task/EndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":" * Represents a Task\u0027s end time in the schedule book.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEndTime(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"public class EndTime {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The end time should be in the following format HH:MM \"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"            + \"and adhere to the following constraints: \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"            + \"1. HH should be a 2-digit numeric in the range of 00 to 23 \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"            + \"2. MM should be a 2-digit numeric in the range of 00 to 59\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"     * Constructs a {@code EndTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"     * @param time A valid EndTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public EndTime(String time) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        checkArgument(isValidEndTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        value \u003d time;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * Returns true if the given time is valid.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    public static boolean isValidEndTime(String time) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"            DateTimeFormatter customFormat \u003d DateTimeFormatter","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"                    .ofPattern(\"HH:mm\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"            LocalTime.parse(time, customFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof EndTime // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 value.equals(((EndTime) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":60}},{"path":"src/main/java/seedu/address/model/task/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":" * Represents a Task\u0027s start time in the schedule book.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartTime(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"public class StartTime {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The start time should be in the following format HH:MM \"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"            + \"and adhere to the following constraints: \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"            + \"1. HH should be a 2-digit numeric in the range of 00 to 23 \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"            + \"2. MM should be a 2-digit numeric in the range of 00 to 59\";","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    public final String value;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"     * Constructs a {@code StartTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"     * @param time A valid StartTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public StartTime(String time) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        checkArgument(isValidStartTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        value \u003d time;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * Returns true if the given time is valid.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    public static boolean isValidStartTime(String time) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"            DateTimeFormatter customFormat \u003d DateTimeFormatter","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"                    .ofPattern(\"HH:mm\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"            LocalTime.parse(time, customFormat);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof StartTime // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 value.equals(((StartTime) other).value)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":60}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"public class Task {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    //Identity fields","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    private final Name name;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    private final Date date;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    private final StartTime startTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    private final EndTime endTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    //Data fields","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    public Task(Name name, Date date, StartTime startTime, EndTime endTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        requireAllNonNull(name, date, startTime, endTime, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    //Getters","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        return name;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        return date;","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"    public StartTime getStartTime() {","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        return startTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    public EndTime getEndTime() {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        return endTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"AAlghrairy"},"content":"     * Returns the start and end time values joined together for Task Card label","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"AAlghrairy"},"content":"     * @return appended values of start and end time","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"AAlghrairy"},"content":"    public String appendStartAndEndTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"AAlghrairy"},"content":"        return startTime.value + \" - \" + endTime.value;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 otherTask.getDate().equals(getDate())","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 otherTask.getStartTime().equals(getStartTime())","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 otherTask.getEndTime().equals(getEndTime())","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"        return Objects.hash(name, date, startTime, endTime, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"                .append(\"; Start Time: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"                .append(getStartTime())","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"                .append(\"; End Time: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"                .append(getEndTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"AAlghrairy":8,"simjunheng":120}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"     * The person identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"                    return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"                }","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"simjunheng"},"content":"        return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":138}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * Indicates that the operation will result in duplicate Tasks (Tasks are consider duplicates if they","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" * have the same identity).","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":12}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":" * Indicates that the operation is unable to find the specified task.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":8}},{"path":"src/main/java/seedu/address/model/util/ListUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.model.util;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":" * Contains utility methods for converting a list of Object to a list of String.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"public class ListUtil {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"     * Convert a list of Object to a list of indexed String","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"     * @param lst the list of Object","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"     * @param \u003cT\u003e the Object type, must have a meaningful @code{toString} method","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"     * @return the list of String with each element indexed","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    public static \u003cT\u003e List\u003cString\u003e toIndexedStringList(List\u003cT\u003e lst) {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"        return lst.stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"                .map(obj -\u003e (lst.indexOf(obj) + 1) + \". \" + obj.toString() + \" \")","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Rye-Catcher":21}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.EndTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.StartTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"friends\"), getNoteList(\"likes bing chilling\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"colleagues\", \"friends\"), getNoteList(\"surgery scheduled today\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"neighbours\"), getNoteList(\"birthday next Monday\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"family\"), getNoteList(\"buy a new phone\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"classmates\"), getNoteList(\"play games together tonight\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"                getTagSet(\"colleagues\"), getNoteList(\"meeting with him this Sunday\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"            new Task(new Name(\"Shareholders Meeting\"), new Date(\"10-04-2022\"), new StartTime(\"09:00\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"                    new EndTime(\"12:00\"), getTagSet(\"team1\")),","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"            new Task(new Name(\"Team Training\"), new Date(\"11-04-2022\"), new StartTime(\"09:00\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"                    new EndTime(\"12:00\"), getTagSet(\"team1\")),","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"            new Task(new Name(\"Annual Dinner\"), new Date(\"11-04-2022\"), new StartTime(\"18:00\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"                    new EndTime(\"20:00\"), getTagSet(\"family\", \"friends\")),","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"            new Task(new Name(\"Recruitment Talk\"), new Date(\"12-04-2022\"), new StartTime(\"15:00\"),","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"                    new EndTime(\"18:00\"), getTagSet(\"school\"))","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    public static ReadOnlyTaskBook getSampleTaskBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"        TaskBook sampleTb \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"            sampleTb.addTask(sampleTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        return sampleTb;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"Rye-Catcher"},"content":"     * Returns a note list containing the list of strings given.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"Rye-Catcher"},"content":"    public static List\u003cNote\u003e getNoteList(String... strings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"Rye-Catcher"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"Rye-Catcher"},"content":"                .map(Note::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"Rye-Catcher"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Rye-Catcher":17,"simjunheng":24,"-":56}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"    private final String note;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given {@code note}.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"    public JsonAdaptedNote(String note) {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"        this.note \u003d note;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"        note \u003d source.note;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"    @JsonValue","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"    public String getNote() {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"        return note;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted note.","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"        if (!Note.isValidNote(note)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"        return new Note(note);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"Rye-Catcher":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"            @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"Rye-Catcher"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"        final List\u003cNote\u003e personNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"            personNotes.add(note.toModelType());","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"Rye-Catcher"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"Rye-Catcher"},"content":"        final List\u003cNote\u003e modelNotes \u003d new ArrayList\u003c\u003e(personNotes);","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"Rye-Catcher"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelNotes);","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simjunheng":1,"Rye-Catcher":16,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.EndTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.StartTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    private final String name;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    private final String date;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    private final String startTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    private final String endTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"            @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        startTime \u003d source.getStartTime().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        endTime \u003d source.getEndTime().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"                    StartTime.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        if (!StartTime.isValidStartTime(startTime)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        final StartTime modelStartTime \u003d new StartTime(startTime);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, EndTime.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        if (!EndTime.isValidEndTime(endTime)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"            throw new IllegalValueException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"        final EndTime modelEndTime \u003d new EndTime(endTime);","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"        return new Task(modelName, modelDate, modelStartTime, modelEndTime, modelTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":105}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":" * An Immutable TaskBook that is serializable to JSON format.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"@JsonRootName(value \u003d \"taskbook\")","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given tasks.","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * Converts a given {@code ReadOnlyTaskBook} into this class for Jackson use.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"            if (taskBook.hasTask(task)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"            taskBook.addTask(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        return taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":59}},{"path":"src/main/java/seedu/address/storage/JsonTaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"public class JsonTaskBookStorage implements TaskBookStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskBookStorage.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    public JsonTaskBookStorage(Path filePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        return filePath;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        return readTaskBook(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"     * Similar to {@link #readTaskBook()}.","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"        if (!jsonTaskBook.isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"        saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"     * Similar to {@link #saveTaskBook(ReadOnlyTaskBook)}.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":76}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TaskBookStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    void saveAddressBook(ReadOnlyAddressBook taskBook) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"simjunheng":12,"-":30}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    private TaskBookStorage taskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, TaskBookStorage taskBookStorage,","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        this.taskBookStorage \u003d taskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"        return taskBookStorage.getTaskBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"        return readTaskBook(taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        return taskBookStorage.readTaskBook(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"        saveTaskBook(taskBook, taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"        taskBookStorage.saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simjunheng":34,"-":77}},{"path":"src/main/java/seedu/address/storage/TaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":" * Represents a storage for {@link seedu.address.model.TaskBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"public interface TaskBookStorage {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"     * Returns TaskBook data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook)","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":44}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"simjunheng":2,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"    private StrategyPanel strategyPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"AAlghrairy"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"    private AnchorPane strategyPanelPlaceholder;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"AAlghrairy"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"AAlghrairy"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"Rye-Catcher"},"content":"        strategyPanel \u003d new StrategyPanel();","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"Rye-Catcher"},"content":"        strategyPanelPlaceholder.getChildren().add(strategyPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AAlghrairy":6,"Rye-Catcher":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.util.ListUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"    private Label notes;","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"Rye-Catcher"},"content":"        notes.setText(ListUtil.toIndexedStringList(person.getNotes())","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"Rye-Catcher"},"content":"                .stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"                .collect(Collectors.joining(\"\\n\")));","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Rye-Catcher":7,"-":77}},{"path":"src/main/java/seedu/address/ui/StrategyPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.Cursor;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"public class StrategyPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"    private static final String FXML \u003d \"StrategyPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"    private static double orgSceneX;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    private static double orgSceneY;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"    private static double orgTranslateX;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"    private static double orgTranslateY;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"    private Circle player1;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"    private Circle player2;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"    private Circle player3;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"    // Credit to http://java-buddy.blogspot.com/2013/07/move-node-to-front.html","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"    private EventHandler\u003cMouseEvent\u003e pressHandler \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"            @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"            public void handle(MouseEvent t) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"                orgSceneX \u003d t.getSceneX();","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"                orgSceneY \u003d t.getSceneY();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"                orgTranslateX \u003d ((Circle) (t.getSource())).getTranslateX();","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"                orgTranslateY \u003d ((Circle) (t.getSource())).getTranslateY();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"    };","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"    // Credit to http://java-buddy.blogspot.com/2013/07/move-node-to-front.html","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"    private EventHandler\u003cMouseEvent\u003e dragHandler \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"            new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"            @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"            public void handle(MouseEvent t) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"                double offsetX \u003d t.getSceneX() - orgSceneX;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"                double offsetY \u003d t.getSceneY() - orgSceneY;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"                double newTranslateX \u003d orgTranslateX + offsetX;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"                double newTranslateY \u003d orgTranslateY + offsetY;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"                Circle tmp \u003d (Circle) (t.getSource());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"                tmp.setTranslateX(newTranslateX);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Rye-Catcher"},"content":"                tmp.setTranslateY(newTranslateY);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"    };","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Rye-Catcher"},"content":"     * Creates a {@code StrategyPanel} with draggable circles.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Rye-Catcher"},"content":"    public StrategyPanel() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Rye-Catcher"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Rye-Catcher"},"content":"        initCircle(player1, 50, 100, 100, Color.RED);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Rye-Catcher"},"content":"        initCircle(player2, 50, 200, 200, Color.LIGHTBLUE);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Rye-Catcher"},"content":"        initCircle(player3, 30, 200, 200, Color.YELLOW);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"Rye-Catcher"},"content":"    private void initCircle(Circle circle, double rad, double x, double y, Paint color) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setRadius(rad);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setFill(color);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setCenterX(x);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setCenterY(y);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setCursor(Cursor.HAND);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setOnMousePressed(pressHandler);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"        circle.setOnMouseDragged(dragHandler);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Rye-Catcher":75}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"    private static final String FXML \u003d \"TaskCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"    public final Task task;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"    private Label name;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"    private Label date;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"    private Label time;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"AAlghrairy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"        date.setText(task.getDate().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"AAlghrairy"},"content":"        time.setText(task.appendStartAndEndTime());","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"AAlghrairy"},"content":"        task.getTags().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"AAlghrairy"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"AAlghrairy"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"AAlghrairy"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"AAlghrairy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"AAlghrairy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"AAlghrairy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"AAlghrairy"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"AAlghrairy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"AAlghrairy"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"AAlghrairy"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"AAlghrairy"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"AAlghrairy"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"AAlghrairy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"AAlghrairy"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"AAlghrairy":66}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"AAlghrairy"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"AAlghrairy"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"AAlghrairy"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"AAlghrairy"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"AAlghrairy"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"AAlghrairy":49}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    -fx-background-color: #696969;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":".tab {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"    -fx-background-insets: 0 1 0 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    -fx-background-color: #D3D3D3;","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":".tab .tab-label {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":".tab:selected {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    -fx-background-insets: 0 1 0 1;","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":".tab:selected .tab-label {","lastModifiedDate":"2022-03-08"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"simjunheng":33,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"            \u003cTabPane minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"              \u003ctabs\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"                \u003cTab text\u003d\"Contact\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"                  \u003c/Tab\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"                  \u003cTab text\u003d\"Schedule\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"                        \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"AAlghrairy"},"content":"                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"AAlghrairy"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"AAlghrairy"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"                              \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"                  \u003c/Tab\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"                  \u003cTab text\u003d\"Strategy\"\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"                    \u003ccontent\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"                        \u003cVBox fx:id\u003d\"strategy\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-boarder\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"Rye-Catcher"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"Rye-Catcher"},"content":"                               \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"Rye-Catcher"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"                               \u003cAnchorPane fx:id\u003d\"strategyPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"Rye-Catcher"},"content":"                          \u003c/children\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"Rye-Catcher"},"content":"                       \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"                    \u003c/content\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"                  \u003c/Tab\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"              \u003c/tabs\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"            \u003c/TabPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"AAlghrairy":8,"simjunheng":28,"Rye-Catcher":9,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"      \u003cLabel style\u003d\"-fx-font-weight: bold;\" styleClass\u003d\"cell_small_label\" text\u003d\"${\u0027\\nNotes:\u0027}\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"      \u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Rye-Catcher":2,"-":36}},{"path":"src/main/resources/view/StrategyPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"   \u003cCircle fx:id\u003d\"player1\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"   \u003cCircle fx:id\u003d\"player2\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"   \u003cCircle fx:id\u003d\"player3\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Rye-Catcher":11}},{"path":"src/main/resources/view/TaskCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"      \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"AAlghrairy":39}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"AAlghrairy":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"import seedu.address.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"import seedu.address.storage.TaskBookStorage;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        TaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"                new JsonTaskBookStorage(temporaryFolder.resolve(\"taskBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        TaskBookStorage taskBookStorage \u003d null; //to be implemented","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"simjunheng"},"content":"                new TaskBook(), new UserPrefs()); // Not fully implemented","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"simjunheng":10,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"simjunheng":4,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"simjunheng"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"simjunheng"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"simjunheng"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"simjunheng"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"simjunheng"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":188,"author":{"gitId":"simjunheng"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":190,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":191,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":192,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":193,"author":{"gitId":"simjunheng"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"simjunheng"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"simjunheng":52,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"    private static final String NOTE_STUB_1 \u003d \"Some note 1\";","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"    private static final String NOTE_STUB_2 \u003d \"Some note 2\";","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNotes(NOTE_STUB_1).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"                new Note(editedPerson.getNotes().get(0).note));","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"Rye-Catcher"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Rye-Catcher"},"content":"                seedu.address.logic.commands.AddNoteCommand.MESSAGE_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"Rye-Catcher"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"                new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"Rye-Catcher"},"content":"                new TaskBook(model.getTaskBook()),","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"Rye-Catcher"},"content":"                new UserPrefs());","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"Rye-Catcher"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"Rye-Catcher"},"content":"        assertCommandSuccess(addNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Rye-Catcher"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"Rye-Catcher"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"Rye-Catcher"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"Rye-Catcher"},"content":"        assertCommandFailure(addNoteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"Rye-Catcher"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"Rye-Catcher"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"Rye-Catcher"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"Rye-Catcher"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Rye-Catcher"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"Rye-Catcher"},"content":"        assertCommandFailure(addNoteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"        final AddNoteCommand standardCommand \u003d new AddNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"Rye-Catcher"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"Rye-Catcher"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"Rye-Catcher"},"content":"        AddNoteCommand commandWithSameValues \u003d new AddNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"Rye-Catcher"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"Rye-Catcher"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"Rye-Catcher"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"Rye-Catcher"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"Rye-Catcher"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"Rye-Catcher"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"Rye-Catcher"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Rye-Catcher"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"Rye-Catcher"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"Rye-Catcher"},"content":"        assertFalse(standardCommand.equals(new AddNoteCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"Rye-Catcher"},"content":"                new Note(VALID_NOTE_AMY))));","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Rye-Catcher"},"content":"        // different Note -\u003e returns false","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"Rye-Catcher"},"content":"        assertFalse(standardCommand.equals(new AddNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"Rye-Catcher"},"content":"                new Note(VALID_NOTE_BOB))));","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Rye-Catcher":107}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"simjunheng":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Amy\";","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"    public static final String VALID_NOTE_BOB \u003d \"Bob\";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"        model.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"simjunheng":2,"Rye-Catcher":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"simjunheng":6,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.NOTE_FIRST_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.NOTE_SECOND_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":" * {@code DeleteNoteCommand}.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"AAlghrairy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteNoteCommand(null, null));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"AAlghrairy"},"content":"    public void execute_validNoteIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"AAlghrairy"},"content":"        Person personToDeleteNoteFrom \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"AAlghrairy"},"content":"        List\u003cNote\u003e newNotes \u003d new ArrayList\u003c\u003e(personToDeleteNoteFrom.getNotes());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"AAlghrairy"},"content":"        newNotes.remove(NOTE_FIRST_INDEX.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"AAlghrairy"},"content":"        Person personWithModifiedNote \u003d new Person(personToDeleteNoteFrom.getName(), personToDeleteNoteFrom.getPhone(),","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"AAlghrairy"},"content":"                personToDeleteNoteFrom.getEmail(), personToDeleteNoteFrom.getAddress(),","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"AAlghrairy"},"content":"                personToDeleteNoteFrom.getTags(), newNotes);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_FIRST_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"AAlghrairy"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_SUCCESS, personWithModifiedNote);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"AAlghrairy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"AAlghrairy"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"AAlghrairy"},"content":"        deleteNoteCommand.execute(expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"AAlghrairy"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"AAlghrairy"},"content":"    public void execute_invalidNoteIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"AAlghrairy"},"content":"        Index outOfBoundNoteIndex \u003d Index.fromOneBased(model.getFilteredPersonList().get(","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"AAlghrairy"},"content":"                INDEX_SECOND_PERSON.getZeroBased()).getNotes().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_SECOND_PERSON, outOfBoundNoteIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"AAlghrairy"},"content":"    public void execute_invalidPersonIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"        Index outOfBoundNoteIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundNoteIndex, NOTE_FIRST_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"AAlghrairy"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"AAlghrairy"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteFirstCommand \u003d new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_FIRST_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteSecondCommand \u003d new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_SECOND_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"AAlghrairy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"AAlghrairy"},"content":"        assertTrue(deleteNoteFirstCommand.equals(deleteNoteFirstCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"AAlghrairy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand deleteNoteFirstCommandCopy \u003d new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_FIRST_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"AAlghrairy"},"content":"        assertTrue(deleteNoteFirstCommand.equals(deleteNoteFirstCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"AAlghrairy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"AAlghrairy"},"content":"        assertFalse(deleteNoteFirstCommand.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"AAlghrairy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"AAlghrairy"},"content":"        assertFalse(deleteNoteFirstCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"AAlghrairy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"AAlghrairy"},"content":"        assertFalse(deleteNoteFirstCommand.equals(deleteNoteSecondCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"AAlghrairy":97}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"               model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"simjunheng":10,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"third\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"fourth\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate, thirdPredicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate, fourthPredicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate, thirdPredicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"    public void execute_zeroKeywords_noPersonAndTagFound() {","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e nameList \u003d Arrays.asList();","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e tagList \u003d Arrays.asList();","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(nameList);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d prepareTagPredicate(tagList);","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, tagPredicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(tagPredicate));","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"    public void execute_multipleKeywords_multiplePersonsAndTagsFound() {","lastModifiedDate":"2022-03-02"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e nameList \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e tagList \u003d Arrays.asList(\"friends\", \"neighbours\");","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate namePredicate \u003d prepareNamePredicate(nameList);","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d prepareTagPredicate(tagList);","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        FindCommand command \u003d new FindCommand(namePredicate, tagPredicate);","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.or(tagPredicate));","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"     * Creates a {@code NameContainsKeywordsPredicate} using {@code nameList}.","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"    private PersonNameContainsKeywordsPredicate prepareNamePredicate(List\u003cString\u003e nameList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        return new PersonNameContainsKeywordsPredicate(nameList);","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-02"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"     * Creates a {@code TagContainsKeywordsPredicate} using {@code tagSet}.","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    private TagContainsKeywordsPredicate prepareTagPredicate(List\u003cString\u003e tagList) {","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"        return new TagContainsKeywordsPredicate(tagList);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"simjunheng":43,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"                model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"simjunheng":4,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"simjunheng":1,"-":140}},{"path":"src/test/java/seedu/address/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"class AddNoteCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"    public void parse_validArgs_returnsAddNoteCommand() {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"        AddNoteCommand expectedAddNoteCommand \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"                new AddNoteCommand(INDEX_FIRST_PERSON, new Note(VALID_NOTE_AMY));","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"        assertParseSuccess(parser, \"1 Amy\", expectedAddNoteCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"        assertParseSuccess(parser, \" \\n 1 \\n \\t Amy  \\t\", expectedAddNoteCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"        assertParseFailure(parser, \"2           \",","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"Rye-Catcher"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"        assertParseFailure(parser, \"         Amy\",","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Rye-Catcher"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Rye-Catcher":43}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.NOTE_FIRST_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"AAlghrairy"},"content":"    public void parseCommand_deleteNote() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"AAlghrairy"},"content":"        DeleteNoteCommand command \u003d (DeleteNoteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"AAlghrairy"},"content":"                DeleteNoteCommand.COMMAND_WORD + \" \" + INDEX_SECOND_PERSON.getOneBased()","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"AAlghrairy"},"content":"                        + \" \" + NOTE_FIRST_INDEX.getOneBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"AAlghrairy"},"content":"        assertEquals(new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_FIRST_INDEX), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e nameList \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e tagList \u003d Arrays.asList(\"friends\", \"colleagues\");","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"n/foo n/bar n/baz t/friends t/colleagues\");","lastModifiedDate":"2022-03-02"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        assertEquals(new FindCommand(new PersonNameContainsKeywordsPredicate(nameList),","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(tagList)), command);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AAlghrairy":11,"simjunheng":7,"-":96}},{"path":"src/test/java/seedu/address/logic/parser/DeleteNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AAlghrairy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.NOTE_FIRST_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"AAlghrairy"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"AAlghrairy"},"content":" * Contains tests for","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"AAlghrairy"},"content":" * {@code DeleteNoteCommandParser}.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"AAlghrairy"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"AAlghrairy"},"content":"public class DeleteNoteCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"AAlghrairy"},"content":"    private DeleteNoteCommandParser parser \u003d new DeleteNoteCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"AAlghrairy"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"AAlghrairy"},"content":"        assertParseSuccess(parser, \"2 1\", new DeleteNoteCommand(INDEX_SECOND_PERSON, NOTE_FIRST_INDEX));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"AAlghrairy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"AAlghrairy"},"content":"        assertParseFailure(parser, \"2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"AAlghrairy"},"content":"                DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"AAlghrairy"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"AAlghrairy"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"AAlghrairy"},"content":"                DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"AAlghrairy"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"AAlghrairy":36}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"simjunheng":1,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e nameList \u003d Arrays.asList(\"Alex\", \"Bob\");","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e tagList \u003d Arrays.asList(\"friends\", \"neighbours\");","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"                new FindCommand(new PersonNameContainsKeywordsPredicate(nameList),","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"                        new TagContainsKeywordsPredicate(tagList));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        assertParseSuccess(parser, \" n/Alex n/Bob t/friends t/neighbours\", expectedFindCommand);","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        assertParseSuccess(parser, \" n/Alex     n/Bob   t/friends t/neighbours    \", expectedFindCommand);","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"simjunheng":9,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_NOTE_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"AAlghrairy"},"content":"import static seedu.address.testutil.TypicalIndexes.NOTE_FIRST_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_NAME_1 \u003d \"Alex Yeoh\";","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_NAME_2 \u003d \"Rachel Walker\";","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"AAlghrairy"},"content":"    public void parseNoteIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"AAlghrairy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNoteIndex(\"10 a\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"AAlghrairy"},"content":"    public void parseNoteIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"AAlghrairy"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_NOTE_INDEX, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"AAlghrairy"},"content":"            -\u003e ParserUtil.parseNoteIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"AAlghrairy"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"AAlghrairy"},"content":"    public void parseNoteIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"AAlghrairy"},"content":"        // No whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"AAlghrairy"},"content":"        assertEquals(NOTE_FIRST_INDEX, ParserUtil.parseNoteIndex(\"1\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"AAlghrairy"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"AAlghrairy"},"content":"        assertEquals(NOTE_FIRST_INDEX, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"AAlghrairy"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"AAlghrairy"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2022-03-02"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_1));","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME_1 + WHITESPACE;","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"AAlghrairy":22,"simjunheng":7,"-":190}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.PersonNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TaskBookBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        assertEquals(new TaskBook(), new TaskBook(modelManager.getTaskBook()));","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskBookFilePath(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBookFilePath_validPath_setsTaskBookFilePath() {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        Path path \u003d Paths.get(\"task/book/file/path\");","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        modelManager.setTaskBookFilePath(path);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        assertEquals(path, modelManager.getTaskBookFilePath());","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.hasTask(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"        modelManager.addTask(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"        assertTrue(modelManager.hasTask(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"simjunheng"},"content":"        TaskBook taskBook \u003d new TaskBookBuilder().withTask(FIRST_TASK).withTask(SECOND_TASK).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"simjunheng"},"content":"        TaskBook differentTaskBook \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"simjunheng"},"content":"        modelManager \u003d new ModelManager(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"simjunheng"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, taskBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"simjunheng"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"simjunheng"},"content":"        String[] pKeywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"simjunheng"},"content":"        modelManager.updateFilteredPersonList(new PersonNameContainsKeywordsPredicate(Arrays.asList(pKeywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, taskBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"simjunheng"},"content":"        // different taskBook -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"simjunheng"},"content":"        // different filteredTaskList -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"simjunheng"},"content":"        String[] tKeywords \u003d FIRST_TASK.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"simjunheng"},"content":"        modelManager.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(tKeywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, taskBook, userPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"simjunheng"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"simjunheng"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":182,"author":{"gitId":"simjunheng"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, taskBook, differentUserPrefs)));","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"simjunheng":61,"-":123}},{"path":"src/test/java/seedu/address/model/TaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"public class TaskBookTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    private final TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        assertEquals(Collections.emptyList(), taskBook.getTaskList());","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.resetData(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"    public void resetData_withValidReadOnlyTaskBook_replacesData() {","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        TaskBook newData \u003d getTypicalTaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        taskBook.resetData(newData);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        assertEquals(newData, taskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder(FIRST_TASK).withDate(\"10-03-2022\").withTags(\"team1\")","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(FIRST_TASK, editedFirstTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        TaskBookTest.TaskBookStub newData \u003d new TaskBookTest.TaskBookStub(newTasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskBook.resetData(newData));","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.hasTask(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"        assertFalse(taskBook.hasTask(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        taskBook.addTask(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskBook.hasTask(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskBook_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"        taskBook.addTask(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder(FIRST_TASK).withDate(\"10-03-2022\").withTags(\"team1\")","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskBook.hasTask(editedFirstTask));","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskBook.getTaskList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"     * A stub ReadOnlyTaskBook whose tasks list can violate interface constraints.","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    private static class TaskBookStub implements ReadOnlyTaskBook {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        TaskBookStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"        @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"            return tasks;","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":99}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskBookFilePath(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"simjunheng":5,"-":21}},{"path":"src/test/java/seedu/address/model/name/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.name;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":" * Test class for {@code PersonContainsKeywordsPredicate} and {@code TaskContainsKeywordPredicate}","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"        // Persons Test","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate firstPersonPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate secondPersonPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstPersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate firstPersonPredicateCopy \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstPersonPredicate.equals(firstPersonPredicateCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPersonPredicate.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPersonPredicate.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPersonPredicate.equals(secondPersonPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        // Tasks Test","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        TaskNameContainsKeywordsPredicate firstTaskPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        TaskNameContainsKeywordsPredicate secondTaskPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstTaskPredicate.equals(firstTaskPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        TaskNameContainsKeywordsPredicate firstTaskPredicateCopy \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstTaskPredicate.equals(firstTaskPredicateCopy));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstTaskPredicate.equals(1));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstTaskPredicate.equals(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstTaskPredicate.equals(secondTaskPredicate));","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        // Persons Test","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        // One keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate personPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"        assertTrue(personPredicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"        personPredicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        assertTrue(personPredicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        personPredicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"        assertTrue(personPredicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        personPredicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        assertTrue(personPredicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        // Tasks Test","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"        TaskNameContainsKeywordsPredicate taskPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"Meeting\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"Meeting Dinner\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"Meeting\", \"Dinner\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"Meeting Dinner\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"Dinner\", \"Lunch\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"Meeting Lunch\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"MeEtINg\", \"diNner\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"Meeting Dinner\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"        //Persons Test","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"        PersonNameContainsKeywordsPredicate personPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"        assertFalse(personPredicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"        personPredicate \u003d new PersonNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"        assertFalse(personPredicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"        personPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"                new PersonNameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"        assertFalse(personPredicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"        //Tasks Test","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"        TaskNameContainsKeywordsPredicate taskPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"Meeting\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"simjunheng"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"Lunch\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"simjunheng"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"Meeting Dinner\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"        // Keywords match date, start time and end time, but does not match name","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"simjunheng"},"content":"        taskPredicate \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"simjunheng"},"content":"                new TaskNameContainsKeywordsPredicate(Arrays.asList(\"10-03-2020\", \"08:00\", \"09:00\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"simjunheng"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"Meeting\").withDate(\"10-03-2020\")","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"simjunheng"},"content":"                .withStartTime(\"08:00\").withEndTime(\"09:00\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":144}},{"path":"src/test/java/seedu/address/model/name/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.name;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"simjunheng":1,"-":39}},{"path":"src/test/java/seedu/address/model/note/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rye-Catcher"},"content":"package seedu.address.model.note;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"Rye-Catcher"},"content":"public class NoteTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Rye-Catcher"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Rye-Catcher"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Rye-Catcher"},"content":"    public void constructor_invalidNote_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Rye-Catcher"},"content":"        // a String of length 51","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"Rye-Catcher"},"content":"        String invalidNote \u003d \"0123456789\"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Rye-Catcher"},"content":"                + \"0123456789\"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"Rye-Catcher"},"content":"                + \"0123456789\"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"Rye-Catcher"},"content":"                + \"0123456789\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Rye-Catcher"},"content":"                + \"0123456789\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"Rye-Catcher"},"content":"                + \"0\";","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"Rye-Catcher"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(invalidNote));","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Rye-Catcher"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"Rye-Catcher"},"content":"    public void isValidNote() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"        // null tag name","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.isValidNote(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"Rye-Catcher":32}},{"path":"src/test/java/seedu/address/model/tag/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-02"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        // One keyword","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"Family\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Family\", \"Colleague\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Family\", \"Colleague\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Family\", \"Colleague\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Colleague\", \"Team\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Family\", \"Team\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-02"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"fAmiLy\", \"coLLEague\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Family\", \"Colleague\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-02"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"                new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Family\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-02"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Team\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Family\", \"Colleague\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        // Keywords match name, phone, and address, but does not match tag","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(","lastModifiedDate":"2022-03-02"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"                Arrays.asList(\"Alice\" , \"12345\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-03-02"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"Family\", \"Colleague\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"simjunheng":78}},{"path":"src/test/java/seedu/address/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"public class DateTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        // null date","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        //invalid date","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"29-02-2021\")); // non-leap year","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"28-02-22\")); // 2 digits year format","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"28-2-2022\")); // 1 digit month format","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"8-02-2022\")); // 1 digit day format","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"32-01-2022\")); // invalid day range","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        assertFalse(Date.isValidDate(\"04-14-2022\")); // invalid month range","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        //valid date","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        assertTrue(Date.isValidDate(\"29-02-2020\")); // leap year","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        assertTrue(Date.isValidDate(\"20-03-2021\")); //valid day, month, and year","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":40}},{"path":"src/test/java/seedu/address/model/task/StartEndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"public class StartEndTimeTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"        //Start Time","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StartTime(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"        //End Time","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EndTime(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"        //Start Time","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StartTime(invalidTime));","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        //End Time","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EndTime(invalidTime));","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public void isValidStartEndTime() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        // null time","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e StartTime.isValidStartTime(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e EndTime.isValidEndTime(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        // invalid time","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        // start time","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\"2:00\")); // 1 digit hour format","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\"02:3\")); // 1 digit minute format","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\"25:00\")); // invalid hour range","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        assertFalse(StartTime.isValidStartTime(\"00:60\")); // invalid minute range","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        // end time","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\"\")); // empty string","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\" \")); // spaces only","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\"2:00\")); // 1 digit hour format","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\"02:3\")); // 1 digit minute format","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\"25:00\")); // invalid hour range","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"        assertFalse(EndTime.isValidEndTime(\"00:60\")); // invalid minute range","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        //valid time","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        //start time","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        assertTrue(StartTime.isValidStartTime(\"02:00\")); // valid hour and minute format","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        //end time","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        assertTrue(EndTime.isValidEndTime(\"02:00\")); // valid hour and minute format","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":55}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND_TASK;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"        assertTrue(FIRST_TASK.isSameTask(FIRST_TASK));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"        //null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.isSameTask(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder().withName(\"Meeting\").withDate(\"09-01-2011\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"                .withStartTime(\"00:00\").withEndTime(\"01:00\").withTags(\"hello\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        assertTrue(FIRST_TASK.isSameTask(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder().withName(\"Swimming\").withDate(\"09-10-2022\")","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"                .withStartTime(\"09:00\").withEndTime(\"10:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"                .withTags(\"friends\", \"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.isSameTask(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        // name with trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder().withName(\"Meeting  \").withDate(\"09-10-2022\")","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"                .withStartTime(\"09:00\").withEndTime(\"10:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"                .withTags(\"friends\", \"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.isSameTask(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    public void equals() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        Task firstTaskCopy \u003d new TaskBuilder().withName(\"Meeting\").withDate(\"09-10-2022\")","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"                .withStartTime(\"09:00\").withEndTime(\"10:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"                .withTags(\"friends\", \"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        assertTrue(FIRST_TASK.equals(firstTaskCopy));","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"        assertTrue(FIRST_TASK.equals(FIRST_TASK));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(5));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(SECOND_TASK));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder(firstTaskCopy).withName(\"Swimming\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder(firstTaskCopy).withDate(\"01-10-2022\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder(firstTaskCopy).withStartTime(\"22:00\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder(firstTaskCopy).withEndTime(\"23:00\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        editedFirstTask \u003d new TaskBuilder(firstTaskCopy).withTags(\"neighbours\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        assertFalse(FIRST_TASK.equals(editedFirstTask));","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":86}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        assertFalse(uniqueTaskList.contains(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        assertTrue(uniqueTaskList.contains(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder(FIRST_TASK).withDate(\"10-03-2022\").withTags(\"team1\")","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        assertTrue(uniqueTaskList.contains(editedFirstTask));","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(FIRST_TASK, null));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(FIRST_TASK, FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.setTask(FIRST_TASK, FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"        expectedUniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        Task editedFirstTask \u003d new TaskBuilder(FIRST_TASK).withDate(\"10-03-2022\").withTags(\"team1\")","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"                .build();","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.setTask(FIRST_TASK, editedFirstTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        expectedUniqueTaskList.add(editedFirstTask);","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.setTask(FIRST_TASK, SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"        expectedUniqueTaskList.add(SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(FIRST_TASK, SECOND_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"simjunheng"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"simjunheng"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(FIRST_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"simjunheng"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.remove(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"simjunheng"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"simjunheng"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"simjunheng"},"content":"        expectedUniqueTaskList.add(SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":140,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"simjunheng"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"simjunheng"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.add(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"simjunheng"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"simjunheng"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"simjunheng"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"simjunheng"},"content":"        expectedUniqueTaskList.add(SECOND_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"simjunheng"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"simjunheng"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"simjunheng"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(FIRST_TASK, FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"simjunheng"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"simjunheng"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"simjunheng"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Rye-Catcher"},"content":"    private static final String INVALID_NOTE \u003d \"\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"Rye-Catcher"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"Rye-Catcher"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Rye-Catcher"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"Rye-Catcher"},"content":"                VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Rye-Catcher"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"Rye-Catcher"},"content":"                        VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Rye-Catcher"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"Rye-Catcher"},"content":"                VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Rye-Catcher"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"Rye-Catcher"},"content":"                        VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Rye-Catcher"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"Rye-Catcher"},"content":"                VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Rye-Catcher"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"Rye-Catcher"},"content":"                        VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Rye-Catcher"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"Rye-Catcher"},"content":"                VALID_TAGS, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Rye-Catcher"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_NOTES);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simjunheng":1,"Rye-Catcher":20,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.StartTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    private static final String INVALID_NAME \u003d \"m33@TING\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    private static final String INVALID_DATE \u003d \"29-02-2022\";","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    private static final String INVALID_START_TIME \u003d \"9:90\";","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    private static final String INVALID_END_TIME \u003d \"10;0\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_NAME \u003d FIRST_TASK.getName().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_DATE \u003d FIRST_TASK.getDate().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_START_TIME \u003d FIRST_TASK.getStartTime().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    private static final String VALID_END_TIME \u003d FIRST_TASK.getEndTime().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d FIRST_TASK.getTags().stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"        assertEquals(FIRST_TASK, task.toModelType());","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_DATE, VALID_START_TIME, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, VALID_START_TIME, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DATE, INVALID_START_TIME, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d StartTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DATE, null, VALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StartTime.class.getSimpleName());","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"    /*","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"    // To be fixed","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DATE, VALID_START_TIME, INVALID_END_TIME, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d EndTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DATE, VALID_START_TIME, null, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EndTime.class.getSimpleName());","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DATE, VALID_START_TIME, VALID_END_TIME, invalidTags);","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":111}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"public class JsonSerializableTaskBookTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskBookTest\");","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTasksTaskBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTasksTaskBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        TaskBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        TaskBook typicalTasksTaskBook \u003d TypicalTasks.getTypicalTaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"        assertEquals(addressBookFromFile, typicalTasksTaskBook);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskBook.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":45}},{"path":"src/test/java/seedu/address/storage/JsonTaskBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIFTH_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.FOURTH_TASK;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"public class JsonTaskBookStorageTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskBookStorageTest\");","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    @TempDir","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    public void readTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskBook(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"    private java.util.Optional\u003cReadOnlyTaskBook\u003e readTaskBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        return new JsonTaskBookStorage(Paths.get(filePath)).readTaskBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"                : null;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        assertFalse(readTaskBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"notJsonFormatTaskBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    public void readTaskBook_invalidTasksTaskBook_throwDataConversionException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"invalidTasksTaskBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    public void readTaskBook_invalidAndValidTasksTaskBook_throwDataConversionException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"invalidAndValidTasksTaskBook.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    public void readAndSaveTaskBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskBook.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"        TaskBook original \u003d getTypicalTaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"        JsonTaskBookStorage jsonTaskBookStorage \u003d new JsonTaskBookStorage(filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"        ReadOnlyTaskBook readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"        original.addTask(FOURTH_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        original.removeTask(FIRST_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"        original.addTask(FIFTH_TASK);","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"        jsonTaskBookStorage.saveTaskBook(original); // file path not specified","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook().get(); // file path not specified","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook_nullTaskBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"     * Saves {@code taskBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"simjunheng"},"content":"    private void saveTaskBook(ReadOnlyTaskBook taskBook, String filePath) {","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"simjunheng"},"content":"        try {","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"simjunheng"},"content":"            new JsonTaskBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"simjunheng"},"content":"                    .saveTaskBook(taskBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"simjunheng"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"simjunheng"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":104,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"simjunheng"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":107,"author":{"gitId":"simjunheng"},"content":"    public void saveTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"simjunheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(new TaskBook(), null));","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":110}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"        TaskBookStorage taskBookStorage \u003d null; //to be implemented","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simjunheng":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"simjunheng":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"Rye-Catcher"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Rye-Catcher"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"Rye-Catcher"},"content":"    private List\u003cNote\u003e notes;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"Rye-Catcher"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"Rye-Catcher"},"content":"        notes \u003d new ArrayList\u003c\u003e(personToCopy.getNotes());","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"Rye-Catcher"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"Rye-Catcher"},"content":"     * Parses the {@code notes} into a {@code List\u003cNote\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"Rye-Catcher"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"Rye-Catcher"},"content":"    public PersonBuilder withNotes(String... notes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"Rye-Catcher"},"content":"        this.notes \u003d SampleDataUtil.getNoteList(notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"Rye-Catcher"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"Rye-Catcher"},"content":"    public Person build() {","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"Rye-Catcher"},"content":"        return new Person(name, phone, email, address, tags, notes);","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"Rye-Catcher"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Rye-Catcher":15,"simjunheng":1,"-":93}},{"path":"src/test/java/seedu/address/testutil/TaskBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":" * A utility class to help with building Taskbook objects.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":" *     {@code TaskBook ab \u003d new TaskBookBuilder().withTask(\"Meeting\", \"Dinner\").build();}","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"public class TaskBookBuilder {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"    private TaskBook taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"    public TaskBookBuilder() {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"        taskBook \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    public TaskBookBuilder(TaskBook taskBook) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"        this.taskBook \u003d taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"     * Adds a new {@code Task} to the {@code TaskBook} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    public TaskBookBuilder withTask(Task task) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"    public TaskBook build() {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        return taskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"simjunheng":33}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.EndTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.StartTime;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"    public static final String DEFAULT_NAME \u003d \"Meeting\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"    public static final String DEFAULT_DATE \u003d \"09-10-2022\";","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    public static final String DEFAULT_START_TIME \u003d \"08:00\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"    public static final String DEFAULT_END_TIME \u003d \"12:00\";","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    private Name name;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"    private Date date;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"    private StartTime startTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"    private EndTime endTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"        this.name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"        this.date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"        this.startTime \u003d new StartTime(DEFAULT_START_TIME);","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"        this.endTime \u003d new EndTime(DEFAULT_END_TIME);","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"     * Creates a {@code TaskBuilder} with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        this.name \u003d taskToCopy.getName();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        this.date \u003d taskToCopy.getDate();","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"        this.startTime \u003d taskToCopy.getStartTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"        this.endTime \u003d taskToCopy.getEndTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"        this.tags \u003d taskToCopy.getTags();","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"simjunheng"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"simjunheng"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"simjunheng"},"content":"     * Sets the {@code Date} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder withDate(String date) {","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"simjunheng"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"simjunheng"},"content":"     * Sets the {@code StartTime} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder withStartTime(String startTime) {","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"simjunheng"},"content":"        this.startTime \u003d new StartTime(startTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"simjunheng"},"content":"     * Sets the {@code EndTime} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder withEndTime(String endTime) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"simjunheng"},"content":"        this.endTime \u003d new EndTime(endTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"simjunheng"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"simjunheng"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"simjunheng"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"simjunheng"},"content":"        return this;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"simjunheng"},"content":"     * Creates {@code Task} and returns it.","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"simjunheng"},"content":"    public Task build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"simjunheng"},"content":"        return new Task(name, date, startTime, endTime, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":95}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"AAlghrairy"},"content":"    public static final Index NOTE_FIRST_INDEX \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"AAlghrairy"},"content":"    public static final Index NOTE_SECOND_INDEX \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"AAlghrairy":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Rye-Catcher"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"Rye-Catcher"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Rye-Catcher"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"Rye-Catcher"},"content":"            .withNotes(\"birthday tomorrow\", \"likes Python\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"Rye-Catcher"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"Rye-Catcher"},"content":"            .withNotes(\"likes bing chilling\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Rye-Catcher":6,"-":73}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simjunheng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"simjunheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"simjunheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"simjunheng"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"simjunheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"simjunheng"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"simjunheng"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"simjunheng"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"simjunheng"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"simjunheng"},"content":"    public static final Task FIRST_TASK \u003d new TaskBuilder().withName(\"Meeting\").withDate(\"09-10-2022\")","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"simjunheng"},"content":"            .withStartTime(\"09:00\").withEndTime(\"10:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"simjunheng"},"content":"            .withTags(\"friends\", \"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"simjunheng"},"content":"    public static final Task SECOND_TASK \u003d new TaskBuilder().withName(\"Training\").withDate(\"29-02-2020\")","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"simjunheng"},"content":"            .withStartTime(\"14:00\").withEndTime(\"16:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"simjunheng"},"content":"            .withTags(\"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"simjunheng"},"content":"    public static final Task THIRD_TASK \u003d new TaskBuilder().withName(\"Shareholder Meeting\").withDate(\"29-02-2020\")","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"simjunheng"},"content":"            .withStartTime(\"14:00\").withEndTime(\"16:00\")","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"simjunheng"},"content":"            .withTags(\"colleagues\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"simjunheng"},"content":"    // Manually added","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"simjunheng"},"content":"    public static final Task FOURTH_TASK \u003d new TaskBuilder().withName(\"Soccer Training\").withDate(\"01-03-2020\")","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"simjunheng"},"content":"            .withStartTime(\"14:30\").withEndTime(\"16:00\")","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"simjunheng"},"content":"            .withTags(\"team2\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"simjunheng"},"content":"    public static final Task FIFTH_TASK \u003d new TaskBuilder().withName(\"Basketball Training\").withDate(\"02-03-2020\")","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"simjunheng"},"content":"            .withStartTime(\"14:30\").withEndTime(\"16:00\")","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"simjunheng"},"content":"            .withTags(\"team1\").build();","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"simjunheng"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"simjunheng"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"simjunheng"},"content":"     * Returns an {@code TaskBook} with all the typical persons.","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"simjunheng"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"simjunheng"},"content":"    public static TaskBook getTypicalTaskBook() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"simjunheng"},"content":"        TaskBook tb \u003d new TaskBook();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"simjunheng"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"simjunheng"},"content":"            tb.addTask(task);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"simjunheng"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"simjunheng"},"content":"        return tb;","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"simjunheng"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"simjunheng"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"simjunheng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST_TASK, SECOND_TASK, THIRD_TASK));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"simjunheng"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"simjunheng"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"simjunheng":48}}]
