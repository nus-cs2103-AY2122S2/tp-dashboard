[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-3/tp/actions)","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"# InternBuddy","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"InternBuddy is a desktop app for managing companies for internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"If you can type fast, InternBuddy can get your internship management deliverables done faster than traditional GUI apps.","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"InternBuddy provides you a way to plan and organize all your internship details on a single application, with intuitive ","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"UI to make your Job Seeking journey a smooth road. ","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"InternBuddy allows you to: ","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"* Store and manage Companies","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"* Manage Contacts ","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"  * For example:  Hiring Manager Contact Details","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"* Manage Events","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"  * For example: Interviews and Online Assessments","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"For more detailed information on how to use the application, click on [User Guide](docs/UserGuide.md)","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"---","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"### More Information about the Project","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"* InternBuddy is an **ongoing** collaborated Software Development Project maintained by ","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"  * Albert Sutiono","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"  * Edward Alvin","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"  * Muhammad Radhya","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"  * Steven Gabriel Kho Chua","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"* InternBuddy is a brown-field project which is forked from [Address Book 3](https://github.com/nus-cs2103-AY2122S2/tp), a software development project (around 6 KLoC) which provide a baseline for InternBuddy.","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"* You can look into our [Developer Guide](docs/DeveloperGuide.md) for more details about the codebase. ","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"### Main Language and Tools used:","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"\u003cp\u003e","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"\u003cimg alt\u003d\"Java\" src\u003d\"https://img.shields.io/badge/Java-ED8B00?style\u003dfor-the-badge\u0026logo\u003djava\u0026logoColor\u003dwhite\" /\u003e","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"\u003cimg alt\u003d\"JavaFX\" src\u003d\"https://img.shields.io/badge/JavaFX-ED8B00?style\u003dfor-the-badge\u0026logo\u003djava\u0026logoColor\u003dwhite\" /\u003e","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"albertsutz":36,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"### Albert Sutiono","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"\u003cimg src\u003d\"images/albertsutz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"[[github](https://github.com/albertsutz)]","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"[[linkedin](https://www.linkedin.com/in/albert-sutiono/)]","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"[[portfolio](./team/albertsutz.md)]","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"* Role: Developer","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"* Responsibilities: TBD \u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"I am an eager Y2 computer science undergraduate with the desire to learn and improve myself in this field. I aim to delve deeper into the world of software engineering and cybersecurity which address and solve real world problems with the focus on privacy and data security.","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ThePrevailingOne"},"content":"### Edward Alvin","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"\u003cimg src\u003d\"images/theprevailingone.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"[[github](http://github.com/theprevailingone)] [[portfolio](./team/theprevailingone.md)]","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ThePrevailingOne"},"content":"* Responsibilities: TBD","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"ThePrevailingOne"},"content":"Computer Science undergraduate passionate about software engineering and game development. Capable developer, having devised and developed multiple projects. Proficient in a range of modern technologies including Python, Javascript and Java. Interested in UI/UX Design and Data Science. Looking for new opportunities and challenges.","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"### Steven Chua","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"\u003cimg src\u003d\"images/graphcalibur.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"[[homepage](https://www.linkedin.com/in/stevengkchua)]","lastModifiedDate":"2022-02-26"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"[[github](http://github.com/graphcalibur)]","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"[[portfolio](team/graphcalibur.md)]","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"* Responsibilities: TBD","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"I\u0027m a Year 2 Computer Science undergraduate science with a passion for technology, games, and cybersecurity.","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"I\u0027m always looking for ways to improve my skills and widen my knowledge.","lastModifiedDate":"2022-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"### Muhammad Radhya Fawza","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"\u003cimg src\u003d\"images/mradhyaf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"[[github](https://github.com/mradhyaf)]","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"[[linkedin](https://www.linkedin.com/in/mradhyaf/)]","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"[[portofolio](./team/mradhyaf.md)]","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"* Responsibilities: TBD","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"mradhyaf":7,"ThePrevailingOne":4,"albertsutz":10,"Graphcalibur":8,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Graphcalibur"},"content":"* university student who is looking for internships / full time jobs","lastModifiedDate":"2022-03-09"},{"lineNumber":261,"author":{"gitId":"Graphcalibur"},"content":"* has a need to manage a significant number of companies, their events, and their contact people during job seeking","lastModifiedDate":"2022-03-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"Graphcalibur"},"content":"**Value proposition**: manage companies, their events, and their contact people faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                    | I want to …​                                                 | So that I can…​                                                                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"Graphcalibur"},"content":"|----------|------------------------------------------------------------|--------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                   | see usage instructions                                       | refer to instructions when I forget how to use the App                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | add companies                                                |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":278,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | add events related to a company                              | keep track of all of a company’s events                                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":279,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | add contact people relared to a company                      | easily look up their contact details                                                                               |","lastModifiedDate":"2022-03-05"},{"lineNumber":280,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | delete companies                                             | remove companies that I am no longer considering                                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":281,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | delete events                                                | remove events that have passed or been canceled                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":282,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | delete contact people                                        | remove people who are no longer related to companies I\u0027m looking at                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":283,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | view the list of companies                                   |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":284,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | view the list of events                                      |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":285,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | view the list of contact people                              |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":286,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | save my list                                                 | maintain my list across different sessions                                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":287,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user considering many companies                            | find companies by name                                       | locate details of companies without having to go through the whole list                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":288,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user keeping track of many events                          | find events by name                                          | locate details of events without having to go through the whole list                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":289,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user keeping track of many contact people                  | find contact people by name                                  | locate their details without having to go through the whole list                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":290,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user keeping track of events from many different companies | find events related to a certain company                     | locate details of eventts from a certain company without having to go through the whole list                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":291,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | edit the details of a company                                | keep the company details accurate and up to date                                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | edit the details of an event                                 | keep the event details accurate and up to date                                                                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":293,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | edit the details of a contact person                         | keep their details accurate and up to date                                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":294,"author":{"gitId":"Graphcalibur"},"content":"| `* * *`  | user                                                       | receive feedback on whether my command was successful or not | rectify the error in the command if any occurred                                                                   |","lastModifiedDate":"2022-03-04"},{"lineNumber":295,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | add tags to an entry                                         |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":296,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | edit tags of an entry                                        |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":297,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | delete tags from an entry                                    |                                                                                                                    |","lastModifiedDate":"2022-03-01"},{"lineNumber":298,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user keeping track of many entries                         | find entries by tags                                         | locate that entry without having to go through the whole list                                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":299,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | archive companies                                            | ignore companies I am no longer focusing on but can still view their details if necessary                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":300,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | archive events                                               | ignore events that have passed or been canceled but can still view their details if necessary                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":301,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | archive contact people                                       | ignore contact people no longer connected to a company I’m looking at but can still view their details if necessary |","lastModifiedDate":"2022-03-01"},{"lineNumber":302,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | view all events in a certain time frame                      | see all the events within that time frame without going through the whole list                                     |","lastModifiedDate":"2022-03-01"},{"lineNumber":303,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | view all upcoming events within a certain time frame         | see all important events that will be coming up soon                                                               |","lastModifiedDate":"2022-03-01"},{"lineNumber":304,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user keeping track of many events                          | sort events by date                                          | locate an event easily and view their chronological order                                                          |","lastModifiedDate":"2022-03-01"},{"lineNumber":305,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user keeping track of many contact people                  | sort persons by name                                         | locate a person easily                                                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":306,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user considering many companies                            | sort companies by name                                       | locate a company easily                                                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":307,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | new user                                                   | go through a guided tutorial of the app                      | quickly learn how to use the app                                                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":308,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | undo the previous command                                    | undo any mistakes I make                                                                                           |","lastModifiedDate":"2022-03-01"},{"lineNumber":309,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user                                                       | redo the previously undone command                           | redo a command I accidentally undid                                                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":310,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user keeping track of many events                          | delete all past events                                       | avoid having to delete them one by one                                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":311,"author":{"gitId":"Graphcalibur"},"content":"| `* *`    | user keeping track of many events                          | archive all past events                                      | avoid having to archive them one by one                                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":312,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | user                                                       | choose to save or not save the changes made                  | avoid having changes I don\u0027t want get saved to the file                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":313,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | forgetful user                                             | receive reminders for events happening soon                  | remember them                                                                                                      |","lastModifiedDate":"2022-03-01"},{"lineNumber":314,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | user with multiple computers                               | download the list of contacts                                | send the list to other computers                                                                                   |","lastModifiedDate":"2022-03-01"},{"lineNumber":315,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | user with multiple computers                               | import the list of contacts                                  | maintain my list between different computers                                                                       |","lastModifiedDate":"2022-03-01"},{"lineNumber":316,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | applicant                                                  | send emails directly                                         | send applications without having to open a web browser                                                             |","lastModifiedDate":"2022-03-01"},{"lineNumber":317,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | applicant                                                  | store my resume, cover letter \u0026 academic transcript          | easily retrieve them when sending an email                                                                         |","lastModifiedDate":"2022-03-01"},{"lineNumber":318,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | calendar user                                              | download my events in ics format                             | import them into my calendar apps                                                                                  |","lastModifiedDate":"2022-03-01"},{"lineNumber":319,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | LinkedIn user                                              | add contact information from a LinkedIn url                  | easily add LinkedIn contact information to an entry                                                                |","lastModifiedDate":"2022-03-01"},{"lineNumber":320,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | expert user                                                | remap the commands                                           | use commands I am more comfortable with                                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":321,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | expert user                                                | add key bindings/shortcuts                                   | use shortcuts I am comfortable with for efficient usage                                                            |","lastModifiedDate":"2022-03-01"},{"lineNumber":322,"author":{"gitId":"Graphcalibur"},"content":"| `*`      | expert user                                                | add simple scripts                                           | I can automate common tasks                                                                                        |","lastModifiedDate":"2022-03-01"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"ThePrevailingOne"},"content":"(For all use cases below, the **System** is the `InternBuddy` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-11"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"ThePrevailingOne"},"content":"**Use case: Add a new event for a company**","lastModifiedDate":"2022-03-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"ThePrevailingOne"},"content":"1.  User requests to add a new event with details given","lastModifiedDate":"2022-03-09"},{"lineNumber":335,"author":{"gitId":"ThePrevailingOne"},"content":"2.  InternBuddy creates and add a new event to the list of events","lastModifiedDate":"2022-03-09"},{"lineNumber":336,"author":{"gitId":"ThePrevailingOne"},"content":"3.  InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-09"},{"lineNumber":337,"author":{"gitId":"ThePrevailingOne"},"content":"4.  InternBuddy displays the updated list of events with the new event","lastModifiedDate":"2022-03-09"},{"lineNumber":338,"author":{"gitId":"ThePrevailingOne"},"content":"5.  User requests to add a new tag to the event with the company name as the tag","lastModifiedDate":"2022-03-09"},{"lineNumber":339,"author":{"gitId":"ThePrevailingOne"},"content":"6.  InternBuddy adds the tag to the event","lastModifiedDate":"2022-03-09"},{"lineNumber":340,"author":{"gitId":"ThePrevailingOne"},"content":"7.  InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-09"},{"lineNumber":341,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":342,"author":{"gitId":"ThePrevailingOne"},"content":"    Use case ends.","lastModifiedDate":"2022-03-09"},{"lineNumber":343,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":344,"author":{"gitId":"ThePrevailingOne"},"content":"**Use case: Add a new contact person details**","lastModifiedDate":"2022-03-11"},{"lineNumber":345,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":346,"author":{"gitId":"ThePrevailingOne"},"content":"**MSS**","lastModifiedDate":"2022-03-11"},{"lineNumber":347,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":348,"author":{"gitId":"ThePrevailingOne"},"content":"1.  User requests to add a new contact person with details given","lastModifiedDate":"2022-03-11"},{"lineNumber":349,"author":{"gitId":"ThePrevailingOne"},"content":"2.  InternBuddy creates a new contact person","lastModifiedDate":"2022-03-11"},{"lineNumber":350,"author":{"gitId":"ThePrevailingOne"},"content":"3.  InternBuddy add the new contact person to the list of contact persons","lastModifiedDate":"2022-03-11"},{"lineNumber":351,"author":{"gitId":"ThePrevailingOne"},"content":"4.  InternBuddy displays the updated list of contact persons with the new contact person","lastModifiedDate":"2022-03-11"},{"lineNumber":352,"author":{"gitId":"ThePrevailingOne"},"content":"5.  InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-11"},{"lineNumber":353,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":354,"author":{"gitId":"ThePrevailingOne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-11"},{"lineNumber":355,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":356,"author":{"gitId":"ThePrevailingOne"},"content":"**Extensions**","lastModifiedDate":"2022-03-11"},{"lineNumber":357,"author":{"gitId":"ThePrevailingOne"},"content":"* 5a. User wants to add a company to the contact person","lastModifiedDate":"2022-03-11"},{"lineNumber":358,"author":{"gitId":"ThePrevailingOne"},"content":"  * 5a1. User requests to add a new tag to the contact person with the company name as the tag","lastModifiedDate":"2022-03-11"},{"lineNumber":359,"author":{"gitId":"ThePrevailingOne"},"content":"  * 5a2. InternBuddy adds the tag to the contact person","lastModifiedDate":"2022-03-11"},{"lineNumber":360,"author":{"gitId":"ThePrevailingOne"},"content":"  * 5a3. InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-11"},{"lineNumber":361,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":362,"author":{"gitId":"ThePrevailingOne"},"content":"      Use case ends.","lastModifiedDate":"2022-03-11"},{"lineNumber":363,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":364,"author":{"gitId":"ThePrevailingOne"},"content":"* 5a2. contact person not found","lastModifiedDate":"2022-03-11"},{"lineNumber":365,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":366,"author":{"gitId":"ThePrevailingOne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-11"},{"lineNumber":367,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":368,"author":{"gitId":"ThePrevailingOne"},"content":"**Use case: Add a new company**","lastModifiedDate":"2022-03-11"},{"lineNumber":369,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":370,"author":{"gitId":"ThePrevailingOne"},"content":"**MSS**","lastModifiedDate":"2022-03-11"},{"lineNumber":371,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":372,"author":{"gitId":"ThePrevailingOne"},"content":"1.  User requests to add a new company with details given","lastModifiedDate":"2022-03-11"},{"lineNumber":373,"author":{"gitId":"ThePrevailingOne"},"content":"2.  InternBuddy creates a new company","lastModifiedDate":"2022-03-11"},{"lineNumber":374,"author":{"gitId":"ThePrevailingOne"},"content":"3.  InternBuddy assign a tag to the company with the company name as the tag","lastModifiedDate":"2022-03-11"},{"lineNumber":375,"author":{"gitId":"ThePrevailingOne"},"content":"4.  InternBuddy add the new company to the list of companies","lastModifiedDate":"2022-03-11"},{"lineNumber":376,"author":{"gitId":"ThePrevailingOne"},"content":"5.  InternBuddy displays the updated list of companies with the new company","lastModifiedDate":"2022-03-11"},{"lineNumber":377,"author":{"gitId":"ThePrevailingOne"},"content":"6.  InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-11"},{"lineNumber":378,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":379,"author":{"gitId":"ThePrevailingOne"},"content":"   Use case ends.","lastModifiedDate":"2022-03-11"},{"lineNumber":380,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":381,"author":{"gitId":"ThePrevailingOne"},"content":"**Use case: Hide events that have passed or has been cancelled**","lastModifiedDate":"2022-03-09"},{"lineNumber":382,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":383,"author":{"gitId":"ThePrevailingOne"},"content":"**MSS**","lastModifiedDate":"2022-03-09"},{"lineNumber":384,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":385,"author":{"gitId":"ThePrevailingOne"},"content":"1. User requests to view list of events","lastModifiedDate":"2022-03-09"},{"lineNumber":386,"author":{"gitId":"ThePrevailingOne"},"content":"2. InternBuddy shows list of events","lastModifiedDate":"2022-03-09"},{"lineNumber":387,"author":{"gitId":"ThePrevailingOne"},"content":"3. User requests to archive the event","lastModifiedDate":"2022-03-09"},{"lineNumber":388,"author":{"gitId":"ThePrevailingOne"},"content":"4. InternBuddy archives and hides the event","lastModifiedDate":"2022-03-09"},{"lineNumber":389,"author":{"gitId":"ThePrevailingOne"},"content":"5. InternBuddy shows successful feedback to the user","lastModifiedDate":"2022-03-09"},{"lineNumber":390,"author":{"gitId":"ThePrevailingOne"},"content":"6. InternBuddy update list of events","lastModifiedDate":"2022-03-09"},{"lineNumber":391,"author":{"gitId":"ThePrevailingOne"},"content":"7. InternBuddy display the updated list of events","lastModifiedDate":"2022-03-09"},{"lineNumber":392,"author":{"gitId":"ThePrevailingOne"},"content":"8. Repeat steps 3-8 for all events to be hidden","lastModifiedDate":"2022-03-09"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"ThePrevailingOne"},"content":"    * 3a1. InternBuddy shows an error feedback to the user","lastModifiedDate":"2022-03-09"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"Graphcalibur"},"content":"2. Should be able to hold up to 1000 entries without noticeable lag in performance for typical usage.","lastModifiedDate":"2022-03-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"Graphcalibur"},"content":"4. Entries and their details should be displayed in an intuitive, easy-to-understand manner.","lastModifiedDate":"2022-03-04"},{"lineNumber":416,"author":{"gitId":"Graphcalibur"},"content":"5. The majority of the interactions the user makes with the app should be through the keyboard.","lastModifiedDate":"2022-03-04"},{"lineNumber":417,"author":{"gitId":"Graphcalibur"},"content":"6. Should not use more than 300 MB of RAM memory while in operation.","lastModifiedDate":"2022-03-04"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"ThePrevailingOne"},"content":"* **Entry**: A single entry stored in a list of entries (Contact person/Event/Company)","lastModifiedDate":"2022-03-11"},{"lineNumber":425,"author":{"gitId":"ThePrevailingOne"},"content":"* **Contact person**: An entry representing a contact person that consists of a name, phone number, email address, and a list of tags","lastModifiedDate":"2022-03-11"},{"lineNumber":426,"author":{"gitId":"ThePrevailingOne"},"content":"* **Event**: An entry representing an event that consists of a name, date, time, location, and a list of tags","lastModifiedDate":"2022-03-11"},{"lineNumber":427,"author":{"gitId":"ThePrevailingOne"},"content":"* **Company**: An entry representing a company that consists of a name and a list of tags","lastModifiedDate":"2022-03-11"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ThePrevailingOne":66,"Graphcalibur":54,"-":360}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ThePrevailingOne"},"content":"InternBuddy is a **desktop app to help computer science students manage the events, companies, and contact people encountered during the internship search. The app is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** If you can type fast, InternBuddy can help you organize your internship search faster than traditional GUI apps.","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ThePrevailingOne"},"content":"The purpose of this User Guide is to assist you in learning and using InternBuddy. Whether you\u0027re a new user looking for a place to start or a veteran needing a quick reference, this guide is here to answer your questions.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ThePrevailingOne"},"content":"If you feel InternBuddy is the solution to your problem and you\u0027re interested in using it, try it out now! If this is your first time using InternBuddy, you can get started right away by following the steps below.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ThePrevailingOne"},"content":"   * If you don\u0027t have it installed, you can follow [Oracle\u0027s JDK installation guide](https://docs.oracle.com/en/java/javase/11/install/installation-guide.pdf)","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"   for your operating system.","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"   * Please make sure that you select Java `11` as your default Java version.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"   * If you are not sure which version of Java that you currently have, you can follow [Java Manual](https://www.java.com/en/download/help/version_manual.html)","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"   to check.","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"2. Download the latest `InternBuddy.jar` from [here](https://github.com/AY2122S2-CS2103T-W14-3/tp/releases/tag/v1.2.0).","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for InternBuddy.","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"4. Double-click the file to start the app. A window similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"   ![Opening UI](images/UserGuide/Ui-1.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"   * **`listc`** : Lists all companies.","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"   * **`addc`**`n/DeeBee p/98765432 e/dbs@example.com a/14 Jurong Street #01-01` : Adds a company named `DeeBee` to the list of companies.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"   * **`clear`** : Deletes all entries.","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ThePrevailingOne"},"content":"6. If this is your first time reading our user guide, you can refer to our [Guide Walkthrough](#guide-walkthrough) section to learn how to navigate the guide, and eventually the app.","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ThePrevailingOne"},"content":"----","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ThePrevailingOne"},"content":"## Guide Walkthrough","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ThePrevailingOne"},"content":"If you\u0027re new, welcome to **InternBuddy**! We\u0027re trying to make this guide as easy to read as possible. We hope this section will help you read the guide and get started with InternBuddy.","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"ThePrevailingOne"},"content":"### Overview of InternBuddy","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ThePrevailingOne"},"content":"InternBuddy is designed specifically for students who are searching for internships. With InternBuddy, there is no need for you to juggle between multiple apps just to manage your multiple internship applications. With efficiency as its focus, InternBuddy values your **Time** and **Experience**. Let InterBuddy help you to manage your application details so you can focus acing your assessments and interviews!","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"ThePrevailingOne"},"content":"### Structure of InternBuddy","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"ThePrevailingOne"},"content":"With internships and job seeking as our main focus, we are going over 3 main entries of InternBuddy:","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"ThePrevailingOne"},"content":"- **Company**: A company will represent a  company that you are applying for, or will be applying for.","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"ThePrevailingOne"},"content":"- **Person**: A person will represent a contact person. In can be used for general purpose of storing a contact person with a company related to it. The contact person may have a specific role such as the HR of a company.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ThePrevailingOne"},"content":"- **Event**: An event will represent an event of a company. An event can be an online assessment, an interview, a job fair, etc.","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"ThePrevailingOne"},"content":"And with that, InternBuddy stores 3 lists for 3 different types of entries:","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ThePrevailingOne"},"content":"- **[Companies](#company-list)**","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ThePrevailingOne"},"content":"- **[Persons](#person-list)**","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"ThePrevailingOne"},"content":"- **[Events](#event-list)**","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"ThePrevailingOne"},"content":"The app will only display one of these lists at any time, as shown in the screenshot below. Each of these 3 different types have different attributes attached to them. Let\u0027s dive in to understand what each type can store.","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"ThePrevailingOne"},"content":"#### Company List","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"![Company List](images/UserGuide/Ui-2.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"ThePrevailingOne"},"content":"A **Company** entry has:","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"ThePrevailingOne"},"content":"* A *name*","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"ThePrevailingOne"},"content":"* An *email address*","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"ThePrevailingOne"},"content":"* A *phone number*","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"ThePrevailingOne"},"content":"* A *real-life address*","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ThePrevailingOne"},"content":"* Zero or more *tags* associated with them","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"ThePrevailingOne"},"content":"#### Person List","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"ThePrevailingOne"},"content":"![Person List](images/UserGuide/Ui-3.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"ThePrevailingOne"},"content":"A **Person** entry has:","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"ThePrevailingOne"},"content":"* A *name*","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"ThePrevailingOne"},"content":"* The *name* of the Company the Person is associated with","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"ThePrevailingOne"},"content":"* An *email address*","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ThePrevailingOne"},"content":"* A *phone number*","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ThePrevailingOne"},"content":"* Zero or more *tags* associated with them","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"ThePrevailingOne"},"content":"#### Event List","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"ThePrevailingOne"},"content":"![Event List](images/UserGuide/Ui-4.png)","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"ThePrevailingOne"},"content":"Finally, an **Event** entry has:","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"ThePrevailingOne"},"content":"* A *name*","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"ThePrevailingOne"},"content":"* The *name* of the Company the Event is associated with","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"ThePrevailingOne"},"content":"* A *date*","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"ThePrevailingOne"},"content":"* A *time*","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"ThePrevailingOne"},"content":"* A *location*","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"ThePrevailingOne"},"content":"* Zero or more *tags* associated with them","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"ThePrevailingOne"},"content":"### Interacting with the app","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"ThePrevailingOne"},"content":"Since **InternBuddy** is designed to be used via a Command Line Interface (CLI), you will be interacting with the app mostly through typing the commands. To interact with this app, you **type commands into the command box** and **hit the Enter key** when you are done.\u003cbr/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"ThePrevailingOne"},"content":"**InternBuddy**\u0027s commands follows a simple classification system for all 3 lists. There are 5 types of commands:","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"ThePrevailingOne"},"content":"- **Adding entries**","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`addc`](#adding-a-company-addc): Adds a company to the list of companies.","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`addp`](#adding-a-person-addp): Adds a person to the list of persons.","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`adde`](#adding-an-event-adde): Adds an event to the list of events.","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"ThePrevailingOne"},"content":"- **Listing/Viewing entries**","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`listc`](#listing-all-companies--listc): Lists all companies.","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`listp`](#listing-all-persons--listp): Lists all persons.","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`liste`](#listing-all-events--liste): Lists all events.","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"ThePrevailingOne"},"content":"- **Editing entries**","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`editc`](#editing-a-company--editc): Edits a company.","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`editp`](#editing-a-person--editp): Edits a person.","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`edite`](#editing-an-event--edite): Edits an event.","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"ThePrevailingOne"},"content":"- **Deleting entries**","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`delete`](#deleting-an-entry--delete): Deletes an entry. ","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"ThePrevailingOne"},"content":"- **Finding/Locating entries**","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`findc`](#locating-companies-findc): Finds a company.","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`findp`](#locating-people-by-name-findp): Finds a person.","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"ThePrevailingOne"},"content":"  - [`finde`](#locating-events-finde): Finds an event. ","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"ThePrevailingOne"},"content":"There are other commands such as [`help`](#viewing-help--help), [`clear`](#clearing-all-entries--clear), and [`exit`](#exiting-the-program--exit). You can try clicking on the commands above to see how to use them in further details. However, we would suggest you to read the [User Guide Icons](#user-guide-icons) and [Command Formats](#command-formats) section first to have a smoother experience reading our [Features](#features) section :smile:.","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"ThePrevailingOne"},"content":"#### Dialog Box","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"ThePrevailingOne"},"content":"For those of you not familiar with what a dialog box is, a dialog box is a box that shows when you execute a command. It is a box that contains a message. The message is basically a feedback from InternBuddy to you. InternBuddy will show you a dialog box when you execute a command.","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"ThePrevailingOne"},"content":"If the command you tried to execute is **invalid** for whatever reason, an **error message** will be shown and the command you typed will remain. An example of this is shown below.","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"![invalid commmand message](images/InvalidCommandMessageExample.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"ThePrevailingOne"},"content":"Otherwise, if the command is **valid**, a **success message** will be shown and the command will be executed. The command box will also be cleared.","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"![successful command](images/SuccessfulCommandExample.png)","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"ThePrevailingOne"},"content":"### User Guide Icons","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"ThePrevailingOne"},"content":"| Icon               | Meaning                                                       |","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"ThePrevailingOne"},"content":"|--------------------|---------------------------------------------------------------|","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"ThePrevailingOne"},"content":"|:information_source:| This icon indicates important information to be taken note of |","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"ThePrevailingOne"},"content":"|:bulb:               | This icon indicates useful tips for the users                |","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"ThePrevailingOne"},"content":"### Command Formats","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"ThePrevailingOne"},"content":"With a simple command standards, we tried to make the commands as intuitive as possible. To make sure that you can read the commands without any confusion, here are the formats we use in the guide.","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"ThePrevailingOne"},"content":"### Finishing Up","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"ThePrevailingOne"},"content":"And that\u0027s all there is to it! Now that you have a basic understanding of the commands, You can now get started on learning all the important [commands](#features) you can use to organize your InternBuddy lists. Focus on that interview and get that internship! If you have any trouble, do refer back to the user guide and the [FAQ](#faq) section. Good luck! :confetti_ball: :confetti_ball: :confetti_ball:","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"ThePrevailingOne"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"ThePrevailingOne"},"content":"## Features","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"ThePrevailingOne"},"content":"Our InternBuddy has a number of features that you can use to organize your InternBuddy lists. These features follows a certain command format. If you haven\u0027t read it, please refer to the [User Guide Icons](#user-guide-icons) and [Command Formats](#command-formats) section first. If you are still confused, please refer to the [FAQ](#faq) section. Otherwise, you can start using the features listed below. :smile:","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"ThePrevailingOne"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"ThePrevailingOne"},"content":"Read the \u003ca href\u003d\"#glossary\"\u003eGlossary\u003c/a\u003e section to find some uncommon or niche words in the user guide.","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"ThePrevailingOne"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"ThePrevailingOne"},"content":"### Getting help","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"ThePrevailingOne"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"ThePrevailingOne"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"ThePrevailingOne"},"content":"help","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"ThePrevailingOne"},"content":"### Adding entries","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"ThePrevailingOne"},"content":"#### Adding a company: `addc`","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"albertsutz"},"content":"Adds a company to the list of companies.","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"ThePrevailingOne"},"content":"addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"Entries can have any number of tags (including 0)","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"albertsutz"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"albertsutz"},"content":"* `addc n/Shopee p/96113432 e/shopee@gmail.com a/14 Jurong Street #01-01`","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"albertsutz"},"content":"* `addc n/DBS t/bank e/dbs@protonmail.com p/1234567 a/31 Race Card Road #02-03 t/financial`","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"ThePrevailingOne"},"content":"#### Adding a person: `addp`","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"albertsutz"},"content":"Adds a person to the list of contact people.","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"ThePrevailingOne"},"content":"addp n/NAME c/COMPANY_NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"`COMPANY_NAME` must match the name of an existing Company in the Company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"* `addp n/John Doe c/Shopee p/98765432 e/johnd@example.com`","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"* `addp n/Betsy Crowe c/DBS t/friend e/betsycrowe@example.com p/1234567 t/criminal`","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":223,"author":{"gitId":"ThePrevailingOne"},"content":"#### Adding an event: `adde`","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"Adds an event to the list of events.","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":227,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"ThePrevailingOne"},"content":"adde n/NAME c/COMPANY_NAME d/DATE ti/TIME l/LOCATION [t/TAG]…​","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":232,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"albertsutz"},"content":"`DATE` must be in the format YYYY-MM-DD, while `TIME` must be in the format HH:MM.","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"albertsutz"},"content":"E.g. 2022-10-20 and 13:30.","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"Graphcalibur"},"content":"`COMPANY_NAME` must match the name of an existing Company in the Company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"* `adde n/Interview c/DBS d/2022-04-02 ti/14:00 l/Zoom`","lastModifiedDate":"2022-03-26"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"* `adde n/Career Talk ti/10:00 d/2022-03-19 c/Sony t/important l/22 Clementi Rd`","lastModifiedDate":"2022-03-26"},{"lineNumber":244,"author":{"gitId":"ThePrevailingOne"},"content":"### Listing entries","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"ThePrevailingOne"},"content":"#### Listing all companies : `listc`","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Graphcalibur"},"content":"Shows a list of all companies in the list of companies.","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":249,"author":{"gitId":"ThePrevailingOne"},"content":"Format:","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"ThePrevailingOne"},"content":"listc","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":254,"author":{"gitId":"ThePrevailingOne"},"content":"#### Listing all persons : `listp`","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"albertsutz"},"content":"Shows a list of all people in the list of contact people.","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"ThePrevailingOne"},"content":"listp","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":263,"author":{"gitId":"Graphcalibur"},"content":"### Listing all events : `liste`","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"Graphcalibur"},"content":"Shows a list of all events in the list of events.","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"ThePrevailingOne"},"content":"liste","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"ThePrevailingOne"},"content":"### Editing entries","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":275,"author":{"gitId":"Graphcalibur"},"content":"**:information_source: Notes about the Edit Commands:**\u003cbr\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":276,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":277,"author":{"gitId":"Graphcalibur"},"content":"* Each edit command identifies the entry to edit based on the `INDEX`.","lastModifiedDate":"2022-03-28"},{"lineNumber":278,"author":{"gitId":"Graphcalibur"},"content":"* The index refers to the index number shown in the appropriately displayed list. For example, for the `editp` command, the index refers to the index in the displayed person list.","lastModifiedDate":"2022-03-28"},{"lineNumber":279,"author":{"gitId":"Graphcalibur"},"content":"* The index **must be a positive integer** 1, 2, 3,...","lastModifiedDate":"2022-03-28"},{"lineNumber":280,"author":{"gitId":"Graphcalibur"},"content":"* At least one parameter aside from `INDEX` must be provided.","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"Graphcalibur"},"content":"* For the parameters not included in the edit command, the values stored for those parameters will remain the same.","lastModifiedDate":"2022-03-28"},{"lineNumber":282,"author":{"gitId":"Graphcalibur"},"content":"* When editing tags, the existing tags of the entry will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"ThePrevailingOne"},"content":"#### Editing a company : `editc`","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"albertsutz"},"content":"Edits an existing company in the list of companies.","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":290,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"ThePrevailingOne"},"content":"editc INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"albertsutz"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"albertsutz"},"content":"If the name of the Company is edited, all Events and Persons referring to the Company will also","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"albertsutz"},"content":"update the company name they have stored.","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"albertsutz"},"content":"* `editc 1 p/91234567 e/company@example.com` Edits the phone number and email address of the 1st company to be `91234567` and `company@example.com` respectively.","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"albertsutz"},"content":"* `editc 2 n/Shoppee t/` Edits the name of the 2nd company to be `Shoppee` and clears all existing tags.","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"ThePrevailingOne"},"content":"#### Editing a person : `editp`","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"Graphcalibur"},"content":"You can remove all of an entry’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"Graphcalibur"},"content":"Edits an existing person in the list of contact people.","lastModifiedDate":"2022-03-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":314,"author":{"gitId":"ThePrevailingOne"},"content":"editp INDEX [n/NAME] [c/COMPANY_NAME] [p/PHONE] [e/EMAIL] [t/TAG]…​","lastModifiedDate":"2022-03-29"},{"lineNumber":315,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":318,"author":{"gitId":"Graphcalibur"},"content":"`COMPANY_NAME` must match the name of an existing Company in the Company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":319,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":321,"author":{"gitId":"Graphcalibur"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":322,"author":{"gitId":"Graphcalibur"},"content":"*  `editp 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":323,"author":{"gitId":"Graphcalibur"},"content":"*  `editp 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":324,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":325,"author":{"gitId":"ThePrevailingOne"},"content":"#### Editing an event : `edite`","lastModifiedDate":"2022-03-29"},{"lineNumber":326,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":327,"author":{"gitId":"Graphcalibur"},"content":"Edits an existing event in the list of events.","lastModifiedDate":"2022-03-26"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":329,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":330,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":331,"author":{"gitId":"ThePrevailingOne"},"content":"edite INDEX [n/NAME] [c/COMPANY_NAME] [d/DATE] [ti/TIME] [l/LOCATION] [t/TAG]…","lastModifiedDate":"2022-03-29"},{"lineNumber":332,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":333,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":334,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"albertsutz"},"content":"`DATE` must be in the format YYYY-MM-DD, while `TIME` must be in the format HH:MM.","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"albertsutz"},"content":"E.g. 2022-10-20 and 13:30.","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"Graphcalibur"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:grey_exclamation: **Note:**","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"Graphcalibur"},"content":"`COMPANY_NAME` must match the name of an existing Company in the Company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"Graphcalibur"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-26"},{"lineNumber":344,"author":{"gitId":"Graphcalibur"},"content":"* `edite 1 d/2021-12-21 l/Zoom` Edits the date and location of the 1st event to be `2021-12-21` and `Zoom` respectively.","lastModifiedDate":"2022-03-26"},{"lineNumber":345,"author":{"gitId":"Graphcalibur"},"content":"* `edite 2 n/Resume Screening t/` Edits the name of the 2nd event to be `Resume Screening` and clears all existing tags.","lastModifiedDate":"2022-03-26"},{"lineNumber":346,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":347,"author":{"gitId":"ThePrevailingOne"},"content":"### Locating entries","lastModifiedDate":"2022-03-29"},{"lineNumber":348,"author":{"gitId":"ThePrevailingOne"},"content":"#### Locating companies: `findc`","lastModifiedDate":"2022-03-29"},{"lineNumber":349,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"albertsutz"},"content":"**TODO**","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"ThePrevailingOne"},"content":"#### Locating people by name: `findp`","lastModifiedDate":"2022-03-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"albertsutz"},"content":"Finds people whose names contain any of the given keywords.","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":357,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":358,"author":{"gitId":"ThePrevailingOne"},"content":"findp KEYWORD [MORE_KEYWORDS]","lastModifiedDate":"2022-03-29"},{"lineNumber":359,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"ThePrevailingOne"},"content":"#### Locating events: `finde`","lastModifiedDate":"2022-03-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":375,"author":{"gitId":"albertsutz"},"content":"**TODO**","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":377,"author":{"gitId":"ThePrevailingOne"},"content":"### Removing entries","lastModifiedDate":"2022-03-29"},{"lineNumber":378,"author":{"gitId":"ThePrevailingOne"},"content":"#### Deleting an entry : `delete`","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"Graphcalibur"},"content":"Deletes the specified entry from the currently displayed list.","lastModifiedDate":"2022-03-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"ThePrevailingOne"},"content":"Format: ","lastModifiedDate":"2022-03-29"},{"lineNumber":383,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"ThePrevailingOne"},"content":"delete INDEX","lastModifiedDate":"2022-03-29"},{"lineNumber":385,"author":{"gitId":"ThePrevailingOne"},"content":"```","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"Graphcalibur"},"content":"* Deletes the entry at the specified `INDEX` of the currently displayed list.","lastModifiedDate":"2022-03-26"},{"lineNumber":388,"author":{"gitId":"Graphcalibur"},"content":"* The index refers to the index number shown in the currently displayed list.","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Graphcalibur"},"content":"* `listc` followed by `delete 2` deletes the 2nd company in the list of comapnies.","lastModifiedDate":"2022-03-26"},{"lineNumber":393,"author":{"gitId":"Graphcalibur"},"content":"* `findp Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-26"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"ThePrevailingOne"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"albertsutz"},"content":"Clears all entries from all lists.","lastModifiedDate":"2022-03-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"Graphcalibur"},"content":"InternBuddy data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"Graphcalibur"},"content":"### Editing the data file [FOR ADVANCED USERS]","lastModifiedDate":"2022-03-26"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":413,"author":{"gitId":"Graphcalibur"},"content":"InternBuddy data are saved as a JSON file `[JAR file location]/data/internbuddy.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":416,"author":{"gitId":"Graphcalibur"},"content":"If your changes to the data file makes its format invalid, InternBuddy will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-08"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"albertsutz"},"content":"## Common Workflow","lastModifiedDate":"2022-03-28"},{"lineNumber":422,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":423,"author":{"gitId":"albertsutz"},"content":"**TODO**","lastModifiedDate":"2022-03-28"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"Graphcalibur"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InternBuddy home folder.","lastModifiedDate":"2022-03-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":433,"author":{"gitId":"albertsutz"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-03-28"},{"lineNumber":434,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":435,"author":{"gitId":"ThePrevailingOne"},"content":"## Glossary","lastModifiedDate":"2022-03-29"},{"lineNumber":436,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":437,"author":{"gitId":"ThePrevailingOne"},"content":"- ### CLI","lastModifiedDate":"2022-03-29"},{"lineNumber":438,"author":{"gitId":"ThePrevailingOne"},"content":"  CLI stands for Command Line Interface. It is a special type of terminal where you can type commands into it and the command will be executed.","lastModifiedDate":"2022-03-29"},{"lineNumber":439,"author":{"gitId":"ThePrevailingOne"},"content":"- ### GUI","lastModifiedDate":"2022-03-29"},{"lineNumber":440,"author":{"gitId":"ThePrevailingOne"},"content":"  GUI stands for Graphical User Interface. Contrary to CLI, GUI is an interface that you can interact with, mainly through clicking interface (i.e. clicking buttons).","lastModifiedDate":"2022-03-29"},{"lineNumber":441,"author":{"gitId":"ThePrevailingOne"},"content":"- ### Entry","lastModifiedDate":"2022-03-29"},{"lineNumber":442,"author":{"gitId":"ThePrevailingOne"},"content":"  An entry is a single entry in a list. In InternBuddy, an entry can be a company, a person, or an event. Entry is a generic term that can be used to refer to any of the three types of entries.","lastModifiedDate":"2022-03-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"Graphcalibur"},"content":"| Action             | Format                                                                           | Examples                                                                             |","lastModifiedDate":"2022-03-26"},{"lineNumber":449,"author":{"gitId":"Graphcalibur"},"content":"|--------------------|----------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-26"},{"lineNumber":450,"author":{"gitId":"Graphcalibur"},"content":"| **Add Person**     | `addp n/NAME c/COMPANY_NAME p/PHONE_NUMBER e/EMAIL [t/TAG]… `                    | `addp n/John Doe c/Shopee p/98765432 e/johnd@example.com t\\friend t\\colleague`       |","lastModifiedDate":"2022-03-26"},{"lineNumber":451,"author":{"gitId":"Graphcalibur"},"content":"| **Add Company**    | `addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… `                         | `addc n/DBS t/bank e/dbs@protonmail.com p/1234567 a/31 Race Card R #02-03 t/finance` |","lastModifiedDate":"2022-03-26"},{"lineNumber":452,"author":{"gitId":"Graphcalibur"},"content":"| **Add Event**      | `adde n/NAME c/COMPANY_NAME d/DATE ti/TIME l/LOCATION [t/TAG]… `                 | `adde n/Career Talk c/Sony d/2022-03-19 ti/10:00 l/22 Clementi Rd t/important`       |","lastModifiedDate":"2022-03-26"},{"lineNumber":453,"author":{"gitId":"Graphcalibur"},"content":"| **Clear**          | `clear`                                                                          |                                                                                      |","lastModifiedDate":"2022-03-26"},{"lineNumber":454,"author":{"gitId":"Graphcalibur"},"content":"| **Delete**         | `delete INDEX`                                                                   | `delete 3`                                                                           |","lastModifiedDate":"2022-03-26"},{"lineNumber":455,"author":{"gitId":"Graphcalibur"},"content":"| **Edit Person**    | `editp INDEX [n/NAME] [c/COMPANY_NAME] [p/PHONE] [e/EMAIL] [t/TAG]…`             | `editp 1 p/91234567 e/johndoe@example.com`                                           |","lastModifiedDate":"2022-03-26"},{"lineNumber":456,"author":{"gitId":"Graphcalibur"},"content":"| **Edit Company**   | `editc INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`                  | `editc 2 n/Shoppee t/`                                                               |","lastModifiedDate":"2022-03-26"},{"lineNumber":457,"author":{"gitId":"Graphcalibur"},"content":"| **Edit Event**     | `edite INDEX [n/NAME] [c/COMPANY_NAME] [d/DATE] [ti/TIME] [l/LOCATION] [t/TAG]…` | `edite 2 n/Resume Screening d/2022-12-11`                                              |","lastModifiedDate":"2022-03-26"},{"lineNumber":458,"author":{"gitId":"albertsutz"},"content":"| **Find Person**    | `findp KEYWORD [MORE_KEYWORDS]`                                                  | `find James Jake`                                                                                     |","lastModifiedDate":"2022-03-28"},{"lineNumber":459,"author":{"gitId":"Graphcalibur"},"content":"| **List Persons**   | `listp`                                                                          |                                                                                      |","lastModifiedDate":"2022-03-26"},{"lineNumber":460,"author":{"gitId":"Graphcalibur"},"content":"| **List Companies** | `listc`                                                                          |                                                                                      |","lastModifiedDate":"2022-03-26"},{"lineNumber":461,"author":{"gitId":"Graphcalibur"},"content":"| **List Events**    | `liste`                                                                          |                                                                                      |","lastModifiedDate":"2022-03-26"},{"lineNumber":462,"author":{"gitId":"Graphcalibur"},"content":"| **Help**           | `help`                                                                           |                                                                                      |","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ThePrevailingOne":171,"albertsutz":46,"Graphcalibur":109,"-":136}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Graphcalibur"},"content":"    content: \"InternBuddy\";","lastModifiedDate":"2022-03-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Graphcalibur":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"title: InternBuddy","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W14-3/tp/actions)","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W14-3/tp/branch/master/graph/badge.svg?token\u003dIHVW9KCP82)](https://codecov.io/gh/AY2122S2-CS2103T-W14-3/tp)","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"# InternBuddy","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"**InternBuddy** is a desktop app for managing companies for internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"If you can type fast, InternBuddy can get your internship management deliverables done faster than traditional GUI apps.","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"InternBuddy provides you a way to plan and organize all your internship details on a single application, with intuitive","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"UI to make your Job Seeking journey a smooth road.","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"* Store and manage Companies","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"* Manage Contacts","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    * For example:  Hiring Manager Contact Details","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"* Manage Events","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    * For example: Interviews and Online Assessments","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"---","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"* If you are interested in using InternBuddy, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"* If you are interested about developing InternBuddy, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"albertsutz":16,"-":13}},{"path":"docs/team/albertsutz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"---","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"layout: page","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"title: Albertsutz\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"---","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"### Project: InternBuddy","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"InternBuddy is a desktop app that helps undergraduate students keep track of the companies they\u0027ve","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"applied to for internships as well as any events you\u0027ve arranged with them. It is optimized for","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"CLI users who prefer to type commands for efficiency.","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"* **Project management**:","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"  * Manage and Review Pull Requests","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"  * User Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"  * Readme","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    * Update Readme content","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"* **Community**:","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"* **Tools**:","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"albertsutz":33}},{"path":"docs/team/graphcalibur.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"title: Graphcalibur\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"### Project: InternBuddy","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"InternBuddy is a desktop app that helps undergraduate students keep track of the companies they\u0027ve","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"applied to for internships as well as any events you\u0027ve arranged with them. It is optimized for ","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"CLI users who prefer to type commands for efficiency.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"  * What it does: ","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"  * Justification: ","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"  * Highlights: ","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"  * Credits:","lastModifiedDate":"2022-03-05"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"* **Project management**:","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"  * Managed releases ???? on GitHub","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-04"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"  * User Guide:","lastModifiedDate":"2022-03-04"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-04"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    * Added user stories.","lastModifiedDate":"2022-03-04"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    * Added NFRs.","lastModifiedDate":"2022-03-04"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"* **Community**:","lastModifiedDate":"2022-03-04"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"* **Tools**:","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"Graphcalibur":39}},{"path":"docs/team/mradhyaf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":"---","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"layout: page","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"title: Mradhyaf\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"---","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"### Project: InternBuddy","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"InternBuddy is a desktop app that helps undergraduate students keep track of the companies they\u0027ve","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"applied to for internships as well as any events you\u0027ve arranged with them. It is optimized for","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"CLI users who prefer to type commands for efficiency.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"* **Project management**:","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"  * Manage and Review Pull Requests","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"  * User Guide:","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"  * Readme","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"    * Update Readme content","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"* **Community**:","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"* **Tools**:","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"mradhyaf":33}},{"path":"docs/team/theprevailingone.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ThePrevailingOne"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"ThePrevailingOne"},"content":"layout: page","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"ThePrevailingOne"},"content":"title: Edward Alvin\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-04"},{"lineNumber":4,"author":{"gitId":"ThePrevailingOne"},"content":"---","lastModifiedDate":"2022-03-04"},{"lineNumber":5,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":6,"author":{"gitId":"ThePrevailingOne"},"content":"### Project: InternBuddy","lastModifiedDate":"2022-03-04"},{"lineNumber":7,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":8,"author":{"gitId":"ThePrevailingOne"},"content":"InternBuddy is a desktop app that helps undergraduate students keep track of the companies they\u0027ve","lastModifiedDate":"2022-03-04"},{"lineNumber":9,"author":{"gitId":"ThePrevailingOne"},"content":"applied to for internships as well as any events you\u0027ve arranged with them. It is optimized for ","lastModifiedDate":"2022-03-04"},{"lineNumber":10,"author":{"gitId":"ThePrevailingOne"},"content":"CLI users who prefer to type commands for efficiency.","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"ThePrevailingOne"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"ThePrevailingOne"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-04"},{"lineNumber":15,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":16,"author":{"gitId":"ThePrevailingOne"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-04"},{"lineNumber":17,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"ThePrevailingOne"},"content":"* **Project management**:","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"ThePrevailingOne"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":22,"author":{"gitId":"ThePrevailingOne"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-04"},{"lineNumber":23,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":24,"author":{"gitId":"ThePrevailingOne"},"content":"* **Community**:","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"ThePrevailingOne"},"content":"* **Tools**:","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"ThePrevailingOne"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"ThePrevailingOne"},"content":"","lastModifiedDate":"2022-03-04"}],"authorContributionMap":{"ThePrevailingOne":29}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"       if (!personToEdit.isSameEntry(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Graphcalibur":1,"-":300}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertsutz":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/ListType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"public enum ListType {","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"    PERSON,","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"    COMPANY,","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"    EVENT","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Graphcalibur":7}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX \u003d \"The entry index provided is invalid\";","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_COMPANIES_LISTED_OVERVIEW \u003d \"%1$d companies listed!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_NONEXISTENT_COMPANY \u003d \"The company provided does not exist in the company list\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":3,"-":11}},{"path":"src/main/java/seedu/address/commons/core/SearchTypeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"public class SearchTypeUtil {","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"    public static enum SearchType { UNARCHIVED_ONLY, ARCHIVED_ONLY, ALL }","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"    public static Predicate\u003cEntry\u003e getPredicate(SearchType searchType) {","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"        switch (searchType) {","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"        case UNARCHIVED_ONLY:","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"            return Model.PREDICATE_SHOW_UNARCHIVED_ONLY;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"        case ARCHIVED_ONLY:","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"            return Model.PREDICATE_SHOW_ARCHIVED_ONLY;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"        case ALL:","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"            return Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            // should never reach here","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        return null;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"Graphcalibur":25}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"     * e.g. {@code Long.MIN_VALUE}, ..., -2, -1, 0, 1, 2, ..., {@code Long.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"     * e.g. empty string, \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"    public static boolean isLong(String s) {","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"            Long.parseLong(s);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Graphcalibur":18,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    /** Returns an unmodifiable view of the filtered list of companies */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    ObservableList\u003cCompany\u003e getFilteredCompanyList();","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":8,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cCompany\u003e getFilteredCompanyList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        return model.getFilteredCompanyList();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":12,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":" * Adds a company to the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"public class AddCompanyCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a company to the address book. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_NAME + \"Shopee \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_PHONE + \"96613725 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_EMAIL + \"askhr@shopee.com \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_TAG + \"ecommerce \"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_TAG + \"hiring\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New company added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_DUPLICATE_COMPANY \u003d \"This company already exists in the address book\";","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    private final Company toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"     * Creates an AddCompanyCommand to add the specified {@code Company}","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    public AddCompanyCommand(Company company) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        toAdd \u003d company;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        if (model.hasCompany(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_COMPANY);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        model.addCompany(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"                || (other instanceof AddCompanyCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 toAdd.equals(((AddCompanyCommand) other).toAdd));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Graphcalibur":66}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NONEXISTENT_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"adde\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_NAME + \"Interview \"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_COMPANY + \"ABC \"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_DATE + \"12-12-2022 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_TIME + \"13:30 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_LOCATION + \"zoom \"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_TAG + \"technical \"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_TAG + \"coding\";","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    private final Event toAdd;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        toAdd \u003d event;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        if (!model.hasCompany(toAdd.getCompanyName())) {","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_COMPANY);","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":70,"Graphcalibur":5}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NONEXISTENT_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_COMPANY + \"COMPANY \"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_COMPANY + \"ABC \"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        if (!model.hasCompany(toAdd.getCompanyName())) {","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_COMPANY);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":7,"Graphcalibur":8,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UNARCHIVED_ONLY;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"            + \": Archives the entry identified by the index number used in the displayed entry list.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_ARCHIVE_ENTRY_SUCCESS \u003d \"Archived Entry: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    public ArchiveCommand(Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        Entry archivedEntry \u003d model.archiveEntry(targetIndex.getZeroBased(), true);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        if (archivedEntry \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        // If the filteredList\u0027s predicate is UNARCHIVED_ONLY it will not update itself to remove the archived","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        // entry, so we have to set it to a different predicate first.","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        model.updateCurrentlyDisplayedList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        model.updateCurrentlyDisplayedList(PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_ENTRY_SUCCESS, archivedEntry));","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"                || (other instanceof ArchiveCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 targetIndex.equals(((ArchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Graphcalibur":53}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    /** The application should change the display to show only the person list. */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    private final boolean showPerson;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    /** The application should change the display to show only the company list. */","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    private final boolean showCompany;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    /** The application should change the display to show only the event list. */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    private final boolean showEvent;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"                         boolean showPerson, boolean showCompany, boolean showEvent) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        this.showPerson \u003d showPerson;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        this.showCompany \u003d showCompany;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        this.showEvent \u003d showEvent;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        this(feedbackToUser, false, false, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    public boolean isShowPerson() {","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return showPerson;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"    public boolean isShowCompany() {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"        return showCompany;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"    public boolean isShowEvent() {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        return showEvent;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 showPerson \u003d\u003d otherCommandResult.showPerson","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 showCompany \u003d\u003d otherCommandResult.showCompany","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 showEvent \u003d\u003d otherCommandResult.showEvent;","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showPerson, showCompany, showEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertsutz":16,"Graphcalibur":16,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":" * Deletes an entry identified using its displayed index from the address book.","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \": Deletes the entry identified by the index number used in the displayed entry list.\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_DELETE_ENTRY_SUCCESS \u003d \"Deleted Entry: %1$s\";","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        Entry deletedEntry \u003d model.deleteEntry(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        if (deletedEntry \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ENTRY_SUCCESS, deletedEntry));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Graphcalibur":9,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/EditCompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UNARCHIVED_ONLY;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":" * Edits the details of an existing company in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"public class EditCompanyCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the command identified \"","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            + \"by the index number used in the displayed company list. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_EDIT_COMPANY_SUCCESS \u003d \"Edited Company: %1$s\";","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_DUPLICATE_COMPANY \u003d \"This company already exists in the address book.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    private final Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"    private final EditCompanyDescriptor editCompanyDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"     * @param index of the company in the filtered company list to edit","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"     * @param editCompanyDescriptor details to edit the company with","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"    public EditCompanyCommand(Index index, EditCompanyDescriptor editCompanyDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(editCompanyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        this.editCompanyDescriptor \u003d new EditCompanyDescriptor(editCompanyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        List\u003cCompany\u003e lastShownList \u003d model.getFilteredCompanyList();","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"        Company companyToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"        Company editedCompany \u003d createEditedCompany(companyToEdit, editCompanyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        if (!companyToEdit.isSameEntry(editedCompany) \u0026\u0026 model.hasCompany(editedCompany)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_COMPANY);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"        model.setCompany(companyToEdit, editedCompany);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"        model.updateFilteredCompanyList(PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"        if (!companyToEdit.getName().equals(editedCompany.getName())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"            model.getAddressBook().updateCompanyNames(","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"                    companyToEdit.getName().toString(), editedCompany.getName().toString());","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_COMPANY_SUCCESS, editedCompany));","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"     * Creates and returns a {@code Company} with the details of {@code companyToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"     * edited with {@code editCompanyDescriptor}.","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"    private static Company createEditedCompany(Company companyToEdit, EditCompanyDescriptor editCompanyDescriptor) {","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"        assert companyToEdit !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"        Name updatedName \u003d editCompanyDescriptor.getName().orElse(companyToEdit.getName());","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        Phone updatedPhone \u003d editCompanyDescriptor.getPhone().orElse(companyToEdit.getPhone());","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"        Email updatedEmail \u003d editCompanyDescriptor.getEmail().orElse(companyToEdit.getEmail());","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"        Address updatedAddress \u003d editCompanyDescriptor.getAddress().orElse(companyToEdit.getAddress());","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCompanyDescriptor.getTags().orElse(companyToEdit.getTags());","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"        return new Company(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"        if (!(other instanceof EditCompanyCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"        // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"        EditCompanyCommand e \u003d (EditCompanyCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 editCompanyDescriptor.equals(e.editCompanyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"     * Stores the details to edit the company with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"     * corresponding field value of the company.","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"    public static class EditCompanyDescriptor {","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"        private Name name;","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"        private Email email;","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"        private Address address;","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"        public EditCompanyDescriptor() {}","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        public EditCompanyDescriptor(EditCompanyDescriptor toCopy) {","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-27"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-27"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-27"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-27"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-03-27"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-03-27"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-03-27"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-27"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-27"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"Graphcalibur"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-27"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-27"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"                return true;","lastModifiedDate":"2022-03-27"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"            if (!(other instanceof EditCompanyDescriptor)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"                return false;","lastModifiedDate":"2022-03-27"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-27"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"            // state check","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"            EditCompanyDescriptor e \u003d (EditCompanyDescriptor) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Graphcalibur":231}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NONEXISTENT_COMPANY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Location;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Time;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":" * Edits the details of an existing event in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"edite\";","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_DATE + \"2022-04-12 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_TIME + \"12:20\";","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"    private final Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"    private final EditEventCommand.EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    public EditEventCommand(Index index, EditEventCommand.EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        this.editEventDescriptor \u003d new EditEventCommand.EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        if (!eventToEdit.isSameEntry(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"        if (!model.hasCompany(editedEvent.getCompanyName())) {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_COMPANY);","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"        Name updatedCompanyName \u003d editEventDescriptor.getCompanyName().orElse(eventToEdit.getCompanyName());","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"        Date updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        Time updatedTime \u003d editEventDescriptor.getTime().orElse(eventToEdit.getTime());","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"        Location updatedLocation \u003d editEventDescriptor.getLocation().orElse(eventToEdit.getLocation());","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEventDescriptor.getTags().orElse(eventToEdit.getTags());","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"        return new Event(updatedName, updatedCompanyName, updatedDate, updatedTime, updatedLocation, updatedTags);","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"        private Name name;","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"        private Name companyName;","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"        private Date date;","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"        private Time time;","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"        private Location location;","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"        public EditEventDescriptor(EditEventCommand.EditEventDescriptor toCopy) {","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"            setCompanyName(toCopy.companyName);","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"            return CollectionUtil.isAnyNonNull(name, companyName, date, time, location, tags);","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"        public void setCompanyName(Name companyName) {","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"            this.companyName \u003d companyName;","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cName\u003e getCompanyName() {","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(companyName);","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"            this.time \u003d time;","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"            this.location \u003d location;","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"                return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"            if (!(other instanceof EditEventCommand.EditEventDescriptor)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"                return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"Graphcalibur"},"content":"            // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"            EditEventCommand.EditEventDescriptor e \u003d (EditEventCommand.EditEventDescriptor) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getCompanyName().equals(e.getCompanyName())","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getTime().equals(e.getTime())","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Graphcalibur":245}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NONEXISTENT_COMPANY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        if (!personToEdit.isSameEntry(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"        if (!model.hasCompany(editedPerson.getCompanyName())) {","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_COMPANY);","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"        Name updatedCompanyName \u003d editPersonDescriptor.getCompanyName().orElse(personToEdit.getCompanyName());","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        return new Person(updatedName, updatedCompanyName, updatedPhone, updatedEmail, updatedTags);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"        private Name companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"            setCompanyName(toCopy.companyName);","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, companyName, tags);","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"        public void setCompanyName(Name companyName) {","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"            this.companyName \u003d companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"        public Optional\u003cName\u003e getCompanyName() {","lastModifiedDate":"2022-03-20"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.ofNullable(companyName);","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-03-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"                    \u0026\u0026 getCompanyName().equals(e.getCompanyName())","lastModifiedDate":"2022-03-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":10,"Graphcalibur":20,"-":199}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Graphcalibur":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * Keyword matching is case insensitive","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * Find company command uses User input to specify what attributes (name and/or tags) the displayed companies","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" * should have.","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":" * The relationship between attributes is \"AND\" while the relationship between keywords of the same attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":" * is \"OR\".","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * For example, \"finde n/ shopsg dbsss\" will return shopsg and dbsss companies. Furthermore, \"finde t/ applied test\"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" * will return all companies that has tags \"applied\" or \"test\".","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"public class FindCompanyCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_NOT_QUERIED \u003d \"At least one field to find must be provided.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds companies with given details of the company \"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"            + \"by name and tag.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            + \"[\\\" + PREFIX_SEARCH_TYPE + \\\"SEARCH_TYPE]\"","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            + \"[\\\" + PREFIX_TAG + \\\"TAG]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_NAME + \"sgshop dbsss \";","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    private final CompanyContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * Constructs FindCompanyCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     * @param predicate A predicate containing all Company\u0027s name and tags queried by user","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    public FindCompanyCommand(CompanyContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredCompanyList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"                String.format(Messages.MESSAGE_COMPANIES_LISTED_OVERVIEW, model.getFilteredCompanyList().size()),","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"                false, false, false, true, false);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof FindCompanyCommand // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 predicate.equals(((FindCompanyCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"albertsutz":59,"Graphcalibur":1}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.EventContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":" * Keyword matching is case insensitive","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":" * Find event command uses User input to specify what attributes the displayed events should have.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":" * The relationship between attributes is \"AND\" while the relationship between keywords of the same attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":" * is \"OR\".","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":" * For example, \"finde n/ interview c/ shopsg dbsss\" will return any events that has \"interview\" as its name","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":" * AND has (\"shopsg\" OR \"dbsss\") as its companyName.","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"finde\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_NOT_QUERIED \u003d \"At least one field to find must be provided.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds events with given details of the event \"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"            + \"by name, company, start date, end date, time, location and tag\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            + \"[\" + PREFIX_START_DATE + \"START DATE] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_END_DATE + \"END DATE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_SEARCH_TYPE + \"SEARCH_TYPE] \"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_COMPANY + \"sgshop \"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_TIME + \"zoom\";","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    private final EventContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"     * Constructs FindEventCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"     * @param predicate A predicate containing all Event\u0027s attributes queried by user","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    public FindEventCommand(EventContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()),","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof FindEventCommand // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 predicate.equals(((FindEventCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"albertsutz":68,"Graphcalibur":5}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" * Finds and lists all persons in address book whose name, companyName, and tags contains any of the argument keywords.","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":" * Keyword matching is case insensitive","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":" * Find person command uses User input to specify what attributes the displayed person should have.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * The relationship between attributes is \"AND\" while the relationship between keywords of the same attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" * is \"OR\".","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":" * For example, \"findp n/ alice bob\" will return alice and bob (any person whose name is \"alice\" or \"bob\").","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":" * In addition, \"findp c/ shopsg t/ hr will return any person whose companyName is \"shopsg\" and tags contains \"hr\".","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose name, companyName, and tags\"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"            + \" contain any of the specified keywords (case-insensitive)\"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            + \"[\" + PREFIX_COMPANY + \"COMPANY] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            + \"[\\\" + PREFIX_SEARCH_TYPE + \\\"SEARCH_TYPE]\"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"            + \"[\\\" + PREFIX_TAG + \\\"TAG]...\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            + PREFIX_NAME + \"alice bob \";","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"     * Constructs FindPersonCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"     * @param predicate A predicate containing all Event\u0027s attributes queried by user","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    public FindPersonCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"                false, false, true, false, false);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":62,"Graphcalibur":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"    private final SearchType searchType;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"    public ListCommand(SearchType searchType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"        this.searchType \u003d searchType;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    protected Predicate\u003cEntry\u003e getPredicate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"        return SearchTypeUtil.getPredicate(searchType);","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    protected String getSuccessMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"        switch (searchType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        case UNARCHIVED_ONLY:","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            return \" unarchived\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"        case ARCHIVED_ONLY:","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"            return \" archived\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        case ALL:","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"            return \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"            // Should not reach here","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"            return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Graphcalibur":24,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/ListCompanyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"public class ListCompanyCommand extends ListCommand {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all%s companies\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d \"Lists companies. The default setting is to list \"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"            + \"only unarchived companies, but you can choose to include archived ones.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: [ \" + PREFIX_SEARCH_TYPE + \"SEARCH_TYPE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"            + \"(must be one of \u0027unarchived\u0027, \u0027archived\u0027, or \u0027all\u0027)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_SEARCH_TYPE + \"unarchived\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    public ListCompanyCommand(SearchType searchType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        super(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        //Show all the events and empty out all the temporary list for events and companies","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        model.showCompanyList(getPredicate());","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, getSuccessMessage()),","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"                false, false, false, true, false);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"Graphcalibur":35}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"public class ListEventCommand extends ListCommand {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"liste\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all%s events\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d \"Lists events. The default setting is to list \"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \"only unarchived events, but you can choose to include archived ones.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: [ \" + PREFIX_SEARCH_TYPE + \"SEARCH_TYPE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            + \"(must be one of \u0027unarchived\u0027, \u0027archived\u0027, or \u0027all\u0027)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_SEARCH_TYPE + \"unarchived\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    public ListEventCommand(SearchType searchType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        super(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"        //Show all the events and empty out all the temporary list for events and companies","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        model.showEventList(getPredicate());","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, getSuccessMessage()),","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                false, false, false, false, true);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"albertsutz":19,"Graphcalibur":19}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"public class ListPersonCommand extends ListCommand {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    public static final String COMMAND_WORD \u003d \"listp\";","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all%s persons\";","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d \"Lists persons. The default setting is to list \"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \"only unarchived persons, but you can choose to include archived ones.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: [ \" + PREFIX_SEARCH_TYPE + \"SEARCH_TYPE] \"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            + \"(must be one of \u0027unarchived\u0027, \u0027archived\u0027, or \u0027all\u0027)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            + PREFIX_SEARCH_TYPE + \"unarchived\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    public ListPersonCommand(SearchType searchType) {","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        super(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"        //Show all the persons and empty out all the temporary list for events and companies","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        model.showPersonList(getPredicate());","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, getSuccessMessage()),","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                false, false, true, false, false);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":21,"Graphcalibur":17}},{"path":"src/main/java/seedu/address/logic/commands/UnarchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ARCHIVED_ONLY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"public class UnarchiveCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMMAND_WORD \u003d \"unarchive\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"            + \": Unarchives the entry identified by the index number used in the displayed entry list.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_ARCHIVE_ENTRY_SUCCESS \u003d \"Unarchived Entry: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    public UnarchiveCommand(Index targetIndex) {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        Entry archivedEntry \u003d model.archiveEntry(targetIndex.getZeroBased(), false);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        if (archivedEntry \u003d\u003d null) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        // If the filteredList\u0027s predicate is UNARCHIVED_ONLY it will not update itself to remove the archived","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        // entry, so we have to set it to a different predicate first.","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        model.updateCurrentlyDisplayedList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        model.updateCurrentlyDisplayedList(PREDICATE_SHOW_ARCHIVED_ONLY);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_ENTRY_SUCCESS, archivedEntry));","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"                || (other instanceof UnarchiveCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 targetIndex.equals(((UnarchiveCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Graphcalibur":53}},{"path":"src/main/java/seedu/address/logic/parser/AddCompanyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.AddCompanyCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":" * Parses input and creates a new AddCompanyCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"public class AddCompanyCommandParser implements Parser\u003cAddCompanyCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCompanyCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"     * and returns an AddCompanyCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    public AddCompanyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCompanyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        Company company \u003d new Company(name, phone, email, address, tagList);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        return new AddCompanyCommand(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Graphcalibur":14,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Location;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY,","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"                        PREFIX_DATE, PREFIX_TIME, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COMPANY,","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"                PREFIX_DATE, PREFIX_TIME, PREFIX_LOCATION)","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        Name companyName \u003d ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        Event event \u003d new Event(name, companyName, date, time, location, tagList);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":62,"Graphcalibur":2}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COMPANY, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        Name companyName \u003d ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        Person person \u003d new Person(name, companyName, phone, email, tagList);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":54,"Graphcalibur":5}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.ListType;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.AddCompanyCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditCompanyCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ListCompanyCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"        case AddCompanyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"            return new AddCompanyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        case EditCompanyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"            return new EditCompanyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        case FindCompanyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            return new FindCompanyCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"            return new ListCommandParser(ListType.PERSON).parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"        case ListCompanyCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"            return new ListCommandParser(ListType.COMPANY).parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"            return new ListCommandParser(ListType.EVENT).parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"        case ArchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"            return new ArchiveCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"        case UnarchiveCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"            return new UnarchiveCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertsutz":21,"Graphcalibur":29,"-":67}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ArchiveCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"public class ArchiveCommandParser implements Parser\u003cArchiveCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"     * and returns a ArchiveCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public ArchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            return new ArchiveCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Graphcalibur":27}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof ArgumentMultimap // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 argMultimap.equals(((ArgumentMultimap) other).argMultimap)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"albertsutz":7,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"ti/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public static final Prefix PREFIX_SEARCH_TYPE \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"albertsutz":4,"Graphcalibur":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":" * Parses input arguments and creates a new Deleteommand object","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"Graphcalibur":1,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCompanyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditCompanyCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditCompanyCommand.EditCompanyDescriptor;","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":" * Parses input arguments and creates a new EditCompanyCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"public class EditCompanyCommandParser implements Parser\u003cEditCompanyCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCompanyCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"     * and returns an EditCompanyCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    public EditCompanyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        Index index;","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"                    EditCompanyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        EditCompanyDescriptor editCompanyDescriptor \u003d new EditCompanyDescriptor();","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"            editCompanyDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            editCompanyDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"            editCompanyDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"            editCompanyDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCompanyDescriptor::setTags);","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        if (!editCompanyDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"        return new EditCompanyCommand(index, editCompanyDescriptor);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"Graphcalibur":61}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":" * Parses input arguments and creates a new EditEventCommand object","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY,","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"                        PREFIX_DATE, PREFIX_TIME, PREFIX_LOCATION, PREFIX_TAG);","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        Index index;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"                    EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"            editEventDescriptor.setCompanyName(ParserUtil.parseCompanyName(","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"                    argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"            editEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"            editEventDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"            editEventDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEventDescriptor::setTags);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"Graphcalibur":68}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"            editPersonDescriptor.setCompanyName(ParserUtil.parseCompanyName(","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"                    argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"albertsutz":10,"Graphcalibur":9,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/FindCompanyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindCompanyCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.CompanyContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new FindCompanyPersonCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"public class FindCompanyCommandParser implements Parser\u003cFindCompanyCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCompanyCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * and returns a FindCompanyCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    public FindCompanyCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG, PREFIX_SEARCH_TYPE);","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        String searchTypeString \u003d argMultimap.getValue(PREFIX_SEARCH_TYPE).orElse(\"unarchived\");","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        if (!isValid(argMultimap, searchTypeString)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                    FindCompanyCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        String[] nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        String[] tagKeywords \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        SearchTypeUtil.SearchType searchType \u003d ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        CompanyContainsKeywordsPredicate predicate \u003d new CompanyContainsKeywordsPredicate(Arrays.asList(nameKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"                Arrays.asList(tagKeywords), SearchTypeUtil.getPredicate(searchType));","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        return new FindCompanyCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    private boolean isValid(ArgumentMultimap argumentMultimap, String searchTypeString) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        boolean namePresent \u003d argumentMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        boolean tagPresent \u003d argumentMultimap.getValue(PREFIX_TAG).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        boolean searchPresent \u003d argumentMultimap.getValue(PREFIX_SEARCH_TYPE).isPresent();","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        if (namePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_NAME).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseName(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        if (tagPresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_TAG).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseTag(s);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        return namePresent || tagPresent || searchPresent;","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"albertsutz":59,"Graphcalibur":12}},{"path":"src/main/java/seedu/address/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.EventContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new FindEventPersonCommand object","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"public class FindEventCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     * and returns a FindEventCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_START_DATE,","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"                        PREFIX_END_DATE, PREFIX_TIME, PREFIX_LOCATION, PREFIX_TAG, PREFIX_SEARCH_TYPE);","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        String searchTypeString \u003d argMultimap.getValue(PREFIX_SEARCH_TYPE).orElse(\"unarchived\");","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        if (!isValid(argMultimap, searchTypeString)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"                    FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        String[] nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        String[] companyNameKeywords \u003d argMultimap.getValue(PREFIX_COMPANY).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        Date startDate \u003d argMultimap.getValue(PREFIX_START_DATE).isPresent()","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"                ? ParserUtil.parseDate(argMultimap.getValue(PREFIX_START_DATE).get()) : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        Date endDate \u003d argMultimap.getValue(PREFIX_END_DATE).isPresent()","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"                ? ParserUtil.parseDate(argMultimap.getValue(PREFIX_END_DATE).get()) : null;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        String[] timeKeywords \u003d argMultimap.getValue(PREFIX_TIME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        String[] locationKeywords \u003d argMultimap.getValue(PREFIX_LOCATION).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        String[] tagKeywords \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        SearchTypeUtil.SearchType searchType \u003d ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        EventContainsKeywordsPredicate predicate \u003d new EventContainsKeywordsPredicate(Arrays.asList(nameKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"                Arrays.asList(companyNameKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"                startDate, endDate,","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"                Arrays.asList(timeKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"                Arrays.asList(locationKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"                Arrays.asList(tagKeywords),","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"                SearchTypeUtil.getPredicate(searchType));","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"        return new FindEventCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    private boolean isValid(ArgumentMultimap argumentMultimap, String searchTypeString) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        boolean namePresent \u003d argumentMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        boolean companyNamePresent \u003d argumentMultimap.getValue(PREFIX_COMPANY).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        boolean startDatePresent \u003d argumentMultimap.getValue(PREFIX_START_DATE).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        boolean endDatePresent \u003d argumentMultimap.getValue(PREFIX_END_DATE).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        boolean timePresent \u003d argumentMultimap.getValue(PREFIX_TIME).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        boolean locationPresent \u003d argumentMultimap.getValue(PREFIX_LOCATION).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        boolean tagPresent \u003d argumentMultimap.getValue(PREFIX_TAG).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"        boolean searchPresent \u003d argumentMultimap.getValue(PREFIX_SEARCH_TYPE).isPresent();","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        if (namePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_NAME).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseName(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"        if (companyNamePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_COMPANY).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseCompanyName(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        if (startDatePresent) {","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"            String s \u003d argumentMultimap.getValue(PREFIX_START_DATE).get();","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"            ParserUtil.parseDate(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"        if (endDatePresent) {","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"            String s \u003d argumentMultimap.getValue(PREFIX_END_DATE).get();","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"            ParserUtil.parseDate(s);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"        if (timePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_TIME).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseTime(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"        if (locationPresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_LOCATION).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseLocation(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"        if (tagPresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_TAG).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseTag(s);","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"        return namePresent || companyNamePresent || startDatePresent || endDatePresent || timePresent","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"                || locationPresent || tagPresent || searchPresent;","lastModifiedDate":"2022-04-01"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"albertsutz":93,"Graphcalibur":30}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_COMPANY, PREFIX_TAG, PREFIX_SEARCH_TYPE);","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        String searchTypeString \u003d argMultimap.getValue(PREFIX_SEARCH_TYPE).orElse(\"unarchived\");","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        if (!isValid(argMultimap, searchTypeString)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"                    FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        String[] nameKeywords \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        String[] companyNameKeywords \u003d argMultimap.getValue(PREFIX_COMPANY).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        String[] tagKeywords \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        SearchTypeUtil.SearchType searchType \u003d ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(nameKeywords),","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"                Arrays.asList(companyNameKeywords), Arrays.asList(tagKeywords),","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"                SearchTypeUtil.getPredicate(searchType));","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        return new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"    private boolean isValid(ArgumentMultimap argumentMultimap, String searchTypeString) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        boolean namePresent \u003d argumentMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        boolean companyNamePresent \u003d argumentMultimap.getValue(PREFIX_COMPANY).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        boolean tagPresent \u003d argumentMultimap.getValue(PREFIX_TAG).isPresent();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"        boolean searchPresent \u003d argumentMultimap.getValue(PREFIX_SEARCH_TYPE).isPresent();","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        if (namePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_NAME).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseName(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"        if (companyNamePresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_COMPANY).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseCompanyName(s);","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        if (tagPresent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"            List\u003cString\u003e dummy \u003d Arrays.asList(argumentMultimap.getValue(PREFIX_TAG).get().split(\"\\\\s+\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"            for (String s : dummy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"                ParserUtil.parseTag(s);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        return namePresent || companyNamePresent || tagPresent || searchPresent;","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"albertsutz":71,"Graphcalibur":13}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEARCH_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.ListType;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ListCompanyCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    private final ListType listType;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor for a ListCommandParser. Can create a new ListCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"     * ased on the given {@code listType}.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    public ListCommandParser(ListType listType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(listType);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SEARCH_TYPE);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        String searchTypeString \u003d argMultimap.getValue(PREFIX_SEARCH_TYPE).orElse(\"unarchived\");","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            SearchType searchType \u003d ParserUtil.parseSearchType(searchTypeString);","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"            switch (listType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"            case PERSON:","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"                return new ListPersonCommand(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"            case COMPANY:","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"                return new ListCompanyCommand(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            case EVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"                return new ListEventCommand(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"            default:","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"                // Should never reach here","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"            String messageUsage \u003d ListEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"            switch (listType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"            case PERSON:","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"                messageUsage \u003d ListPersonCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"                break;","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"            case COMPANY:","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"                messageUsage \u003d ListCompanyCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"                break;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"            case EVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"                messageUsage \u003d ListEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"                break;","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"            default:","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"                // Should never reach here","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, messageUsage), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"Graphcalibur":72}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Location;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_INVALID_SEARCH_TYPE \u003d \"Search Type must be one of the following: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"            + \"UNARCHIVED, ARCHIVED, ALL\";","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"    public static Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"albertsutz"},"content":"     * Parses a {@code String companyName} into an valid String.","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"albertsutz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the given companyName is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"    public static Name parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"albertsutz"},"content":"        String trimmedCompanyName \u003d companyName.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"        if (!Name.isValidName(trimmedCompanyName)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"        return new Name(trimmedCompanyName);","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"albertsutz"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"albertsutz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"albertsutz"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"albertsutz"},"content":"     * Parses a {@code String time} into an {@code Time}.","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"albertsutz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"albertsutz"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":188,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":189,"author":{"gitId":"albertsutz"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"albertsutz"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":193,"author":{"gitId":"albertsutz"},"content":"        return new Time(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"albertsutz"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"albertsutz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"albertsutz"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"albertsutz"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"albertsutz"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"albertsutz"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"albertsutz"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"albertsutz"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"     * Parses a {@code String searchType} into a {@code SearchType}","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the given {@code searchType} is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"    public static SearchType parseSearchType(String searchType) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(searchType);","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"        String trimmedSearchType \u003d searchType.trim();","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"        switch (trimmedSearchType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        case \"unarchived\":","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"            return SearchType.UNARCHIVED_ONLY;","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"        case \"archived\":","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"            return SearchType.ARCHIVED_ONLY;","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"        case \"all\":","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"            return SearchType.ALL;","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(MESSAGE_INVALID_SEARCH_TYPE);","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"albertsutz":59,"Graphcalibur":53,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/UnarchiveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.UnarchiveCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":" * Parses input arguments and creates a new ArchiveCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"public class UnarchiveCommandParser implements Parser\u003cUnarchiveCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the given {@code String} of arguments in the context of the UnarchiveCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"     * and returns a UnarchiveCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    public UnarchiveCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            return new UnarchiveCommand(index);","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnarchiveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"Graphcalibur":27}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.UniqueEntryList;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":" * Duplicates are not allowed (by .isSameEntry comparison)","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    private final UniqueEntryList\u003cPerson\u003e persons;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    private final UniqueEntryList\u003cCompany\u003e companies;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    private final UniqueEntryList\u003cEvent\u003e events;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        persons \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        companies \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        events \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        this.persons.setEntries(persons);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the contents of the companies list with {@code companies}.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"     * {@code companies} must not contain duplicate companies.","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    public void setCompanies(List\u003cCompany\u003e companies) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        this.companies.setEntries(companies);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        this.events.setEntries(events);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        setCompanies(newData.getCompanyList());","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"        persons.setEntry(target, editedPerson);","lastModifiedDate":"2022-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"     * Sets archived state of {@code key} in the person list.","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"     * {@code key} must exist in the person list.","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"    public void setArchivePerson(Person key, boolean isArchived) {","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"        persons.setArchived(key, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"    //// company-level operations","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if a company with the same identity as {@code company} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"    public boolean hasCompany(Company company) {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(company);","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"        return companies.contains(company);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"     * Adds a company to the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"     * The company must not already exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"    public void addCompany(Company c) {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"        companies.add(c);","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the given company {@code target} in the list with {@code editedCompany}.","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"     * The company identity of {@code editedCompany} must not be the same as another existing company in the","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"     * address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"    public void setCompany(Company target, Company editedCompany) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(editedCompany);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        companies.setEntry(target, editedCompany);","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"     * Removes {@code key} from the company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"     * {@code key} must exist in the company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"    public void removeCompany(Company key) {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"        companies.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"     * Sets archived state of {@code key} in the company list.","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"     * {@code key} must exist in the company list.","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"    public void setArchiveCompany(Company key, boolean isArchived) {","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"        companies.setArchived(key, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"    //// event-level operations","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"        return events.contains(event);","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"        events.add(e);","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"        events.setEntry(target, editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"     * Removes {@code key} from the event list.","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"     * {@code key} must exist in the event list.","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"        events.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"     * Sets archived state of {@code key} in the event list.","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"     * {@code key} must exist in the event list.","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"    public void setArchiveEvent(Event key, boolean isArchived) {","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"        events.setArchived(key, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCompanyNames(String oldName, String newName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"        persons.updateCompanyNames(oldName, newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        events.updateCompanyNames(oldName, newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cCompany\u003e getCompanyList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"        return companies.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"    //// util methods","lastModifiedDate":"2022-03-27"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-03-27"},{"lineNumber":244,"author":{"gitId":"Graphcalibur"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons,\"","lastModifiedDate":"2022-03-27"},{"lineNumber":245,"author":{"gitId":"Graphcalibur"},"content":"                + companies.asUnmodifiableObservableList().size() + \" companies, \"","lastModifiedDate":"2022-03-27"},{"lineNumber":246,"author":{"gitId":"Graphcalibur"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2022-03-27"},{"lineNumber":247,"author":{"gitId":"Graphcalibur"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-27"},{"lineNumber":248,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":249,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"Graphcalibur"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"Graphcalibur"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"Graphcalibur"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"Graphcalibur"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 companies.equals(otherAddressBook.companies)","lastModifiedDate":"2022-03-16"},{"lineNumber":263,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 events.equals(otherAddressBook.events);","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":268,"author":{"gitId":"Graphcalibur"},"content":"        return Objects.hash(persons, companies, events);","lastModifiedDate":"2022-03-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":270,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertsutz":5,"Graphcalibur":154,"-":112}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    Predicate\u003cEntry\u003e PREDICATE_SHOW_ALL \u003d unused -\u003e true;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    Predicate\u003cEntry\u003e PREDICATE_SHOW_NONE \u003d unused -\u003e false;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    Predicate\u003cEntry\u003e PREDICATE_SHOW_UNARCHIVED_ONLY \u003d entry -\u003e !entry.isArchived();","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    Predicate\u003cEntry\u003e PREDICATE_SHOW_ARCHIVED_ONLY \u003d Entry::isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"    void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if a company with the {@code companyName} exists in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"    boolean hasCompany(Name companyName);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if a company with the same identity as {@code company} exists in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"    boolean hasCompany(Company company);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"     * Deletes the given company.","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"     * The company must exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"    void deleteCompany(Company target);","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"     * Adds the given company.","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"     * {@code company} must not already exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"    void addCompany(Company company);","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the given company {@code target} with {@code editedCompany}.","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"     * The company identity of {@code editedCompany} must not be the same as another existing company","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"     * in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"    void setCompany(Company target, Company editedCompany);","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"    /** Returns an unmodifiable view of the filtered company list */","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"    ObservableList\u003cCompany\u003e getFilteredCompanyList();","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"     * Updates the filter of the filtered company list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"    void updateFilteredCompanyList(Predicate\u003c? super Company\u003e predicate);","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"albertsutz"},"content":"     * Deletes the given event.","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"albertsutz"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"albertsutz"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"albertsutz"},"content":"     * Adds the given event.","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"albertsutz"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"albertsutz"},"content":"    void addEvent(Event event);","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"albertsutz"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"albertsutz"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"albertsutz"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"albertsutz"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"albertsutz"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"albertsutz"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"albertsutz"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"    void updateFilteredEventList(Predicate\u003c? super Event\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"     * Updates the filter of the currently displayed list through the {@code predicate}.","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"    void updateCurrentlyDisplayedList(Predicate\u003cEntry\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"     * Updates filtered lists to show only the Persons list filtered through the {@code predicate}.","lastModifiedDate":"2022-03-20"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"    void showPersonList(Predicate\u003c? super Person\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"     * Updates filtered lists to show only the Company list filtered through the {@code predicate}.","lastModifiedDate":"2022-03-20"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"    void showCompanyList(Predicate\u003c? super Company\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"     * Updates filtered lists to show only the Events list filtered through the {@code predicate}.","lastModifiedDate":"2022-03-20"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"    void showEventList(Predicate\u003c? super Event\u003e predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"     * Deletes the entry at the index of the currently displayed list and returns it.","lastModifiedDate":"2022-03-20"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"    Entry deleteEntry(int index);","lastModifiedDate":"2022-03-20"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"     * Archives the entry at the index of the currently displayed list and returns it.","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"albertsutz"},"content":"    Entry archiveEntry(int index, boolean isArchived) throws CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"albertsutz":36,"Graphcalibur":77,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.ListType;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    private final FilteredList\u003cCompany\u003e filteredCompanies;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    private ListType currentlyDisplayedListType;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        filteredCompanies \u003d new FilteredList\u003c\u003e(this.addressBook.getCompanyList());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        currentlyDisplayedListType \u003d ListType.COMPANY;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        filteredCompanies.setPredicate(PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        // Don\u0027t allow deleting/finding/editing on the events or person list at the beginning","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        filteredPersons.setPredicate(PREDICATE_SHOW_NONE);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        filteredEvents.setPredicate(PREDICATE_SHOW_NONE);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person List Modifiers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Company List Modifiers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"    public boolean hasCompany(Name companyName) {","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"        return addressBook.hasCompany(Company.createDummyCompany(companyName));","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"    public boolean hasCompany(Company company) {","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"        return addressBook.hasCompany(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"    public void deleteCompany(Company target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.removeCompany(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"    public void addCompany(Company company) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.addCompany(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredCompanyList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the given company {@code target} with {@code editedCompany}.","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"     * The company identity of {@code editedCompany} must not be the same as another existing company","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"     * in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"    public void setCompany(Company target, Company editedCompany) {","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(target, editedCompany);","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.setCompany(target, editedCompany);","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d For Events \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"Graphcalibur"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d General Filtered List Modifiers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"     * Updates each of the filtered lists with the given predicate.","lastModifiedDate":"2022-03-20"},{"lineNumber":201,"author":{"gitId":"Graphcalibur"},"content":"     * @param personPredicate The predicate to apply to the Person list.","lastModifiedDate":"2022-03-20"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"     * @param companyPredicate The predicate to apply to the Company list.","lastModifiedDate":"2022-03-20"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"     * @param eventPredicate The predicate to apply to the Event list.","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"    private void updateFilteredLists(Predicate\u003c? super Person\u003e personPredicate,","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"                                     Predicate\u003c? super Company\u003e companyPredicate,","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"                                     Predicate\u003c? super Event\u003e eventPredicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredPersonList(personPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredCompanyList(companyPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredEventList(eventPredicate);","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCurrentlyDisplayedList(Predicate\u003cEntry\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"Graphcalibur"},"content":"        switch (currentlyDisplayedListType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"Graphcalibur"},"content":"        case PERSON:","lastModifiedDate":"2022-03-28"},{"lineNumber":217,"author":{"gitId":"Graphcalibur"},"content":"            showPersonList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"        case COMPANY:","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"            showCompanyList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        case EVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"            showEventList(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"            break;","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"            // Should not reach here","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"    public void showPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredLists(predicate, PREDICATE_SHOW_NONE, PREDICATE_SHOW_NONE);","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"Graphcalibur"},"content":"        currentlyDisplayedListType \u003d ListType.PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"    public void showCompanyList(Predicate\u003c? super Company\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredLists(PREDICATE_SHOW_NONE, predicate, PREDICATE_SHOW_NONE);","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"Graphcalibur"},"content":"        currentlyDisplayedListType \u003d ListType.COMPANY;","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"    public void showEventList(Predicate\u003c? super Event\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"Graphcalibur"},"content":"        updateFilteredLists(PREDICATE_SHOW_NONE, PREDICATE_SHOW_NONE, predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"Graphcalibur"},"content":"        currentlyDisplayedListType \u003d ListType.EVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":247,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":248,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":249,"author":{"gitId":"Graphcalibur"},"content":"    public Entry deleteEntry(int index) {","lastModifiedDate":"2022-03-20"},{"lineNumber":250,"author":{"gitId":"Graphcalibur"},"content":"        switch (currentlyDisplayedListType) {","lastModifiedDate":"2022-03-20"},{"lineNumber":251,"author":{"gitId":"Graphcalibur"},"content":"        case PERSON:","lastModifiedDate":"2022-03-20"},{"lineNumber":252,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredPersons.size()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":253,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":254,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":255,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":256,"author":{"gitId":"Graphcalibur"},"content":"            Person personToDelete \u003d filteredPersons.get(index);","lastModifiedDate":"2022-03-20"},{"lineNumber":257,"author":{"gitId":"Graphcalibur"},"content":"            deletePerson(personToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":258,"author":{"gitId":"Graphcalibur"},"content":"            return personToDelete;","lastModifiedDate":"2022-03-20"},{"lineNumber":259,"author":{"gitId":"Graphcalibur"},"content":"        case COMPANY:","lastModifiedDate":"2022-03-20"},{"lineNumber":260,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredCompanies.size()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":261,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":263,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":264,"author":{"gitId":"Graphcalibur"},"content":"            Company companyToDelete \u003d filteredCompanies.get(index);","lastModifiedDate":"2022-03-20"},{"lineNumber":265,"author":{"gitId":"Graphcalibur"},"content":"            deleteCompany(companyToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":266,"author":{"gitId":"Graphcalibur"},"content":"            return companyToDelete;","lastModifiedDate":"2022-03-20"},{"lineNumber":267,"author":{"gitId":"Graphcalibur"},"content":"        case EVENT:","lastModifiedDate":"2022-03-20"},{"lineNumber":268,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredEvents.size()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":269,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":270,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":271,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":272,"author":{"gitId":"Graphcalibur"},"content":"            Event eventToDelete \u003d filteredEvents.get(index);","lastModifiedDate":"2022-03-20"},{"lineNumber":273,"author":{"gitId":"Graphcalibur"},"content":"            deleteEvent(eventToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":274,"author":{"gitId":"Graphcalibur"},"content":"            return eventToDelete;","lastModifiedDate":"2022-03-20"},{"lineNumber":275,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-03-20"},{"lineNumber":276,"author":{"gitId":"Graphcalibur"},"content":"            return null;","lastModifiedDate":"2022-03-20"},{"lineNumber":277,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":278,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":279,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":280,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":281,"author":{"gitId":"albertsutz"},"content":"    public Entry archiveEntry(int index, boolean isArchived) throws CommandException {","lastModifiedDate":"2022-04-01"},{"lineNumber":282,"author":{"gitId":"Graphcalibur"},"content":"        switch (currentlyDisplayedListType) {","lastModifiedDate":"2022-03-28"},{"lineNumber":283,"author":{"gitId":"Graphcalibur"},"content":"        case PERSON:","lastModifiedDate":"2022-03-28"},{"lineNumber":284,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredPersons.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":285,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":286,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":287,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":288,"author":{"gitId":"Graphcalibur"},"content":"            Person personToArchive \u003d filteredPersons.get(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":289,"author":{"gitId":"albertsutz"},"content":"            if (personToArchive.isArchived() \u003d\u003d isArchived) {","lastModifiedDate":"2022-04-01"},{"lineNumber":290,"author":{"gitId":"albertsutz"},"content":"                String status \u003d isArchived ? \"Archived\" : \"not Archived\";","lastModifiedDate":"2022-04-01"},{"lineNumber":291,"author":{"gitId":"albertsutz"},"content":"                throw new CommandException(\"This person is already \" + status);","lastModifiedDate":"2022-04-01"},{"lineNumber":292,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":293,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":294,"author":{"gitId":"Graphcalibur"},"content":"            addressBook.setArchivePerson(personToArchive, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"Graphcalibur"},"content":"            return personToArchive;","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"Graphcalibur"},"content":"        case COMPANY:","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredCompanies.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"Graphcalibur"},"content":"            Company companyToArchive \u003d filteredCompanies.get(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"albertsutz"},"content":"            if (companyToArchive.isArchived() \u003d\u003d isArchived) {","lastModifiedDate":"2022-04-01"},{"lineNumber":303,"author":{"gitId":"albertsutz"},"content":"                String status \u003d isArchived ? \"Archived\" : \"not Archived\";","lastModifiedDate":"2022-04-01"},{"lineNumber":304,"author":{"gitId":"albertsutz"},"content":"                throw new CommandException(\"This company is already \" + status);","lastModifiedDate":"2022-04-01"},{"lineNumber":305,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":307,"author":{"gitId":"Graphcalibur"},"content":"            addressBook.setArchiveCompany(companyToArchive, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"Graphcalibur"},"content":"            return companyToArchive;","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"Graphcalibur"},"content":"        case EVENT:","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"Graphcalibur"},"content":"            if (index \u003e\u003d filteredEvents.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"Graphcalibur"},"content":"                return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"Graphcalibur"},"content":"            Event eventToArchive \u003d filteredEvents.get(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":315,"author":{"gitId":"albertsutz"},"content":"            if (eventToArchive.isArchived() \u003d\u003d isArchived) {","lastModifiedDate":"2022-04-01"},{"lineNumber":316,"author":{"gitId":"albertsutz"},"content":"                String status \u003d isArchived ? \"Archived\" : \"not Archived\";","lastModifiedDate":"2022-04-01"},{"lineNumber":317,"author":{"gitId":"albertsutz"},"content":"                throw new CommandException(\"This event is already \" + status);","lastModifiedDate":"2022-04-01"},{"lineNumber":318,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":319,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":320,"author":{"gitId":"Graphcalibur"},"content":"            addressBook.setArchiveEvent(eventToArchive, isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":321,"author":{"gitId":"Graphcalibur"},"content":"            return eventToArchive;","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"Graphcalibur"},"content":"        default:","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"Graphcalibur"},"content":"            return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":339,"author":{"gitId":"albertsutz"},"content":"    public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":344,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Company List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":346,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"Graphcalibur"},"content":"     * Returns an unmodifiable view of the filtered company list","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":350,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cCompany\u003e getFilteredCompanyList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":351,"author":{"gitId":"Graphcalibur"},"content":"        return filteredCompanies;","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":353,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":354,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"Graphcalibur"},"content":"     * Updates the filter of the filtered company list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"Graphcalibur"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":357,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":358,"author":{"gitId":"albertsutz"},"content":"    public void updateFilteredCompanyList(Predicate\u003c? super Company\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":359,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"Graphcalibur"},"content":"        filteredCompanies.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":362,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"Graphcalibur"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":364,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"Graphcalibur"},"content":"        return filteredEvents;","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":371,"author":{"gitId":"Graphcalibur"},"content":"    public void updateFilteredEventList(Predicate\u003c? super Event\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":372,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"Graphcalibur"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2022-03-28"},{"lineNumber":374,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":375,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":392,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-16"},{"lineNumber":393,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 filteredCompanies.equals(other.filteredCompanies)","lastModifiedDate":"2022-03-16"},{"lineNumber":394,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2022-03-16"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":398,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":399,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":25,"Graphcalibur":228,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"     * Updates the companyName of all persons and events whose companyName has the same name as {@code oldName} to be","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"     * {@code newName} instead.","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    void updateCompanyNames(String oldName, String newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"     * Returns an unmodifiable view of the companies list.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"     * This list will not contain any duplicate companies.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    ObservableList\u003cCompany\u003e getCompanyList();","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertsutz":3,"Graphcalibur":18,"-":16}},{"path":"src/main/java/seedu/address/model/entry/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":1,"-":56}},{"path":"src/main/java/seedu/address/model/entry/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":" * Represents a Company in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"public class Company extends Entry {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    // Identity fields","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    private final Phone phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    private final Email email;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    // Data fields","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    private final Address address;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    public Company(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, boolean isArchived) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        super(name, tags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(phone, email, address);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor if no isArchived value is provided; default value is false.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    public Company(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        this(name, phone, email, address, tags, false);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a dummy Company object with the given name.","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"     * @param companyName The name of the dummy Company.","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"     * @return The dummy Company.","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    public static Company createDummyCompany(Name companyName) {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        return new Company(companyName, new Phone(\"1234\"), new Email(\"a@a.com\"), new Address(\"a\"), new HashSet\u003c\u003e());","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        return phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        return email;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        return address;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if both entries are a company and have the same name.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"     * This defines a weaker notion of equality between two companies.","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"    public boolean isSameEntry(Entry otherEntry) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"        if (otherEntry \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        if (!(otherEntry instanceof Company)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"        return otherEntry.getName().equals(getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCompanyName(String oldName, String newName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        return;","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if both companies have the same identity and data fields.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"     * This defines a stronger notion of equality between two companies.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"        if (!(other instanceof Company)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"        Company otherPerson \u003d (Company) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"        return Objects.hash(getName(), phone, email, address, getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"                .append(getEmail())","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"                .append(getAddress());","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Graphcalibur":130}},{"path":"src/main/java/seedu/address/model/entry/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Locale;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":" * Represents an Event\u0027s Date in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"public class Date {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should follow the format YYYY-MM-DD and be a valid date.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public static final String TODAY_CONSTANT \u003d \"today\";","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        if (date.equals(TODAY_CONSTANT)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"            this.date \u003d LocalDate.now();","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        } else if (isRelativeToToday(date)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            String[] dateSplit \u003d date.split(\" \");","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            this.date \u003d LocalDate.now().plusDays(Long.parseLong(dateSplit[1]));","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if the string passed follows the form \"today [long]\".","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    public static boolean isRelativeToToday(String test) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        String[] testSplit \u003d test.split(\" \");","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        if (testSplit.length !\u003d 2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        if (!testSplit[0].equals(TODAY_CONSTANT)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        return StringUtil.isLong(testSplit[1]);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"            if (test.equals(TODAY_CONSTANT) || isRelativeToToday(test)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        return String.format(\"%d %s %d, %s\",","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"                date.getDayOfMonth(),","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"                date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH),","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"                date.getYear(),","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"                date.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.ENGLISH));","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"     * Accesses and returns the date attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"     * @return the date attribute as LocalDate","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"    public LocalDate getPure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"        return this.date;","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":56,"Graphcalibur":51}},{"path":"src/main/java/seedu/address/model/entry/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":1,"-":70}},{"path":"src/main/java/seedu/address/model/entry/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"public abstract class Entry {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"    private final Name name;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    private boolean isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     * Constructs a new Entry object given the name and tags.","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"     * @param name Name of the entry.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"     * @param tags Tags associated with the entry.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    public Entry(Name name, Set\u003cTag\u003e tags, boolean isArchived) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        return name;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"    public void setArchived(boolean newArchived) {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d newArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"    public boolean isArchived() {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        return isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"     * This defines a weaker notion of equality between two entries.","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    public abstract boolean isSameEntry(Entry otherEntry);","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"     * If the companyName of the entry matches {@code oldName}, then it is","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"     * changed to {@code newName}.","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"     * Note: This only applies for Person and Event. Company does not have any defined functionality for this.","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"    public abstract void updateCompanyName(String oldName, String newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Graphcalibur":60}},{"path":"src/main/java/seedu/address/model/entry/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"public class Event extends Entry {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    // Data fields","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    private Name companyName;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    private final Date date;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    private final Time time;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    private final Location location;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    public Event(Name name, Name companyName, Date date, Time time, Location location,","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"                 Set\u003cTag\u003e tags, boolean isArchived) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        super(name, tags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(companyName, date, time, location);","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor if no isArchived value is provided; default value is false.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    public Event(Name name, Name companyName, Date date, Time time, Location location, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        this(name, companyName, date, time, location, tags, false);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    public Name getCompanyName() {","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        return this.companyName;","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        return this.date;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    public Time getTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        return this.time;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    public Location getLocation() {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        return this.location;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"     * Returns true if both entries are an event and have the same name, company, date, and time.","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    public boolean isSameEntry(Entry otherEntry) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        if (otherEntry \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        if (!(otherEntry instanceof Event)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        Event otherEvent \u003d (Event) otherEntry;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherEvent.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime());","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCompanyName(String oldName, String newName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        if (oldName.equals(this.companyName.toString())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"            this.companyName \u003d new Name(newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherEvent.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getLocation().equals((getLocation()))","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"        // Use all Event\u0027s attributes to get a unique hashCode","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"        return Objects.hash(getName(), companyName, date, time, location, getTags());","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"                .append(getCompanyName())","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"                .append(getTime())","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"                .append(getLocation());","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":112,"Graphcalibur":25}},{"path":"src/main/java/seedu/address/model/entry/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":" * Represents a Event\u0027s Location in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"public class Location {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"            \"TODO CONSTRAINTS\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"     * TODO VALIDATION REGEX","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    //public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public final String location;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * Constructs a {@code Location}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * @param location A valid location.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    public Location(String location) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * TODO","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"        //return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        return location;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 location.equals(((Location) other).location)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        return location.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"     * Accesses and returns the location attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"     * @return the date attribute as String","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    public String getPure() {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        return this.location;","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":67}},{"path":"src/main/java/seedu/address/model/entry/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":1,"-":58}},{"path":"src/main/java/seedu/address/model/entry/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"public class Person extends Entry {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    private Name companyName;","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    public Person(Name name, Name companyName, Phone phone, Email email, Set\u003cTag\u003e tags, boolean isArchived) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"        super(name, tags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(phone, email, companyName);","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"     * Constructor if no isArchived value is provided; default value is false.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    public Person(Name name, Name companyName, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        this(name, companyName, phone, email, tags, false);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    public Name getCompanyName() {","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        return this.companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if both entries are a person and have the same name.","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"    public boolean isSameEntry(Entry otherEntry) {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        if (otherEntry \u003d\u003d this) {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        if (!(otherEntry instanceof Person)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        return otherEntry.getName().equals(getName());","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCompanyName(String oldName, String newName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        if (oldName.equals(this.companyName.toString())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"            this.companyName \u003d new Name(newName);","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 otherPerson.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"        return Objects.hash(getName(), phone, email, companyName, getTags());","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"                .append(getCompanyName())","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"                .append(getEmail());","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":34,"-":89}},{"path":"src/main/java/seedu/address/model/entry/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Graphcalibur":1,"-":52}},{"path":"src/main/java/seedu/address/model/entry/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":" * Represents an Event\u0027s Time in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"public class Time {","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should follow the 24-hour format HH:MM and be a valid time.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    public final LocalTime time;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"     * @param time A valid time.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    public Time(String time) {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"        this.time \u003d LocalTime.parse(time);;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"            LocalTime.parse(test);","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        return time.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        return time.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"     * Accesses and returns the time attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"     * @return the time attribute as LocalTime","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    public LocalTime getPure() {","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        return this.time;","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":55,"Graphcalibur":13}},{"path":"src/main/java/seedu/address/model/entry/UniqueEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.exceptions.EntryNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":" * A list of entries that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":" * An entry is considered unique by comparing using {@code Entry#isSameEntry(Entry)}. As such, adding and updating of","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":" * entries uses Entry#isSameEntry(Entry) for equality so as to ensure that the entry being added or updated is","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":" * unique in terms of identity in the UniqueEntryList. However, the removal of an entry uses Entry#equals(Object) so","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":" * as to ensure that the entry with exactly the same fields will be removed.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":" *","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":" * @see Entry#isSameEntry(Entry)","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"public class UniqueEntryList\u003cT extends Entry\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if the list contains an equivalent entry as the given argument.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEntry);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"     * Adds an entry to the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"     * The entry must not already exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the entry {@code target} in the list with {@code editedEntry}.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"     * The entry identity of {@code editedEntry} must not be the same as another existing entry in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"    public void setEntry(T target, T editedEntry) {","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(target, editedEntry);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        if (!target.isSameEntry(editedEntry) \u0026\u0026 contains(editedEntry)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"        if (target.isArchived()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"            editedEntry.setArchived(true);","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        internalList.set(index, editedEntry);","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"     * Removes the equivalent entry from the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"     * The entry must exist in the list.","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"     * Returns the element in the list that is equal to {@code toFind}, if it exists.","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"    public T find(T toFind) {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(toFind);","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"            T entry \u003d internalList.get(i);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"            if (entry.equals(toFind)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"                return entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"        return null;","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"     * Archives the equivalent entry from the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"     * The entry must exist in the list.","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"    public void setArchived(T toArchive, boolean isArchived) {","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(toArchive);","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"        T match \u003d find(toArchive);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"        if (match \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"Graphcalibur"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"            match.setArchived(isArchived);","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"    public void setEntries(UniqueEntryList\u003cT\u003e replacement) {","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"     * Replaces the contents of this list with {@code entries}.","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"Graphcalibur"},"content":"     * {@code entries} must not contain duplicate entries.","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"    public void setEntries(List\u003cT\u003e entries) {","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"        requireAllNonNull(entries);","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"Graphcalibur"},"content":"        if (!entriesAreUnique(entries)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"Graphcalibur"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"Graphcalibur"},"content":"        internalList.setAll(entries);","lastModifiedDate":"2022-03-11"},{"lineNumber":131,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"     * Updates the companyName of entries whose companyName matches {@code oldName} to be {@code newName}.","lastModifiedDate":"2022-03-27"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"     * Note: This function should only be called for Person and Event lists.","lastModifiedDate":"2022-03-27"},{"lineNumber":136,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"    public void updateCompanyNames(String oldName, String newName) {","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"Graphcalibur"},"content":"        internalList.forEach(entry -\u003e entry.updateCompanyName(oldName, newName));","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"Graphcalibur"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-11"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":152,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"Graphcalibur"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-03-11"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"                || (other instanceof UniqueEntryList // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"                        \u0026\u0026 internalList.equals(((UniqueEntryList\u003cT\u003e) other).internalList));","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"Graphcalibur"},"content":"     * Returns true if {@code entries} contains only unique entries.","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"Graphcalibur"},"content":"    private boolean entriesAreUnique(List\u003cT\u003e entries) {","lastModifiedDate":"2022-03-11"},{"lineNumber":170,"author":{"gitId":"Graphcalibur"},"content":"        for (int i \u003d 0; i \u003c entries.size() - 1; i++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"            for (int j \u003d i + 1; j \u003c entries.size(); j++) {","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"                if (entries.get(i).isSameEntry(entries.get(j))) {","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"                    return false;","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"                }","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"Graphcalibur"},"content":"        return true;","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"albertsutz":3,"Graphcalibur":176}},{"path":"src/main/java/seedu/address/model/entry/exceptions/DuplicateEntryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry.exceptions;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":" * Signals that the operation will result in duplicate Entries (Entries are considered duplicates if they have the same","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"public class DuplicateEntryException extends RuntimeException {","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"    public DuplicateEntryException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"        super(\"Operation would result in duplicate entries\");","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Graphcalibur":5,"-":6}},{"path":"src/main/java/seedu/address/model/entry/exceptions/EntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry.exceptions;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"public class EntryNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Graphcalibur":2,"-":4}},{"path":"src/main/java/seedu/address/model/entry/predicate/CompanyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * This class is an abstraction of combining {@code NameContainsKeywords}, {@code TagContainsKeywords}.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" * In particular, it tests that a {@code Company}\u0027s  attributes matches any of the keywords given by user.","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * Acts the main logic part for checking whether a Company should be displayed for findc command","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"public class CompanyContainsKeywordsPredicate implements Predicate\u003cCompany\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    private final Predicate\u003cEntry\u003e searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     * Main Constructor for CompanyContainsKeywordsPredicate","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"     * @param nameKeywords user input to search company name","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * @param tagKeywords user input to search company tag","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    public CompanyContainsKeywordsPredicate(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"                                          List\u003cString\u003e tagKeywords, Predicate\u003cEntry\u003e searchTypePredicate) {","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        this.searchTypePredicate \u003d searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"     * It must be noted that the test function is implemented differently than the usual (ANY)ContainsKeywordsPredicate.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"     * In particular, it checks name and tag keywords. If the keyword is not available (not given by user), then","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     * it will automatically be removed from consideration when testing an company.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Company company) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        boolean correctName;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        boolean correctTag;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        correctName \u003d invalidKeywords(nameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"                || new NameContainsKeywordsPredicate(nameKeywords).test(company);","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        correctTag \u003d invalidKeywords(tagKeywords) || new TagContainsKeywordsPredicate(tagKeywords).test(company);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        return correctName \u0026\u0026 correctTag \u0026\u0026 searchTypePredicate.test(company);","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof CompanyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 nameKeywords.equals(((CompanyContainsKeywordsPredicate) other).nameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 tagKeywords.equals(((CompanyContainsKeywordsPredicate) other).tagKeywords)","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 searchTypePredicate.equals(((CompanyContainsKeywordsPredicate) other).searchTypePredicate));","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"     * Returns whether the user input inside the keywords is empty. In particular, if it consists of 1 element of","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"     * empty string.","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    private boolean invalidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        return keywords.size() \u003d\u003d 1 \u0026\u0026 keywords.get(0) \u003d\u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"albertsutz":59,"Graphcalibur":7}},{"path":"src/main/java/seedu/address/model/entry/predicate/CompanyNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * Tests that a {@code Event}\u0027s or {@code Person}\u0027s  {@code companyName} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"public class CompanyNameContainsKeywordsPredicate implements Predicate\u003cEntry\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    public CompanyNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Entry entry) {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"        if (entry instanceof Event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"            Event event \u003d (Event) entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"            return keywords.stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getCompanyName().fullName, keyword));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"        if (entry instanceof Person) {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            Person person \u003d (Person) entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getCompanyName().fullName, keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof CompanyNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 keywords.equals(((CompanyNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"albertsutz":43}},{"path":"src/main/java/seedu/address/model/entry/predicate/DateWithinKeyDatesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":" * Tests that a {@code Event}\u0027s  {@code Date} matches any of the keywords given.","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"public class DateWithinKeyDatesPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"    private LocalDate startDate \u003d LocalDate.MIN;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    private LocalDate endDate \u003d LocalDate.MAX;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a DateWithinKeyDatesPredicate object.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    public DateWithinKeyDatesPredicate(Date startDate, Date endDate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"        if (startDate !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"            this.startDate \u003d startDate.getPure();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"        if (endDate !\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"            this.endDate \u003d endDate.getPure();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        LocalDate eventDate \u003d event.getDate().getPure();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        return (eventDate.isEqual(startDate) || eventDate.isAfter(startDate))","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 (eventDate.isEqual(endDate) || eventDate.isBefore(endDate));","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"                || (other instanceof DateWithinKeyDatesPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 startDate.equals(((DateWithinKeyDatesPredicate) other).startDate)","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 endDate.equals(((DateWithinKeyDatesPredicate) other).endDate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"Graphcalibur":44}},{"path":"src/main/java/seedu/address/model/entry/predicate/EventContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" * This class is an abstraction of combining {@code NameContainsKeywords}, {@code CompanyNameContainsKeywords},","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * {@code DateContainsKeywords}, {@code TimeContainsKeywords}, {@code LocationContainsKeywords}","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * , {@code TagContainsKeywords}.","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" * In particular, it tests that a {@code Event}\u0027s  attributes matches any of the keywords given by user.","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":" * Acts the main logic part for checking whether an Event should be displayed for finde command","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"public class EventContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e companyKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    private final Date startDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    private final Date endDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e timeKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e locationKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private final Predicate\u003cEntry\u003e searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * Main Constructor for EventContainsKeywordsPredicate","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     * @param nameKeywords user input to search event name","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"     * @param companyKeywords user input to search event companyName","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"     * @param timeKeywords user input to search event time","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"     * @param locationKeywords user input to search event location","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"     * @param tagKeywords user input to search event tag","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    public EventContainsKeywordsPredicate(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"                                          List\u003cString\u003e companyKeywords,","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"                                          Date startDate,","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"                                          Date endDate,","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"                                          List\u003cString\u003e timeKeywords,","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"                                          List\u003cString\u003e locationKeywords,","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"                                          List\u003cString\u003e tagKeywords,","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"                                          Predicate\u003cEntry\u003e searchTypePredicate) {","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        this.companyKeywords \u003d companyKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        this.timeKeywords \u003d timeKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        this.locationKeywords \u003d locationKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        this.searchTypePredicate \u003d searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"     * It must be noted that the test function is implemented differently than the usual (ANY)ContainsKeywordsPredicate.","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * In particular, it checks all keywords available. If the keyword is not available (not given by user), then","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     * it will automatically be removed from consideration when testing an event.","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        boolean correctName;","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        boolean correctCompany;","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        boolean correctDate;","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"        boolean correctTime;","lastModifiedDate":"2022-03-27"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"        boolean correctLocation;","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"        boolean correctTag;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"        correctName \u003d invalidKeywords(nameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"                || new NameContainsKeywordsPredicate(nameKeywords).test(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        correctCompany \u003d invalidKeywords(companyKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"                || new CompanyNameContainsKeywordsPredicate(companyKeywords).test(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        correctDate \u003d (startDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null)","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"                || new DateWithinKeyDatesPredicate(startDate, endDate).test(event);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        correctTime \u003d invalidKeywords(timeKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"                || new TimeContainsKeywordsPredicate(timeKeywords).test(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        correctLocation \u003d invalidKeywords(locationKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"                || new LocationContainsKeywordsPredicate(locationKeywords).test(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        correctTag \u003d invalidKeywords(tagKeywords) || new TagContainsKeywordsPredicate(tagKeywords).test(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        return correctName \u0026\u0026 correctCompany \u0026\u0026 correctDate \u0026\u0026 correctTime \u0026\u0026 correctLocation \u0026\u0026 correctTag","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 searchTypePredicate.test(event);","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof EventContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 nameKeywords.equals(((EventContainsKeywordsPredicate) other).nameKeywords)","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 companyKeywords.equals(((EventContainsKeywordsPredicate) other).companyKeywords)","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 startDate.equals(((EventContainsKeywordsPredicate) other).startDate)","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 endDate.equals(((EventContainsKeywordsPredicate) other).endDate)","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 timeKeywords.equals(((EventContainsKeywordsPredicate) other).timeKeywords)","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 locationKeywords.equals(((EventContainsKeywordsPredicate) other).locationKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 tagKeywords.equals(((EventContainsKeywordsPredicate) other).tagKeywords)","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 searchTypePredicate.equals(((EventContainsKeywordsPredicate) other).searchTypePredicate));","lastModifiedDate":"2022-04-01"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"     * Returns whether the user input inside the keywords is empty. In particular, if it consists of 1 element of","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"     * empty string.","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"    private boolean invalidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"        return keywords.size() \u003d\u003d 1 \u0026\u0026 keywords.get(0) \u003d\u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"albertsutz":86,"Graphcalibur":20}},{"path":"src/main/java/seedu/address/model/entry/predicate/LocationContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Tests that a {@code Event}\u0027s  {@code Location} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class LocationContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    public LocationContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getLocation().getPure(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof LocationContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 keywords.equals(((LocationContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"albertsutz":32}},{"path":"src/main/java/seedu/address/model/entry/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Tests that a {@code Entry}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEntry\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Entry entry) {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(entry.getName().fullName, keyword));","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"albertsutz":6,"-":26}},{"path":"src/main/java/seedu/address/model/entry/predicate/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * This class is an abstraction of combining {@code NameContainsKeywords}, {@code CompanyContainsKeywords},","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" * {@code TagContainsKeywords}. In particular, it tests that a {@code Person}\u0027s  attributes matches any of the","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":" * keywords given by user. Acts the main logic part for checking whether a Company should be displayed","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * for findp command","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e companyNameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    private final Predicate\u003cEntry\u003e searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     * Main Constructor for CompanyContainsKeywordsPredicate","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * @param nameKeywords user input to search person\u0027s name","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     * @param companyNameKeywords user input to search person\u0027s companyName","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"     * @param tagKeywords user input to search person\u0027s tag","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    public PersonContainsKeywordsPredicate(List\u003cString\u003e nameKeywords, List\u003cString\u003e companyNameKeywords,","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"                                            List\u003cString\u003e tagKeywords, Predicate\u003cEntry\u003e searchTypePredicate) {","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"        this.companyNameKeywords \u003d companyNameKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        this.searchTypePredicate \u003d searchTypePredicate;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * It must be noted that the test function is implemented differently than the usual (ANY)ContainsKeywordsPredicate.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     * In particular, it checks name, companyName, and tag keywords.","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     * If the keyword is not available (not given by user), then","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"     * it will automatically be removed from consideration when testing an company.","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        boolean correctName;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        boolean correctCompanyName;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        boolean correctTag;","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        correctName \u003d invalidKeywords(nameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"                || new NameContainsKeywordsPredicate(nameKeywords).test(person);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        correctCompanyName \u003d invalidKeywords(companyNameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"                || new CompanyNameContainsKeywordsPredicate(companyNameKeywords).test(person);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        correctTag \u003d invalidKeywords(tagKeywords) || new TagContainsKeywordsPredicate(tagKeywords).test(person);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        return correctName \u0026\u0026 correctCompanyName \u0026\u0026 correctTag \u0026\u0026 searchTypePredicate.test(person);","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof PersonContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 nameKeywords.equals(((PersonContainsKeywordsPredicate) other).nameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 companyNameKeywords.equals(((PersonContainsKeywordsPredicate) other).companyNameKeywords)","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 tagKeywords.equals(((PersonContainsKeywordsPredicate) other).tagKeywords)","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 searchTypePredicate.equals(((PersonContainsKeywordsPredicate) other).searchTypePredicate));","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"     * Returns whether the user input inside the keywords is empty. In particular, if it consists of 1 element of","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"     * empty string.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"    private boolean invalidKeywords(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"        return keywords.size() \u003d\u003d 1 \u0026\u0026 keywords.get(0) \u003d\u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"albertsutz":68,"Graphcalibur":7}},{"path":"src/main/java/seedu/address/model/entry/predicate/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Tests that a {@code Entry}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cEntry\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Entry entry) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"                .anyMatch(keyword -\u003e entry.getTags().stream().map(tag -\u003e tag.getPure().toLowerCase())","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"                        .collect(Collectors.toSet())","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"                        .contains(keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"albertsutz":34}},{"path":"src/main/java/seedu/address/model/entry/predicate/TimeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.model.entry.predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":" * Tests that a {@code Event}\u0027s  {@code Time} matches any of the keywords given.","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"public class TimeContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"    public TimeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getTime().getPure().toString(), keyword));","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"                || (other instanceof TimeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 keywords.equals(((TimeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"albertsutz":9,"-":23}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"     * Accesses and returns the tagName attribute","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * @return the time attribute as String","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    public String getPure() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        return tagName;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"albertsutz":8,"-":54}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Location;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Time;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Name(\"ABCDE\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"alexyeoh@example.com\"), getTagSet(\"hr\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"Bernice Yu\"), new Name(\"DBSSS\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"berniceyu@example.com\"), getTagSet(\"senior\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Name(\"SGShop\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"charlotte@example.com\"), getTagSet(\"hr\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"David Li\"), new Name(\"ABCDE\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"lidavid@example.com\"), getTagSet(\"hr\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Name(\"SGShop\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"irfan@example.com\"), getTagSet(\"senior\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Name(\"DBSSS\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"                    new Email(\"royb@example.com\"), getTagSet(\"hr\"))","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"        };","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    public static Company[] getSampleCompanies() {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        return new Company[] {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"            new Company(new Name(\"ABCDE\"), new Phone(\"12345678\"), new Email(\"hr@ABCDE.com\"),","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"                    new Address(\"123 Street Singapore\"), getTagSet(\"OA\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"            new Company(new Name(\"DBSSS\"), new Phone(\"23859694\"), new Email(\"hr@DBSSS.com\"),","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"                    new Address(\"456 Street Singapore\"), getTagSet(\"interview\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"            new Company(new Name(\"SGShop\"), new Phone(\"58496034\"), new Email(\"hr@SGShop.com\"),","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"                    new Address(\"789 Street Singapore\"), getTagSet(\"applied\"))","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        };","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        return new Event[] {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"            new Event(new Name(\"Interview\"), new Name(\"SGShop\"), new Date(\"2022-09-16\"), new Time(\"13:30\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"                    new Location(\"zoom\"), getTagSet(\"technical\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"            new Event(new Name(\"Interview\"), new Name(\"DBSSS\"), new Date(\"2022-10-13\"), new Time(\"12:30\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"                    new Location(\"zoom\"), getTagSet(\"behavioural\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"            new Event(new Name(\"Online Assessment\"), new Name(\"DBSSS\"), new Date(\"2022-04-23\"), new Time(\"14:30\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"                    new Location(\"hackerrank\"), getTagSet(\"OOP\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"            new Event(new Name(\"Online Assessment\"), new Name(\"SGShop\"), new Date(\"2022-05-16\"), new Time(\"15:30\"),","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"                    new Location(\"hackereartch\"), getTagSet(\"datastructure\")),","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        for (Company sampleCompany : getSampleCompanies()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"            sampleAb.addCompany(sampleCompany);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"albertsutz":46,"Graphcalibur":6,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCompany.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"public class JsonAdaptedCompany {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Company\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    private final String name;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    private final String phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    private final String email;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private final String address;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    private final boolean isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    public JsonAdaptedCompany(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"     * Converts a given {@code Company} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"    public JsonAdaptedCompany(Company source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d source.isArchived();","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"     * Converts this Jackson-friendly adapted company object into the model\u0027s {@code Company} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted company.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"    public Company toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"        final List\u003cTag\u003e companyTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"            companyTags.add(tag.toModelType());","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(companyTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"        return new Company(modelName, modelPhone, modelEmail, modelAddress, modelTags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"Graphcalibur":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Date;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Location;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Time;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    private final String name;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    private final String company;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    private final String date;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    private final String time;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    private final String location;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    private final boolean isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given Event details.","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"company\") String company,","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"                             @JsonProperty(\"location\") String location,","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        company \u003d source.getCompanyName().fullName;","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"        date \u003d source.getDate().date.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"        time \u003d source.getTime().time.toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        location \u003d source.getLocation().location;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d source.isArchived();","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d NAME \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Company \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Company\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"        if (company.equals(\"\")) {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(\"Company name cannot be blank\");","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"        final Name modelCompany \u003d new Name(company);","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"albertsutz"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Date \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"albertsutz"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Time \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"albertsutz"},"content":"        final Time modelTime \u003d new Time(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Location \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"        return new Event(modelName, modelCompany, modelDate, modelTime, modelLocation, modelTags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"albertsutz":123,"Graphcalibur":8}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    private final String companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    private final boolean isArchived;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"companyName\") String companyName,","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        companyName \u003d source.getCompanyName().fullName;","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"        isArchived \u003d source.isArchived();","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Graphcalibur"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        if (!Name.isValidName(companyName)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"Graphcalibur"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        final Name modelCompanyName \u003d new Name(companyName);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"        return new Person(modelName, modelCompanyName, modelPhone, modelEmail, modelTags, isArchived);","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Graphcalibur":18,"-":93}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    private final List\u003cJsonAdaptedCompany\u003e companies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons, companies, and events.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                                       @JsonProperty(\"companies\") List\u003cJsonAdaptedCompany\u003e companies,","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"        this.companies.addAll(companies);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        companies.addAll(source.getCompanyList().stream().map(JsonAdaptedCompany::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        for (JsonAdaptedCompany jsonAdaptedCompany : companies) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"            Company company \u003d jsonAdaptedCompany.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"            if (addressBook.hasCompany(company)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"            addressBook.addCompany(company);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"albertsutz":13,"Graphcalibur":19,"-":57}},{"path":"src/main/java/seedu/address/ui/CompanyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":" * An UI component that displays information of a {@code Company}.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"public class CompanyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    private static final String FXML \u003d \"CompanyListCard.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    public final Company company;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    private Label name;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    private Label id;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    private Label phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    private Label address;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"    private Label email;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    private FlowPane archive;","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a {@code CompanyCard} with the given {@code Company} and index to display.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyCard(Company company, int displayedIndex) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        super(FXML);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        this.company \u003d company;","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"        name.setText(company.getName().fullName);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        phone.setText(company.getPhone().value);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        address.setText(company.getAddress().value);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        email.setText(company.getEmail().value);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        if (company.isArchived()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"            archive.getChildren().add(new Label(\"ARCHIVED\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        company.getTags().stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        if (!(other instanceof CompanyCard)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"        // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"        CompanyCard card \u003d (CompanyCard) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"                \u0026\u0026 company.equals(card.company);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"albertsutz":5,"Graphcalibur":77}},{"path":"src/main/java/seedu/address/ui/CompanyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":" * Panel containing the list of companies.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"public class CompanyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    private static final String FXML \u003d \"EntryListPanel.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    private static final String LIST_TITLE \u003d \"Companies\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CompanyListPanel.class);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    private Label listTitle;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private ListView\u003cCompany\u003e entryListView;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a {@code CompanyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyListPanel(ObservableList\u003cCompany\u003e companyList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        super(FXML);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"        listTitle.setText(LIST_TITLE);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        entryListView.setItems(companyList);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        entryListView.setCellFactory(listView -\u003e new CompanyListViewCell());","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Company} using a {@code CompanyCard}.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    class CompanyListViewCell extends ListCell\u003cCompany\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"        protected void updateItem(Company company, boolean empty) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"            super.updateItem(company, empty);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"            if (empty || company \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"                setText(null);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"                setGraphic(new CompanyCard(company, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"mradhyaf":6,"Graphcalibur":49}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"    public final Event event;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"    private Label name;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"    private Label id;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    private Label company;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    private Label date;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"    private Label time;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    private Label locationName;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"    private FlowPane archive;","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        company.setText(event.getCompanyName().fullName);","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        date.setText(event.getDate().toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        time.setText(event.getTime().toString());","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        locationName.setText(event.getLocation().location);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        if (event.isArchived()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"            archive.getChildren().add(new Label(\"ARCHIVED\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        event.getTags().stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"        // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"albertsutz":82,"Graphcalibur":3}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":" * Panel containing the list of events.","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    private static final String FXML \u003d \"EntryListPanel.fxml\";","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    private static final String LIST_TITLE \u003d \"Events\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    private Label listTitle;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"    private ListView\u003cEvent\u003e entryListView;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        super(FXML);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"        listTitle.setText(LIST_TITLE);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"        entryListView.setItems(eventList);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"        entryListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"albertsutz"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"                setText(null);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"mradhyaf":10,"albertsutz":45}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w14-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"albertsutz":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    private CompanyListPanel companyListPanel;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"    private StackPane entryListPanelPlaceholder;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"     * Fills up all the placeholders of this window for the first initialization","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"     * Always starts with Person first.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"Graphcalibur"},"content":"        companyListPanel \u003d new CompanyListPanel(logic.getFilteredCompanyList());","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"Graphcalibur"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"albertsutz"},"content":"        entryListPanelPlaceholder.getChildren().add(companyListPanel.getRoot());","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"     * Change the view to show the Person list.","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"    void fillPerson() {","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"Graphcalibur"},"content":"        entryListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"        entryListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"albertsutz"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"     * Change the view to show the Company list.","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"    void fillCompany() {","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"        entryListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"        entryListPanelPlaceholder.getChildren().add(companyListPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"     * Change the view to show the Event list.","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"albertsutz"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"albertsutz"},"content":"    void fillEvent() {","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"        entryListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"        entryListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyListPanel getCompanyListPanel() {","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"        return companyListPanel;","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"albertsutz"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"albertsutz"},"content":"        return eventListPanel;","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"albertsutz"},"content":"            if (commandResult.isShowPerson()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":219,"author":{"gitId":"albertsutz"},"content":"                fillPerson();","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":221,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"            if (commandResult.isShowCompany()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":223,"author":{"gitId":"Graphcalibur"},"content":"                fillCompany();","lastModifiedDate":"2022-03-16"},{"lineNumber":224,"author":{"gitId":"Graphcalibur"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":225,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":226,"author":{"gitId":"albertsutz"},"content":"            if (commandResult.isShowEvent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"albertsutz"},"content":"                fillEvent();","lastModifiedDate":"2022-03-16"},{"lineNumber":228,"author":{"gitId":"albertsutz"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":229,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"albertsutz":26,"Graphcalibur":24,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"    private Label companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    private FlowPane archive;","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        companyName.setText(person.getCompanyName().fullName);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"albertsutz"},"content":"        if (person.isArchived()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"albertsutz"},"content":"            archive.getChildren().add(new Label(\"ARCHIVED\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"albertsutz":5,"Graphcalibur":4,"-":73}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"    private static final String FXML \u003d \"EntryListPanel.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    private static final String LIST_TITLE \u003d \"Contacts\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"    private Label listTitle;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private ListView\u003cPerson\u003e entryListView;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"        listTitle.setText(LIST_TITLE);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        entryListView.setItems(personList);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        entryListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"mradhyaf":5,"Graphcalibur":5,"-":45}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003cStackPane styleClass\u003d\"bordered-rounded-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"mradhyaf":5,"-":8}},{"path":"src/main/resources/view/CompanyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"      \u003cFlowPane fx:id\u003d\"archive\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":36}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"albertsutz"},"content":"    -fx-background-color: #AAFF00;","lastModifiedDate":"2022-04-01"},{"lineNumber":348,"author":{"gitId":"albertsutz"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-04-01"},{"lineNumber":349,"author":{"gitId":"albertsutz"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-04-01"},{"lineNumber":350,"author":{"gitId":"albertsutz"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-04-01"},{"lineNumber":351,"author":{"gitId":"albertsutz"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-04-01"},{"lineNumber":352,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":353,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":354,"author":{"gitId":"albertsutz"},"content":"#tags {","lastModifiedDate":"2022-04-01"},{"lineNumber":355,"author":{"gitId":"albertsutz"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-04-01"},{"lineNumber":356,"author":{"gitId":"albertsutz"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-04-01"},{"lineNumber":357,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":358,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":359,"author":{"gitId":"albertsutz"},"content":"#archive .label {","lastModifiedDate":"2022-04-01"},{"lineNumber":360,"author":{"gitId":"albertsutz"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":361,"author":{"gitId":"albertsutz"},"content":"    -fx-background-color: #FFBF00;","lastModifiedDate":"2022-04-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"albertsutz":15,"-":351}},{"path":"src/main/resources/view/EntryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"\u003cVBox styleClass\u003d\"rounded-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"    \u003cVBox styleClass\u003d\"rounded-header\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        \u003cLabel styleClass\u003d\"title\" fx:id\u003d\"listTitle\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"    \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"        \u003cListView fx:id\u003d\"entryListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"mradhyaf":12,"Graphcalibur":1,"-":6}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"albertsutz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"albertsutz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"albertsutz"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"albertsutz"},"content":"            \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$company\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"            \u003cLabel fx:id\u003d\"locationName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$locationName\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"            \u003cFlowPane fx:id\u003d\"archive\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"albertsutz":38}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"    -fx-background: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mradhyaf":1,"-":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mradhyaf"},"content":".header {","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #2E3440;","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":".header .title {","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-weight: bolder;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #ECEFF4;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":".rounded-header {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #2E3440;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 5 5 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"mradhyaf"},"content":".rounded-header .title {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #ECEFF4;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":".body {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #ECEFF4;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":".rounded-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":".bordered-rounded-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-color: #4C566A;","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":".label {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":".label-bright {","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":".label-header {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"mradhyaf"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":".text-field {","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"mradhyaf"},"content":".list-view {","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"mradhyaf"},"content":".list-cell {","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"mradhyaf"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"mradhyaf"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"mradhyaf"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: derive(#D8DEE9, 10%);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"mradhyaf"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"mradhyaf"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #8FBCBB;","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"mradhyaf"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"mradhyaf"},"content":".list-cell .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #2E3440;","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"mradhyaf"},"content":".cell_big_label {","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"mradhyaf"},"content":".cell_small_label {","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"mradhyaf"},"content":".result-display {","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"mradhyaf"},"content":".result-display .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"mradhyaf"},"content":".status-bar {","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #2E3440;","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"mradhyaf"},"content":".status-bar .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #ECEFF4;","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"mradhyaf"},"content":"    -fx-pref-height: 20px;","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"mradhyaf"},"content":".context-menu {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #4C566A;","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"mradhyaf"},"content":".context-menu .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #2E3440;","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"mradhyaf"},"content":".menu-bar {","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"mradhyaf"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #ECEFF4;","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"mradhyaf"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"mradhyaf"},"content":".menu .left-container {","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"mradhyaf"},"content":"/*","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"mradhyaf"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"mradhyaf"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"mradhyaf"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"mradhyaf"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"mradhyaf"},"content":".button {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"mradhyaf"},"content":".button:hover {","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"mradhyaf"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"mradhyaf"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"mradhyaf"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"mradhyaf"},"content":".button:focused {","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"mradhyaf"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"mradhyaf"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"mradhyaf"},"content":".button:default {","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"mradhyaf"},"content":".button:default:hover {","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"mradhyaf"},"content":".dialog-pane {","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"mradhyaf"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"mradhyaf"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"mradhyaf"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"mradhyaf"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-29"},{"lineNumber":226,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"mradhyaf"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":230,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":231,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":232,"author":{"gitId":"mradhyaf"},"content":".scroll-bar {","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #4C566A;","lastModifiedDate":"2022-03-29"},{"lineNumber":234,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":235,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":236,"author":{"gitId":"mradhyaf"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-03-29"},{"lineNumber":237,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: #D8DEE9;","lastModifiedDate":"2022-03-29"},{"lineNumber":238,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2022-03-29"},{"lineNumber":239,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":240,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":241,"author":{"gitId":"mradhyaf"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-03-29"},{"lineNumber":242,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":243,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":244,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":245,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":246,"author":{"gitId":"mradhyaf"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-03-29"},{"lineNumber":247,"author":{"gitId":"mradhyaf"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":249,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":250,"author":{"gitId":"mradhyaf"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-03-29"},{"lineNumber":251,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-03-29"},{"lineNumber":252,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"mradhyaf"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"mradhyaf"},"content":"#cardPane {","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":261,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":262,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"mradhyaf"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"mradhyaf"},"content":"#commandTextField {","lastModifiedDate":"2022-03-29"},{"lineNumber":269,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":271,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":272,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"mradhyaf"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"mradhyaf"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"mradhyaf"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"mradhyaf"},"content":"#tags {","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"mradhyaf"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"mradhyaf"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"mradhyaf"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"mradhyaf"},"content":"#tags .label {","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"mradhyaf"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"albertsutz"},"content":"    -fx-background-color: #AAFF00;","lastModifiedDate":"2022-04-01"},{"lineNumber":295,"author":{"gitId":"albertsutz"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-04-01"},{"lineNumber":296,"author":{"gitId":"albertsutz"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-04-01"},{"lineNumber":297,"author":{"gitId":"albertsutz"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-04-01"},{"lineNumber":298,"author":{"gitId":"albertsutz"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-04-01"},{"lineNumber":299,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":300,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":301,"author":{"gitId":"albertsutz"},"content":"#tags {","lastModifiedDate":"2022-04-01"},{"lineNumber":302,"author":{"gitId":"albertsutz"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-04-01"},{"lineNumber":303,"author":{"gitId":"albertsutz"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-04-01"},{"lineNumber":304,"author":{"gitId":"albertsutz"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":305,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"albertsutz"},"content":"#archive .label {","lastModifiedDate":"2022-04-01"},{"lineNumber":307,"author":{"gitId":"albertsutz"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":308,"author":{"gitId":"albertsutz"},"content":"    -fx-background-color: #FFBF00;","lastModifiedDate":"2022-04-01"},{"lineNumber":309,"author":{"gitId":"mradhyaf"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-29"},{"lineNumber":310,"author":{"gitId":"mradhyaf"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":311,"author":{"gitId":"mradhyaf"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-29"},{"lineNumber":312,"author":{"gitId":"mradhyaf"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-29"},{"lineNumber":313,"author":{"gitId":"mradhyaf"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"mradhyaf":298,"albertsutz":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mradhyaf"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"InternBuddy\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"mradhyaf"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"mradhyaf"},"content":"        \u003cImage url\u003d\"@/images/internbuddy_logo.png\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"mradhyaf"},"content":"                \u003cURL value\u003d\"@LightTheme.css\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"mradhyaf"},"content":"            \u003cVBox styleClass\u003d\"body\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"mradhyaf"},"content":"                \u003cHBox alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"header\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"mradhyaf"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"mradhyaf"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"mradhyaf"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"mradhyaf"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"mradhyaf"},"content":"                        \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"mradhyaf"},"content":"                            \u003cimage\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"mradhyaf"},"content":"                                \u003cImage url\u003d\"@../images/internbuddy_logo_32.png\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"mradhyaf"},"content":"                            \u003c/image\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"mradhyaf"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"mradhyaf"},"content":"                        \u003cLabel styleClass\u003d\"title\" text\u003d\"InternBuddy\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"mradhyaf"},"content":"                        \u003cMenuBar fx:id\u003d\"menuBar\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                                \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"mradhyaf"},"content":"                                \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"mradhyaf"},"content":"                                          text\u003d\"Help\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"mradhyaf"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"mradhyaf"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"mradhyaf"},"content":"                \u003cVBox fx:id\u003d\"entryList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"body\"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"mradhyaf"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"mradhyaf"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"mradhyaf"},"content":"                    \u003cStackPane fx:id\u003d\"entryListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"mradhyaf"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"mradhyaf"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"200\" minHeight\u003d\"50\" prefHeight\u003d\"150\"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"mradhyaf"},"content":"                           styleClass\u003d\"body\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"mradhyaf"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"mradhyaf"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"body\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"mradhyaf"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"mradhyaf"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"mradhyaf":39,"albertsutz":2,"-":31}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"      \u003cLabel fx:id\u003d\"companyName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"      \u003cFlowPane fx:id\u003d\"archive\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":1,"-":35}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"mradhyaf"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"rounded-pane\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"mradhyaf"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"mradhyaf"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"mradhyaf"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"mradhyaf":5,"-":8}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"mradhyaf"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mradhyaf"},"content":"\u003cHBox styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"mradhyaf"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"mradhyaf":3,"-":5}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.testutil.TypicalPersons.DBSSS;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.AddCompanyCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.testutil.CompanyBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        String deleteCommand \u003d DeleteCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"        String listPersonCommand \u003d ListPersonCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandSuccess(listPersonCommand, String.format(ListPersonCommand.MESSAGE_SUCCESS, \" unarchived\"), model);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"        String addCompanyCommand \u003d AddCompanyCommand.COMMAND_WORD + \" n/DBSSS \" + \"p/91123671 \" + \"e/dbsss@example.com \"","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"                + \"a/14 Jurong Street\";","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        Company expectedCompany \u003d new CompanyBuilder(DBSSS).withTags().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"        expectedModel.addCompany(expectedCompany);","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandFailure(addCompanyCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":14,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"albertsutz":5,"Graphcalibur":1,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Entry;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"albertsutz"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"albertsutz"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"Graphcalibur"},"content":"        public void addCompany(Company company) {","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"Graphcalibur"},"content":"        public boolean hasCompany(Name companyName) {","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"Graphcalibur"},"content":"            return true;","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"Graphcalibur"},"content":"        }; // Leave it this way for now","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"        public boolean hasCompany(Company company) {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"albertsutz"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"        public void deleteCompany(Company target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"albertsutz"},"content":"        public void addEvent(Event target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"Graphcalibur"},"content":"        public void setCompany(Company target, Company editedCompany) {","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"albertsutz"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"Graphcalibur"},"content":"        public void updateCurrentlyDisplayedList(Predicate\u003cEntry\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"Graphcalibur"},"content":"        public void showPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"Graphcalibur"},"content":"        public void showCompanyList(Predicate\u003c? super Company\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":204,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":205,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":206,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":207,"author":{"gitId":"Graphcalibur"},"content":"        public void showEventList(Predicate\u003c? super Event\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":209,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":210,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":217,"author":{"gitId":"albertsutz"},"content":"        public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":219,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":220,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":221,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":222,"author":{"gitId":"Graphcalibur"},"content":"        public ObservableList\u003cCompany\u003e getFilteredCompanyList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":223,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"albertsutz"},"content":"        public void updateFilteredCompanyList(Predicate\u003c? super Company\u003e predicate) {","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":231,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"Graphcalibur"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":235,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":236,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"Graphcalibur"},"content":"        public void updateFilteredEventList(Predicate\u003c? super Event\u003e predicate) {","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"albertsutz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":241,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":242,"author":{"gitId":"Graphcalibur"},"content":"        public Entry deleteEntry(int index) {","lastModifiedDate":"2022-03-20"},{"lineNumber":243,"author":{"gitId":"Graphcalibur"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":244,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":245,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"Graphcalibur"},"content":"        public Entry archiveEntry(int index, boolean isArchived) {","lastModifiedDate":"2022-03-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"Graphcalibur"},"content":"            return this.person.isSameEntry(person);","lastModifiedDate":"2022-03-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"Graphcalibur"},"content":"            return personsAdded.stream().anyMatch(person::isSameEntry);","lastModifiedDate":"2022-03-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"albertsutz":38,"Graphcalibur":72,"-":184}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false)));","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false)));","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false, false)));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"                false, false, false).hashCode());","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"                false, false, false).hashCode());","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"Big Bank\";","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"Janice Street\";","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY + \"DB$$$\"; // \u0027$\u0027 not allowed in names","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCompanyName(VALID_COMPANY_AMY)","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCompanyName(VALID_COMPANY_BOB)","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"albertsutz":3,"Graphcalibur":9,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    public void fixPersonsList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"        model.showPersonList(Model.PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    public void execute_validIndexUnfilteredPersonList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        showPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ENTRY_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"albertsutz"},"content":"    public void execute_validIndexFilteredPersonList_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"albertsutz"},"content":"        showPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ENTRY_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"    public void execute_invalidIndexFilteredPersonList_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        showPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"albertsutz"},"content":"    private void showPerson(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredCompanyList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"    private void showEvent(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredCompanyList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredEventList(p -\u003e true);","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"albertsutz"},"content":"    private void showCompany(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredCompanyList(p -\u003e true);","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"albertsutz":26,"Graphcalibur":11,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"albertsutz"},"content":"    private Model model;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        showPerson(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"albertsutz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"albertsutz"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"albertsutz"},"content":"        showPerson(expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"albertsutz"},"content":"        assertCommandFailure(editCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_ENTRY_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"albertsutz"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"albertsutz"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"albertsutz"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"albertsutz"},"content":"    private void showPerson(Model model) {","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredCompanyList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"albertsutz"},"content":"        model.updateFilteredPersonList(p -\u003e true);","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"albertsutz":41,"Graphcalibur":3,"-":146}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        // different company name -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withCompanyName(VALID_COMPANY_BOB).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":3,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false,","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"                true, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"albertsutz"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"                List.\u003cString\u003eof(\"first\"), List.\u003cString\u003eof(\"\"), List.\u003cString\u003eof(\"\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"                SearchTypeUtil.getPredicate(SearchTypeUtil.SearchType.UNARCHIVED_ONLY));","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"                List.\u003cString\u003eof(\"second\"), List.\u003cString\u003eof(\"\"), List.\u003cString\u003eof(\"\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"                SearchTypeUtil.getPredicate(SearchTypeUtil.SearchType.UNARCHIVED_ONLY));","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"albertsutz"},"content":"    // There is no way for FindPersonCommand to receive zeroKeywords as it will be checked by Parser","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"    //@Test","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"albertsutz"},"content":"    //public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"albertsutz"},"content":"    //    String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"albertsutz"},"content":"    //    NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"albertsutz"},"content":"    //    FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"albertsutz"},"content":"    //    expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"albertsutz"},"content":"    //    CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, true, false, false);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"albertsutz"},"content":"    //    assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"albertsutz"},"content":"    //    assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"albertsutz"},"content":"    //}","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"                new PersonContainsKeywordsPredicate(List.\u003cString\u003eof(\"Kurz\", \"Elle\", \"Kunz\"), List.\u003cString\u003eof(\"\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"                        List.\u003cString\u003eof(\"\"), SearchTypeUtil.getPredicate(SearchTypeUtil.SearchType.UNARCHIVED_ONLY));","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false, true, false, false);","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"albertsutz"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"albertsutz"},"content":"    ///**","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"albertsutz"},"content":"    // * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"albertsutz"},"content":"    // */","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"albertsutz"},"content":"    //private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"albertsutz"},"content":"    //    return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"albertsutz"},"content":"    //}","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"albertsutz":33,"Graphcalibur":7,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Graphcalibur":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil.SearchType;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPersonCommand.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"albertsutz"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"    private CommandResult expectedCommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"        model.showPersonList(Model.PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        expectedModel.showPersonList(Model.PREDICATE_SHOW_UNARCHIVED_ONLY);","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"        expectedCommandResult \u003d new CommandResult(String.format(ListPersonCommand.MESSAGE_SUCCESS, \" unarchived\"),","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"                false, false, true, false, false);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"                new ListPersonCommand(SearchType.UNARCHIVED_ONLY), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"                new ListPersonCommand(SearchType.UNARCHIVED_ONLY), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"albertsutz":2,"Graphcalibur":10,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"albertsutz"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"albertsutz"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + COMPANY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + COMPANY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + COMPANY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"                + COMPANY_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        // multiple company names - last company names accepted","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_AMY","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"                + COMPANY_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"albertsutz"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY,","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"albertsutz"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"albertsutz"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB,","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB,","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + COMPANY_DESC_BOB,","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"Graphcalibur"},"content":"        // missing company name prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_COMPANY_BOB,","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_COMPANY_BOB,","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"Graphcalibur"},"content":"        // invalid company name","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COMPANY_DESC","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COMPANY_DESC,","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"Graphcalibur"},"content":"                + COMPANY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"albertsutz"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"albertsutz":7,"Graphcalibur":35,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"albertsutz"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddPersonCommand(person));","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"albertsutz"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"albertsutz"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"albertsutz"},"content":"        String test \u003d FindPersonCommand.COMMAND_WORD + \" n/ \" + keywords.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"albertsutz"},"content":"                test);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"                keywords, List.\u003cString\u003eof(\"\"), List.\u003cString\u003eof(\"\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"                SearchTypeUtil.getPredicate(SearchTypeUtil.SearchType.UNARCHIVED_ONLY)","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"albertsutz"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"albertsutz"},"content":"        assertEquals(new FindPersonCommand(predicate), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD) instanceof ListPersonCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"albertsutz"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD + \" 3\") instanceof ListPersonCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"albertsutz":19,"Graphcalibur":4,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":1,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"albertsutz"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"albertsutz"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"albertsutz"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC, Name.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_COMPANY_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"        String userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_AMY + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"Graphcalibur"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"                .withCompanyName(VALID_COMPANY_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"Graphcalibur"},"content":"        // company","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"Graphcalibur"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"Graphcalibur"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCompanyName(VALID_COMPANY_AMY).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"Graphcalibur"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"albertsutz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"albertsutz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"albertsutz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"Graphcalibur"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + COMPANY_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-20"},{"lineNumber":172,"author":{"gitId":"Graphcalibur"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + COMPANY_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-20"},{"lineNumber":173,"author":{"gitId":"Graphcalibur"},"content":"                + PHONE_DESC_BOB + COMPANY_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"Graphcalibur"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withCompanyName(VALID_COMPANY_BOB)","lastModifiedDate":"2022-03-20"},{"lineNumber":176,"author":{"gitId":"Graphcalibur"},"content":"                .withEmail(VALID_EMAIL_BOB).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"Graphcalibur"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + COMPANY_DESC_BOB","lastModifiedDate":"2022-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"Graphcalibur"},"content":"                .withCompanyName(VALID_COMPANY_BOB).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":197,"author":{"gitId":"albertsutz"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"albertsutz"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"albertsutz":15,"Graphcalibur":26,"-":170}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.commons.core.SearchTypeUtil;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"albertsutz"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"albertsutz"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"albertsutz"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"albertsutz"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"albertsutz"},"content":"                List.\u003cString\u003eof(\"Alice\", \"Bob\"), List.\u003cString\u003eof(\"\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"                List.\u003cString\u003eof(\"\"), SearchTypeUtil.getPredicate(SearchTypeUtil.SearchType.UNARCHIVED_ONLY));","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"albertsutz"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"albertsutz"},"content":"                new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"albertsutz"},"content":"        assertParseSuccess(parser, \" n/ Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        //multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"albertsutz"},"content":"        assertParseSuccess(parser, \" \\n n/  Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"albertsutz":15,"Graphcalibur":2,"-":23}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Graphcalibur":4,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompanyName(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompanyName(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        private final ObservableList\u003cCompany\u003e companies \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"albertsutz"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"Graphcalibur"},"content":"        public ObservableList\u003cCompany\u003e getCompanyList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"Graphcalibur"},"content":"            return companies;","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"albertsutz"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"albertsutz"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"albertsutz"},"content":"            return events;","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"Graphcalibur"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"albertsutz"},"content":"        public void updateCompanyNames(String oldName, String newName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"albertsutz"},"content":"            return;","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"albertsutz"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"albertsutz":9,"Graphcalibur":16,"-":96}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"Graphcalibur"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":2,"-":129}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Graphcalibur":2,"-":36}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Graphcalibur":2,"-":68}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.model.entry.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        // Keywords match phone, email and company name, but does not match name","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Janice\", \"Street\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"                .withEmail(\"alice@email.com\").withCompanyName(\"Janice Street\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":3,"-":72}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Graphcalibur":2,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    public void isSameEntry() {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"        assertTrue(ALICE.isSameEntry(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(ALICE.isSameEntry(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"                .withCompanyName(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        assertTrue(ALICE.isSameEntry(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(ALICE.isSameEntry(editedAlice));","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(BOB.isSameEntry(editedBob));","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"        assertFalse(BOB.isSameEntry(editedBob));","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"        // different company name -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withCompanyName(VALID_COMPANY_BOB).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Graphcalibur":12,"-":80}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Graphcalibur":2,"-":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.UniqueEntryList;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.exceptions.EntryNotFoundException;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private final UniqueEntryList\u003cPerson\u003e uniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompanyName(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"    public void add_duplicatePerson_throwsDuplicateEntryException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntry(null, ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntry(ALICE, null));","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"    public void setPerson_targetPersonNotInList_throwsEntryNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniquePersonList.setEntry(ALICE, ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"    public void setPerson_editedPersonIsSameEntry_success() {","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        uniquePersonList.setEntry(ALICE, ALICE);","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCompanyName(VALID_COMPANY_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"        uniquePersonList.setEntry(ALICE, editedAlice);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"Graphcalibur"},"content":"        uniquePersonList.setEntry(ALICE, BOB);","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"Graphcalibur"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicateEntryException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.setEntry(ALICE, BOB));","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"Graphcalibur"},"content":"    public void remove_personDoesNotExist_throwsEntryNotFoundException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":121,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntries((UniqueEntryList\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"Graphcalibur"},"content":"        uniquePersonList.setEntries(expectedUniquePersonList);","lastModifiedDate":"2022-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntries((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"Graphcalibur"},"content":"        uniquePersonList.setEntries(personList);","lastModifiedDate":"2022-03-11"},{"lineNumber":156,"author":{"gitId":"Graphcalibur"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"Graphcalibur"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicateEntryException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"Graphcalibur"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.setEntries(listWithDuplicatePersons));","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Graphcalibur":34,"-":138}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    private static final String INVALID_COMPANY \u003d \"DB$\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    private static final String VALID_COMPANY \u003d BENSON.getCompanyName().toString();","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_COMPANY, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_COMPANY, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_COMPANY, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_COMPANY, null, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_COMPANY, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_COMPANY, VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"    public void toModelType_invalidCompanyName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_COMPANY, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"    public void toModelType_nullCompanyName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"Graphcalibur"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_COMPANY, VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Graphcalibur":18,"-":91}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Graphcalibur":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/CompanyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Graphcalibur"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Address;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"Graphcalibur"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"Graphcalibur"},"content":" * A utility class to help with building Company objects.","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"Graphcalibur"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"Graphcalibur"},"content":"public class CompanyBuilder {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    public static final String DEFAULT_NAME \u003d \"DBSSS\";","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"Graphcalibur"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"Graphcalibur"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"14 Jurong Street\";","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    private Name name;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"Graphcalibur"},"content":"    private Phone phone;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"Graphcalibur"},"content":"    private Email email;","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    private Address address;","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"     * Creates a {@code CompanyBuilder} with the default details.","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder() {","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"     * Initializes the CompanyBuilder with the data of {@code companyToCopy}.","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder(Company companyToCopy) {","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        name \u003d companyToCopy.getName();","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"        phone \u003d companyToCopy.getPhone();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"        email \u003d companyToCopy.getEmail();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"Graphcalibur"},"content":"        address \u003d companyToCopy.getAddress();","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        tags \u003d new HashSet\u003c\u003e(companyToCopy.getTags());","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code Name} of the {@code Company} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder withName(String name) {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"Graphcalibur"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Company} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"Graphcalibur"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"Graphcalibur"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code Phone} of the {@code Company} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code Email} of the {@code Company} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder withEmail(String email) {","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"Graphcalibur"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code address} of the {@code Company} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"Graphcalibur"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"Graphcalibur"},"content":"    public CompanyBuilder withAddress(String address) {","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"Graphcalibur"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"Graphcalibur"},"content":"        return this;","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"    public Company build() {","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"Graphcalibur"},"content":"        return new Company(name, phone, email, address, tags);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"Graphcalibur"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"Graphcalibur":96}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"        descriptor.setCompanyName(person.getCompanyName());","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code companyName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"    public EditPersonDescriptorBuilder withCompanyName(String companyName) {","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"Graphcalibur"},"content":"        descriptor.setCompanyName(new Name(companyName));","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"albertsutz":1,"Graphcalibur":8,"-":77}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Phone;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"    public static final String DEFAULT_COMPANY \u003d \"DBSSS\";","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"Graphcalibur"},"content":"    private Name companyName;","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        companyName \u003d new Name(DEFAULT_COMPANY);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"        companyName \u003d personToCopy.getCompanyName();","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"Graphcalibur"},"content":"     * Sets the {@code companyName} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"Graphcalibur"},"content":"    public PersonBuilder withCompanyName(String companyName) {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        this.companyName \u003d new Name(companyName);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":92,"author":{"gitId":"Graphcalibur"},"content":"        return new Person(name, companyName, phone, email, tags);","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Graphcalibur":12,"-":83}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"albertsutz"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"albertsutz"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"albertsutz"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"        sb.append(PREFIX_COMPANY + person.getCompanyName().fullName + \" \");;","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"Graphcalibur"},"content":"        descriptor.getCompanyName().ifPresent(companyName -\u003e sb.append(PREFIX_COMPANY)","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"                .append(companyName.fullName).append(\" \"));","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"albertsutz":4,"Graphcalibur":5,"-":54}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Graphcalibur":1,"-":54}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"Graphcalibur"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Company;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"Graphcalibur"},"content":"import seedu.address.model.entry.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withCompanyName(\"DBSSS\")","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"Graphcalibur"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withCompanyName(\"Big Bank\")","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"98765432\").withEmail(\"johnd@example.com\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withCompanyName(\"DBSSS\")","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withCompanyName(\"Janice Street\")","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withCompanyName(\"DBSSS\")","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"9482224\").withEmail(\"werner@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withCompanyName(\"Janice Street\")","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"9482427\").withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withCompanyName(\"Big Bank\")","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"9482442\").withEmail(\"anna@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"Graphcalibur"},"content":"    public static final Company DBSSS \u003d new CompanyBuilder().withName(\"DBSSS\").withPhone(\"91123671\")","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"Graphcalibur"},"content":"            .withEmail(\"dbsss@example.com\").withAddress(\"14 Jurong Street\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"Graphcalibur"},"content":"    public static final Company BIG_BANK \u003d new CompanyBuilder().withName(\"Big Bank\").withPhone(\"94316789\")","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"Graphcalibur"},"content":"            .withEmail(\"bigbank@example.com\").withAddress(\"16 Race Course Road\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"Graphcalibur"},"content":"    public static final Company JANICE_STREET \u003d new CompanyBuilder().withName(\"Janice Street\").withPhone(\"89245223\")","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"Graphcalibur"},"content":"            .withEmail(\"janicestreet@example.com\").withAddress(\"21 Marina Bay Sands\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withCompanyName(\"Janice Street\")","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"8482424\").withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withCompanyName(\"Big Bank\")","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(\"8482131\").withEmail(\"hans@example.com\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withCompanyName(VALID_COMPANY_AMY)","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"Graphcalibur"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withCompanyName(VALID_COMPANY_BOB)","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"Graphcalibur"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"Graphcalibur"},"content":"        for (Company company : getTypicalCompanies()) {","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"Graphcalibur"},"content":"            ab.addCompany(company);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"Graphcalibur"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"Graphcalibur"},"content":"    public static List\u003cCompany\u003e getTypicalCompanies() {","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"Graphcalibur"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DBSSS, BIG_BANK, JANICE_STREET));","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"Graphcalibur"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"Graphcalibur"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Graphcalibur":40,"-":47}}]
